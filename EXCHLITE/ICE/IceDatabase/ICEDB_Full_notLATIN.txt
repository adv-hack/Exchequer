USE [master]
GO
IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = N'IRISCommunicationEngine')
BEGIN
CREATE DATABASE [IRISCommunicationEngine]
END

GO

GO
EXEC dbo.sp_dbcmptlevel @dbname=N'IRISCommunicationEngine', @new_cmptlevel=100
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [IRISCommunicationEngine].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [IRISCommunicationEngine] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET ARITHABORT OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET AUTO_CLOSE ON 
GO
ALTER DATABASE [IRISCommunicationEngine] SET AUTO_CREATE_STATISTICS ON 
GO
ALTER DATABASE [IRISCommunicationEngine] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [IRISCommunicationEngine] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [IRISCommunicationEngine] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE [IRISCommunicationEngine] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET  DISABLE_BROKER 
GO
ALTER DATABASE [IRISCommunicationEngine] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [IRISCommunicationEngine] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [IRISCommunicationEngine] SET  READ_WRITE 
GO
ALTER DATABASE [IRISCommunicationEngine] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [IRISCommunicationEngine] SET  MULTI_USER 
GO
ALTER DATABASE [IRISCommunicationEngine] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [IRISCommunicationEngine] SET DB_CHAINING OFF 
/* For security reasons the login is created disabled and with a random password. */
IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'GHJHyhjghIRISICEhdskjJ432!')
CREATE LOGIN [GHJHyhjghIRISICEhdskjJ432!] WITH PASSWORD=N'HGjkyuifdsnjkUH765iuHJ!', DEFAULT_DATABASE=[IRISCommunicationEngine], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO
IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'NT AUTHORITY\SYSTEM')
CREATE LOGIN [NT AUTHORITY\SYSTEM] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
GO
IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'BUILTIN\Users')
CREATE LOGIN [BUILTIN\Users] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
GO
IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'BUILTIN\Administrators')
CREATE LOGIN [BUILTIN\Administrators] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
GO

/*
EXEC master..sp_addsrvrolemember @loginame = N'GHJHyhjghIRISICEhdskjJ432!', @rolename = N'dbcreator'
GO

EXEC master..sp_addsrvrolemember @loginame = N'GHJHyhjghIRISICEhdskjJ432!', @rolename = N'sysadmin'
GO


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_RESTORE_ICE]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE procedure [dbo].[sp_RESTORE_ICE] @pFile varchar(255)
as 
declare @DBName varchar(128)

select @DBName = ''IrisCommunicationEngine''

declare	@FileName varchar(4000)
select @FileName = @pFile

ALTER DATABASE [IRISCommunicationEngine] SET  SINGLE_USER WITH ROLLBACK IMMEDIATE

restore database @DBName from disk = @FileName   WITH  REPLACE

' 

END
*/

GO
USE [IRISCommunicationEngine]
GO
IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = N'GHJHyhjghIRISICEhdskjJ432!')
CREATE USER [GHJHyhjghIRISICEhdskjJ432!] FOR LOGIN [GHJHyhjghIRISICEhdskjJ432!] WITH DEFAULT_SCHEMA=[dbo]
GO
GRANT ALTER TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY ASYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY APPLICATION ROLE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY ASSEMBLY TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY CERTIFICATE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY DATASPACE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY DATABASE EVENT NOTIFICATION TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY FULLTEXT CATALOG TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY MESSAGE TYPE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY ROLE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY ROUTE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY REMOTE SERVICE BINDING TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY CONTRACT TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY SYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY SCHEMA TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY SERVICE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY DATABASE DDL TRIGGER TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT ALTER ANY USER TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT AUTHENTICATE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT BACKUP DATABASE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT BACKUP LOG TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CONTROL TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CONNECT TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CONNECT REPLICATION TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CHECKPOINT TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE AGGREGATE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE ASYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE ASSEMBLY TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE CERTIFICATE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE DEFAULT TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE DATABASE DDL EVENT NOTIFICATION TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE FUNCTION TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE FULLTEXT CATALOG TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE MESSAGE TYPE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE PROCEDURE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE QUEUE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE ROLE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE ROUTE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE RULE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE REMOTE SERVICE BINDING TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE CONTRACT TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE SYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE SCHEMA TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE SYNONYM TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE SERVICE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE TABLE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE TYPE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE VIEW TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT CREATE XML SCHEMA COLLECTION TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT DELETE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT EXECUTE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT INSERT TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT REFERENCES TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT SELECT TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT SHOWPLAN TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT SUBSCRIBE QUERY NOTIFICATIONS TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT TAKE OWNERSHIP TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT UPDATE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT VIEW DEFINITION TO [GHJHyhjghIRISICEhdskjJ432!]
GO
GRANT VIEW DATABASE STATE TO [GHJHyhjghIRISICEhdskjJ432!]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Contacts]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Contacts](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ContactName] [varchar](255) NOT NULL,
	[ContactMail] [varchar](255) NOT NULL,
    [Company_Id] [int] NOT NULL DEFAULT ((0)),
 CONSTRAINT [PK_AddressBook] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CIS]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CIS](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Outbox_Id] [int] NOT NULL,
	[Outbox_Guid] [varchar](38),
	[IrMark] [varchar](32),
	[CorrelationId] [varchar](48),
	[ClassType] [varchar](255),
	[Polling] [int] NULL CONSTRAINT [DF_CIS_Polling]  DEFAULT ((5)),
	[Redirection] [varchar](max),
	[FileGuid] [varchar](38),
 CONSTRAINT [PK_CIS_1] PRIMARY KEY CLUSTERED 
(
	[Id] ASC,
	[Outbox_Id] ASC,
	[Outbox_Guid] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Contacts]') AND name = N'IX_AddressBook_Mail')
CREATE NONCLUSTERED INDEX [IX_AddressBook_Mail] ON [dbo].[Contacts] 
(
	[ContactMail] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Contacts]') AND name = N'IX_AddressBook_Name')
CREATE NONCLUSTERED INDEX [IX_AddressBook_Name] ON [dbo].[Contacts] 
(
	[ContactName] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ListBook]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ListBook](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ListName] [varchar](255) NOT NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ListItems]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ListItems](
	[List_id] [int] NOT NULL,
	[AddressBook_Id] [int] NOT NULL,
 CONSTRAINT [PK_ListItems] PRIMARY KEY CLUSTERED 
(
	[List_id] ASC,
	[AddressBook_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[System]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[System](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Description] [varchar](16) NOT NULL,
	[Value] [varchar](50) NOT NULL,
 CONSTRAINT [PK_System] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Users]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Users](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserName] [varchar](32) NOT NULL,
	[UserLogin] [varchar](32) NOT NULL,
	[Password] [varchar](16) NOT NULL,
 CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Users]') AND name = N'IX_Users_Login')
CREATE UNIQUE NONCLUSTERED INDEX [IX_Users_Login] ON [dbo].[Users] 
(
	[UserLogin] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Config]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Config](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Description] [varchar](16) NOT NULL,
	[Value] [varchar](50) NOT NULL,
 CONSTRAINT [PK_Config] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rules]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Rules](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Description] [varchar](255) NOT NULL,
 CONSTRAINT [PK_Rules] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_DELETE_IMPPACKAGE]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE procedure [dbo].[sp_DELETE_IMPPACKAGE] 
as 
truncate table imppackage



' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_DELETE_EXPPACKAGE]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE procedure [dbo].[sp_DELETE_EXPPACKAGE] 
as 
truncate table exppackage



' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_BACKUP_ICE]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE procedure [dbo].[sp_BACKUP_ICE] @pFile varchar(255)
as 
declare @DBName varchar(128)

select @DBName = ''IrisCommunicationEngine''

declare	@FileName varchar(4000)
		select @FileName = @pFile

			backup database @DBName
				to disk = @FileName
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ScheduleType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ScheduleType](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Description] [varchar](32) NOT NULL,
 CONSTRAINT [PK_ScheduleType] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ExpPackage](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Company_Id] [int] NULL,
	[Description] [varchar](255) NOT NULL,
	[FileGuid] [varchar](38) NOT NULL,
	[UserReference] [int] NULL CONSTRAINT [DF_ExpPackage_UserReference]  DEFAULT ((0)),
	[PluginLink] [varchar](32) NOT NULL,
 CONSTRAINT [PK_ExpPackage] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND name = N'IX_ExpPackage_Company_Id')
CREATE NONCLUSTERED INDEX [IX_ExpPackage_Company_Id] ON [dbo].[ExpPackage] 
(
	[Company_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND name = N'IX_ExpPackage_Plugin_Link')
CREATE NONCLUSTERED INDEX [IX_ExpPackage_Plugin_Link] ON [dbo].[ExpPackage] 
(
	[PluginLink] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND name = N'IX_PackageId')
CREATE NONCLUSTERED INDEX [IX_PackageId] ON [dbo].[ExpPackage] 
(
	[UserReference] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ImpPackage]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ImpPackage](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Company_Id] [int] NULL,
	[Description] [varchar](255) NOT NULL,
	[FileGuid] [varchar](38) NOT NULL,
	[UserReference] [int] NULL CONSTRAINT [DF_ImpPackage_UserReference]  DEFAULT ((0)),
	[PluginLink] [varchar](32) NOT NULL,
 CONSTRAINT [PK_impPackage] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ImpPackage]') AND name = N'IX_ImpPackage_Company_Id')
CREATE NONCLUSTERED INDEX [IX_ImpPackage_Company_Id] ON [dbo].[ImpPackage] 
(
	[Company_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ImpPackage]') AND name = N'IX_ImpPackage_Plugin_Link')
CREATE NONCLUSTERED INDEX [IX_ImpPackage_Plugin_Link] ON [dbo].[ImpPackage] 
(
	[PluginLink] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Company]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Company](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ExCode] [varchar](16) NOT NULL,
	[Description] [varchar](50) NOT NULL,
	[Periods] [smallint] NOT NULL CONSTRAINT [DF_Company_Periods]  DEFAULT ((12)),
	[Active] [bit] NOT NULL CONSTRAINT [DF_Company_Active]  DEFAULT ((0)),
    [Directory] [varchar] (255) NOT NULL,
	[Guid] [varchar](38) NULL,
	[LastUpdate] [datetime] NULL,
 CONSTRAINT [PK_Company] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Company]') AND name = N'IX_Company_ExCode')
CREATE NONCLUSTERED INDEX [IX_Company_ExCode] ON [dbo].[Company] 
(
	[ExCode] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[IceLog]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[IceLog](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Description] [varchar](255) NOT NULL,
	[Location] [varchar](64) NULL,
	[LastUpdate] [datetime] NOT NULL CONSTRAINT [DF__IceLog__LastUpda__31EC6D26]  DEFAULT ((0)),
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Schedule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Schedule](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Outbox_Id] [int] NOT NULL,
	[Outbox_Guid] [varchar](38) NOT NULL,
	[ScheduleType_Id] [int] NOT NULL,
 CONSTRAINT [PK_Schedule] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Schedule]') AND name = N'IX_Schedule_Outbox_Guid')
CREATE NONCLUSTERED INDEX [IX_Schedule_Outbox_Guid] ON [dbo].[Schedule] 
(
	[Outbox_Guid] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Schedule]') AND name = N'IX_Schedule_Schedule_Type')
CREATE NONCLUSTERED INDEX [IX_Schedule_Schedule_Type] ON [dbo].[Schedule] 
(
	[ScheduleType_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserRule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[UserRule](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[User_Id] [int] NOT NULL,
	[Rule_Id] [int] NOT NULL,
 CONSTRAINT [PK_UserRole] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DaySchedule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[DaySchedule](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Schedule_Id] [int] NOT NULL,
	[StartDate] [datetime] NOT NULL,
	[EndDate] [datetime] NOT NULL,
	[StartTime] [datetime] NOT NULL,
	[AllDays] [bit] NULL CONSTRAINT [DF_DaySchedule_AllDays]  DEFAULT ((0)),
	[WeekDays] [bit] NULL CONSTRAINT [DF_DaySchedule_WeekDays]  DEFAULT ((0)),
	[Everyday] [smallint] NULL,
 CONSTRAINT [PK_DaySchedule] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DaySchedule]') AND name = N'IX_DaySchedule_Shcedule_Id')
CREATE NONCLUSTERED INDEX [IX_DaySchedule_Shcedule_Id] ON [dbo].[DaySchedule] 
(
	[Schedule_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MonthSchedule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MonthSchedule](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Schedule_Id] [int] NOT NULL,
	[Day] [smallint] NOT NULL,
	[StartTime] [datetime] NOT NULL,
	[EndDate] [datetime] NOT NULL,
	[Jan] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Jan]  DEFAULT ((0)),
	[Feb] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Feb]  DEFAULT ((0)),
	[Mar] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Mar]  DEFAULT ((0)),
	[Apr] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Apr]  DEFAULT ((0)),
	[May] [bit] NULL CONSTRAINT [DF_MonthlySchedule_May]  DEFAULT ((0)),
	[Jun] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Jun]  DEFAULT ((0)),
	[Jul] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Jul]  DEFAULT ((0)),
	[Aug] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Aug]  DEFAULT ((0)),
	[Sep] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Sep]  DEFAULT ((0)),
	[Oct] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Oct]  DEFAULT ((0)),
	[Nov] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Nov]  DEFAULT ((0)),
	[Dec] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Dec]  DEFAULT ((0)),
 CONSTRAINT [PK_MonthlySchedule] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MonthSchedule]') AND name = N'IX_MonthlySchedule_Shcedule_Id')
CREATE NONCLUSTERED INDEX [IX_MonthlySchedule_Shcedule_Id] ON [dbo].[MonthSchedule] 
(
	[Schedule_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OneTimeSchedule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[OneTimeSchedule](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Schedule_Id] [int] NOT NULL,
	[StartDate] [datetime] NOT NULL,
	[StartTime] [datetime] NOT NULL,
	[Process] [bit] NOT NULL,
 CONSTRAINT [PK_OneTimeSchedule] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OneTimeSchedule]') AND name = N'IX_OneTimeSchedule_Schedule_Id')
CREATE NONCLUSTERED INDEX [IX_OneTimeSchedule_Schedule_Id] ON [dbo].[OneTimeSchedule] 
(
	[Schedule_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[WeekSchedule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[WeekSchedule](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Schedule_Id] [int] NOT NULL,
	[EveryWeek] [smallint] NOT NULL,
	[StartTime] [datetime] NOT NULL,
	[EndDate] [datetime] NOT NULL,
	[Monday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Monday]  DEFAULT ((0)),
	[Tuesday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Tuesday]  DEFAULT ((0)),
	[Wednesday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Wednesday]  DEFAULT ((0)),
	[Thursday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Thursday]  DEFAULT ((0)),
	[Friday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Friday]  DEFAULT ((0)),
	[Saturday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Saturday]  DEFAULT ((0)),
	[Sunday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Sunday]  DEFAULT ((0)),
 CONSTRAINT [PK_WeekSchedule_1] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[WeekSchedule]') AND name = N'IX_WeekSchedule_Shcedule_Id')
CREATE NONCLUSTERED INDEX [IX_WeekSchedule_Shcedule_Id] ON [dbo].[WeekSchedule] 
(
	[Schedule_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Outbox]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Outbox](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Guid] [varchar](38) NOT NULL,
	[Company_Id] [int] NOT NULL CONSTRAINT [DF_Outbox_Company_Id]  DEFAULT ((0)),
	[Subject] [varchar](255) NOT NULL,
	[UserFrom] [varchar](255) NOT NULL,
	[UserTo] [varchar](255) NOT NULL,
	[Package_Id] [int] NOT NULL CONSTRAINT [DF__Outbox__MessageT__0EA330E9]  DEFAULT ((0)),
	[Status] [tinyint] NOT NULL CONSTRAINT [DF__Outbox__Status__0F975522]  DEFAULT ((0)),
	[Param1] [varchar](50) NULL,
	[Param2] [varchar](50) NULL,
	[TotalItems] [int] NOT NULL CONSTRAINT [DF__Outbox__TotalIte__300424B4]  DEFAULT ((0)),
	[TotalDone] [int] NOT NULL CONSTRAINT [DF_Outbox_TotalDone]  DEFAULT ((0)),	
	[Sent] [datetime] NOT NULL CONSTRAINT [DF__Outbox__LastUpda__32E0915F]  DEFAULT ((0)),
	[Mode] [smallint] NULL CONSTRAINT [DF_Outbox_Mode]  DEFAULT ((-1)),
	[LastUpdate] [datetime] NULL,
 CONSTRAINT [PK_Outbox_1] PRIMARY KEY CLUSTERED 
(
	[Id] ASC,
	[Guid] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Outbox]') AND name = N'IX_Outbox_Company_Id')
CREATE NONCLUSTERED INDEX [IX_Outbox_Company_Id] ON [dbo].[Outbox] 
(
	[Company_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Outbox]') AND name = N'IX_Outbox_Sent')
CREATE NONCLUSTERED INDEX [IX_Outbox_Sent] ON [dbo].[Outbox] 
(
	[Sent] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Inbox]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Inbox](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Guid] [varchar](38) NOT NULL,
	[Company_Id] [int] NOT NULL CONSTRAINT [DF_Inbox_Company_Id]  DEFAULT ((0)),
	[Subject] [varchar](255) NOT NULL,
	[UserFrom] [varchar](255) NOT NULL,
	[UserTo] [varchar](255) NOT NULL,
	[Package_Id] [int] NOT NULL,
	[TotalItems] [int] NOT NULL CONSTRAINT [DF_Inbox_TotalItems]  DEFAULT ((0)),
	[TotalDone] [int] NOT NULL CONSTRAINT [DF_Inbox_TotalDone]  DEFAULT ((0)),
	[Status] [tinyint] NOT NULL,
	[Received] [datetime] NOT NULL CONSTRAINT [DF__Inbox__LastUpdat__30F848ED]  DEFAULT ((0)),
	[Mode] [smallint] NULL CONSTRAINT [DF_Inbox_Mode]  DEFAULT ((-1)),
	[LastUpdate] [datetime] NULL,
 CONSTRAINT [PK_Inbox_1] PRIMARY KEY CLUSTERED 
(
	[Id] ASC,
	[Guid] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Inbox]') AND name = N'IX_Inbox_CompanyId')
CREATE NONCLUSTERED INDEX [IX_Inbox_CompanyId] ON [dbo].[Inbox] 
(
	[Company_Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Inbox]') AND name = N'IX_Inbox_Received')
CREATE NONCLUSTERED INDEX [IX_Inbox_Received] ON [dbo].[Inbox] 
(
	[Received] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_DELETE_ICELOG]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE procedure [dbo].[sp_DELETE_ICELOG] @pDays int
as  
delete from icelog where lastupdate <  DATEADD(dd, - @pDays, GETDATE())


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_UPDATE_ICELOG]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

create procedure [dbo].[sp_UPDATE_ICELOG] @pDesc varchar(255), @pLocation varchar(64)
as 

if (@pDesc <> '''') and (@pLocation <> '''')
  insert into icelog (description, location, lastupdate) values (@pDesc, @pLocation, getdate()) ' 
END
GO
USE [IRISCommunicationEngine]
GO
USE [IRISCommunicationEngine]
GO
USE [IRISCommunicationEngine]
GO
USE [IRISCommunicationEngine]
GO
USE [IRISCommunicationEngine]
GO
USE [IRISCommunicationEngine]
GO
USE [IRISCommunicationEngine]
GO
USE [IRISCommunicationEngine]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Schedule_Outbox]') AND parent_object_id = OBJECT_ID(N'[dbo].[Schedule]'))
ALTER TABLE [dbo].[Schedule]  WITH CHECK ADD  CONSTRAINT [FK_Schedule_Outbox] FOREIGN KEY([Outbox_Id], [Outbox_Guid])
REFERENCES [dbo].[Outbox] ([Id], [Guid])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Schedule_ScheduleType]') AND parent_object_id = OBJECT_ID(N'[dbo].[Schedule]'))
ALTER TABLE [dbo].[Schedule]  WITH CHECK ADD  CONSTRAINT [FK_Schedule_ScheduleType] FOREIGN KEY([ScheduleType_Id])
REFERENCES [dbo].[ScheduleType] ([Id])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_UserRule_Rules]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserRule]'))
ALTER TABLE [dbo].[UserRule]  WITH CHECK ADD  CONSTRAINT [FK_UserRule_Rules] FOREIGN KEY([Rule_Id])
REFERENCES [dbo].[Rules] ([Id])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_UserRule_User]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserRule]'))
ALTER TABLE [dbo].[UserRule]  WITH CHECK ADD  CONSTRAINT [FK_UserRule_User] FOREIGN KEY([User_Id])
REFERENCES [dbo].[Users] ([Id])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_DaySchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[DaySchedule]'))
ALTER TABLE [dbo].[DaySchedule]  WITH CHECK ADD  CONSTRAINT [FK_DaySchedule_Schedule] FOREIGN KEY([Schedule_Id])
REFERENCES [dbo].[Schedule] ([Id])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MonthSchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[MonthSchedule]'))
ALTER TABLE [dbo].[MonthSchedule]  WITH CHECK ADD  CONSTRAINT [FK_MonthSchedule_Schedule] FOREIGN KEY([Schedule_Id])
REFERENCES [dbo].[Schedule] ([Id])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_OneTimeSchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[OneTimeSchedule]'))
ALTER TABLE [dbo].[OneTimeSchedule]  WITH CHECK ADD  CONSTRAINT [FK_OneTimeSchedule_Schedule] FOREIGN KEY([Schedule_Id])
REFERENCES [dbo].[Schedule] ([Id])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_WeekSchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[WeekSchedule]'))
ALTER TABLE [dbo].[WeekSchedule]  WITH CHECK ADD  CONSTRAINT [FK_WeekSchedule_Schedule] FOREIGN KEY([Schedule_Id])
REFERENCES [dbo].[Schedule] ([Id])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CIS_Outbox1]') AND parent_object_id = OBJECT_ID(N'[dbo].[CIS]'))
ALTER TABLE [dbo].[CIS]  WITH CHECK ADD  CONSTRAINT [FK_CIS_Outbox1] FOREIGN KEY([Outbox_Id], [Outbox_Guid])
REFERENCES [dbo].[Outbox] ([Id], [Guid])
ON DELETE CASCADE
GO

sp_configure 'show advanced options', 1;
GO
RECONFIGURE;
GO
sp_configure 'remote access', 1;
GO
RECONFIGURE;
GO
sp_configure 'show advanced options', 0;
GO
RECONFIGURE;
GO

GO
SET ANSI_PADDING OFF
GO
USE [IRISCommunicationEngine]
GO

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EmailAccounts]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[EmailAccounts](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[YourEmail] [varchar](255) NOT NULL,
	[EmailSystem_ID] [int] NOT NULL,
	[YourName] [varchar](50) NULL,
	[ServerType] [varchar](16) NULL,
	[IsDefault] [bit] NULL CONSTRAINT [DF_Table_1_Default]  DEFAULT ((0)),
	[IncomingServer] [varchar](255) NULL,
	[OutgoingServer] [varchar](255) NULL,
	[Username] [varchar](32) NULL,
	[Password] [varchar](255) NULL,
	[IncomingPort] [int] NULL CONSTRAINT [DF_EmailAccounts_IncomingPort]  DEFAULT ((110)),
	[OutgoingPort] [int] NULL CONSTRAINT [DF_EmailAccounts_OutgoingPort]  DEFAULT ((25)),
	[Authentication] [bit] NULL CONSTRAINT [DF_EmailAccounts_Authentication]  DEFAULT ((0)),
	[OutgoingUsername] [varchar](32) NULL,
	[OutgoingPassword] [varchar](255) NULL,
	[UseSSLIncomingPort] [bit] NULL CONSTRAINT [DF_EmailAccounts_UseSSLIncomingPort]  DEFAULT ((0)),
	[UseSSLOutgoingPort] [bit] NULL CONSTRAINT [DF_EmailAccounts_UseSSLOutgoingPort]  DEFAULT ((0)),
	[MailBoxName] [varchar](50) NULL,
	[MailBoxSeparator] [char](1) NULL CONSTRAINT [DF_EmailAccounts_MailBoxSeparator]  DEFAULT ('/'),
 CONSTRAINT [PK_EmailAccounts] PRIMARY KEY CLUSTERED 
(
	[ID] ASC,
	[YourEmail] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EmailSystem]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[EmailSystem](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ServerType] [varchar](16) NOT NULL,
	[Description] [varchar](255) NOT NULL,
	[IncomingGuid] [varchar](38) NOT NULL,
	[OutgoingGuid] [varchar](38) NOT NULL,
	[IsActive] [bit] NULL CONSTRAINT [DF_EmailSystem_IsActive]  DEFAULT ((0)),
 CONSTRAINT [PK_EmailSystem] PRIMARY KEY CLUSTERED 
(
	[ID] ASC,
	[ServerType] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO



IF NOT EXISTS (SELECT value FROM [dbo].[system] WHERE description = N'version')
  insert into [dbo].[system] (description, value) values (N'version', N'1.0.0.0')
Go
