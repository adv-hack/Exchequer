{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f213\froman\fcharset238\fprq2 Times New Roman CE;}{\f214\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f216\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f217\froman\fcharset162\fprq2 Times New Roman Tur;}{\f218\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f219\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f220\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f221\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f233\fmodern\fcharset238\fprq1 Courier New CE;}{\f234\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f236\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f237\fmodern\fcharset162\fprq1 Courier New Tur;}{\f238\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f239\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f240\fmodern\fcharset186\fprq1 Courier New Baltic;}
{\f241\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 Plain Text;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid3367764\rsid7484978\rsid13635367\rsid14109227\rsid15479531}{\*\generator Microsoft Word 11.0.5604;}
{\info{\title USE [master]}{\author IRIS}{\operator IRIS}{\creatim\yr2006\mo11\dy16\hr16\min9}{\revtim\yr2006\mo11\dy16\hr16\min9}{\version2}{\edmins1}{\nofpages25}{\nofwords4788}{\nofchars27298}{\*\company IRIS}{\nofcharsws32022}{\vern24689}}
\paperw15840\paperh12240\margl1440\margr1440\margt1321\margb1321 \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440\dgvorigin1321\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct
\asianbrkrule\rsidroot15479531\newtblstyruls\nogrowautofit \fet0\sectd \lndscpsxn\linex0\headery709\footery709\colsx708\endnhere\sectlinegrid360\sectdefaultcl\sectrsid7484978\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}
{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9
\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1389008 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\insrsid13635367\charrsid13635367 USE [master]
\par GO
\par IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = N'IRISCommunicationEngine')
\par BEGIN
\par CREATE DATABASE [IRISCommunicationEngine]
\par END
\par 
\par GO
\par 
\par GO
\par EXEC dbo.sp_dbcmptlevel @dbname=N'IRISCommunicationEngine', @new_cmptlevel=90
\par GO
\par IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
\par begin
\par EXEC [IRISCommunicationEngine].[dbo].[sp_fulltext_database] @action = 'enable'
\par end
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET ANSI_NULL_DEFAULT OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET ANSI_NULLS OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET ANSI_PADDING OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET ANSI_WARNINGS OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET ARITHABORT OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET AUTO_CLOSE ON 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET AUTO_CREATE_STATISTICS ON 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET AUTO_SHRINK OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET AUTO_UPDATE_STATISTICS ON 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET CURSOR_CLOSE_ON_COMMIT OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET CURSOR_DEFAULT  GLOBAL 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET CONCAT_NULL_YIELDS_NULL OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET NUMERIC_ROUNDABORT OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET QUOTED_IDENTIFIER OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET RECURSIVE_TRIGGERS OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET  DISABLE_BROKER 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET DATE_CORRELATION_OPTIMIZATION OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET TRUSTWORTHY OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET ALLOW_SNAPSHOT_ISOLATION OFF 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET PARAMETERIZATION SIMPLE 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET  READ_WRITE 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET RECOVERY SIMPLE 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET  MULTI_USER 
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET PAGE_VERIFY CHECKSUM  
\par GO
\par ALTER DATABASE [IRISCommunicationEngine] SET DB_CHAINING OFF 
\par /* For security reasons the login is created disabled and with a random password. */
\par IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'GHJHyhjghIRISICEhdskjJ432!')
\par CREATE LOGIN [GHJHyhjghIRISICEhdskjJ432!] WITH PASSWORD=N'HGjkyuifdsnjkUH765iuHJ!', DEFAULT_DATABASE=[IRISCommunicationEngine], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=ON, CHECK_POLICY=ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'NT AUTHORITY\\SYSTEM')
\par CREATE LOGIN [NT AUTHORITY\\SYSTEM] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'BUILTIN\\Users')
\par CREATE LOGIN [BUILTIN\\Users] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = N'BUILTIN\\Administrators')
\par CREATE LOGIN [BUILTIN\\Administrators] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
\par GO
\par 
\par /*
\par EXEC master..sp_addsrvrolemember @loginame = N'GHJHyhjghIRISICEhdskjJ432!', @rolename = N'dbcreator'
\par GO
\par 
\par EXEC master..sp_addsrvrolemember @loginame = N'GHJHyhjghIRISICEhdskjJ432!', @rolename = N'sysadmin'
\par GO
\par 
\par 
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_RESTORE_ICE]') AND type in (N'P', N'PC'))
\par BEGIN
\par EXEC dbo.sp_executesql @statement = N'
\par 
\par CREATE procedure [dbo].[sp_RESTORE_ICE] @pFile varchar(255)
\par as 
\par declare @DBName varchar(128)
\par 
\par select @DBName = ''IrisCommunicationEngine''
\par 
\par declare\tab @FileName varchar(4000)
\par select @FileName = @pFile
\par 
\par ALTER DATABASE [IRISCommunicationEngine] SET  SINGLE_USER WITH ROLLBACK IMMEDIATE
\par 
\par restore database @DBName from disk = @FileName   WITH  REPLACE
\par 
\par ' 
\par 
\par END
\par */
\par 
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = N'GHJHyhjghIRISICEhdskjJ432!')
\par CREATE USER [GHJHyhjghIRISICEhdskjJ432!] FOR LOGIN [GHJHyhjghIRISICEhdskjJ432!] WITH DEFAULT_SCHEMA=[dbo]
\par GO
\par GRANT ALTER TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY ASYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY APPLICATION ROLE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY ASSEMBLY TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY CERTIFICATE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY DATASPACE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY DATABASE EVENT NOTIFICATION TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY FULLTEXT CATALOG TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY MESSAGE TYPE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY ROLE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY ROUTE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY REMOTE SERVICE BINDING TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY CONTRACT TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY SYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY SCHEMA TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY SERVICE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY DATABASE DDL TRIGGER TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT ALTER ANY USER TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT AUTHENTICATE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT BACKUP DATABASE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT BACKUP LOG TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CONTROL TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CONNECT TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CONNECT REPLICATION TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CHECKPOINT TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE AGGREGATE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE ASYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE ASSEMBLY TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE CERTIFICATE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE DEFAULT TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE DATABASE DDL EVENT NOTIFICATION TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE FUNCTION TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE FULLTEXT CATALOG TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE MESSAGE TYPE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE PROCEDURE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE QUEUE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE ROLE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE ROUTE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE RULE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE REMOTE SERVICE BINDING TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE CONTRACT TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE SYMMETRIC KEY TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE SCHEMA TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE SYNONYM TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE SERVICE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE TABLE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE TYPE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE VIEW TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT CREATE XML SCHEMA COLLECTION TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT DELETE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT EXECUTE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT INSERT TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT REFERENCES TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT SELECT TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT SHOWPLAN TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT SUBSCRIBE QUERY NOTIFICATIONS TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT TAKE OWNERSHIP TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT UPDATE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT VIEW DEFINITION TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par GRANT VIEW DATABASE STATE TO [GHJHyhjghIRISICEhdskjJ432!]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Contacts]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Contacts](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [ContactName] [varchar](255) NOT NULL,
\par \tab [ContactMail] [varchar](255) NOT NULL,
\par     [Company_Id] [int] NOT NULL DEFAULT ((0)),
\par  CONSTRAINT [PK_AddressBook] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par SET ANSI_PADDING ON
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CIS]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[CIS](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Outbox_Id] [int] NOT NULL,
\par \tab [Outbox_Guid] [varchar](38),
\par \tab [IrMark] [varchar](32),
\par \tab [CorrelationId] [varchar](48),
\par \tab [ClassType] [varchar](255),
\par \tab [Polling] [int] NULL CONSTRAINT [DF_CIS_Polling]  DEFAULT ((5)),
\par \tab [Redirection] [varchar](max),
\par \tab [FileGuid] [varchar](38),
\par  CONSTRAINT [PK_CIS_1] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC,
\par \tab [Outbox_Id] ASC,
\par \tab [Outbox_Guid] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Contacts]') AND name = N'IX_AddressBook_Mail')
\par CREATE NONCLUSTERED INDEX [IX_AddressBook_Mail] ON [dbo].[Contacts] 
\par (
\par \tab [ContactMail] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Contacts]') AND name = N'IX_AddressBook_Name')
\par CREATE NONCLUSTERED INDEX [IX_AddressBook_Name] ON [dbo].[Contacts] 
\par (
\par \tab [ContactName] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ListBook]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[ListBook](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [ListName] [varchar](255) NOT NULL
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ListItems]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[ListItems](
\par \tab [List_id] [int] NOT NULL,
\par \tab [AddressBook_Id] [int] NOT NULL,
\par  CONSTRAINT [PK_ListItems] PRIMARY KEY CLUSTERED 
\par (
\par \tab [List_id] ASC,
\par \tab [AddressBook_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[System]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[System](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Description] [varchar](16) NOT NULL,
\par \tab [Value] [varchar](50) NOT NULL,
\par  CONSTRAINT [PK_System] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Users]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Users](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [UserName] [varchar](32) NOT NULL,
\par \tab [UserLogin] [varchar](32) NOT NULL,
\par \tab [Password] [varchar](16) NOT NULL,
\par  CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Users]') AND name = N'IX_Users_Login')
\par CREATE UNIQUE NONCLUSTERED INDEX [IX_Users_Login] ON [dbo].[Users] 
\par (
\par \tab [UserLogin] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Config]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Config](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Description] [varchar](16) NOT NULL,
\par \tab [Value] [varchar](50) NOT NULL,
\par  CONSTRAINT [PK_Config] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rules]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Rules](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Description] [varchar](255) NOT NULL,
\par  CONSTRAINT [PK_Rules] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_DELETE_IMPPACKAGE]') AND type in (N'P', N'PC'))
\par BEGIN
\par EXEC dbo.sp_executesql @statement = N'
\par 
\par 
\par 
\par CREATE procedure [dbo].[sp_DELETE_IMPPACKAGE] 
\par as 
\par truncate table imppackage
\par 
\par 
\par 
\par ' 
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_DELETE_EXPPACKAGE]') AND type in (N'P', N'PC'))
\par BEGIN
\par EXEC dbo.sp_executesql @statement = N'
\par 
\par 
\par 
\par CREATE procedure [dbo].[sp_DELETE_EXPPACKAGE] 
\par as 
\par truncate table exppackage
\par 
\par 
\par 
\par ' 
\par END
\par 
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_BACKUP_ICE]') AND type in (N'P', N'PC'))
\par BEGIN
\par EXEC dbo.sp_executesql @statement = N'
\par 
\par CREATE procedure [dbo].[sp_BACKUP_ICE] @pFile varchar(255)
\par as 
\par declare @DBName varchar(128)
\par 
\par select @DBName = ''IrisCommunicationEngine''
\par 
\par declare\tab @FileName varchar(4000)
\par \tab \tab select @FileName = @pFile
\par 
\par \tab \tab \tab backup database @DBName
\par \tab \tab \tab \tab to disk = @FileName
\par ' 
\par END
\par 
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ScheduleType]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[ScheduleType](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Description] [varchar](32) NOT NULL,
\par  CONSTRAINT [PK_ScheduleType] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[ExpPackage](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Company_Id] [int] NULL,
\par \tab [Description] [varchar](255) NOT NULL,
\par \tab [FileGuid] [varchar](38) NOT NULL,
\par \tab [UserReference] [int] NULL CONSTRAINT [DF_ExpPackage_UserReference]  DEFAULT ((0)),
\par \tab [PluginLink] [varchar](32) NOT NULL,
\par  CONSTRAINT [PK_ExpPackage] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND name = N'IX_ExpPackage_Company_Id')
\par CREATE NONCLUSTERED INDEX [IX_ExpPackage_Company_Id] ON [dbo].[ExpPackage] 
\par (
\par \tab [Company_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND name = N'IX_ExpPackage_Plugin_Link')
\par CREATE NONCLUSTERED INDEX [IX_ExpPackage_Plugin_Link] ON [dbo].[ExpPackage] 
\par (
\par \tab [PluginLink] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ExpPackage]') AND name = N'IX_PackageId')
\par CREATE NONCLUSTERED INDEX [IX_PackageId] ON [dbo].[ExpPackage] 
\par (
\par \tab [UserReference] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ImpPackage]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[ImpPackage](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Company_Id] [int] NULL,
\par \tab [Description] [varchar](255) NOT NULL,
\par \tab [FileGuid] [varchar](38) NOT NULL,
\par \tab [UserReference] [int] NULL CONSTRAINT [DF_ImpPackage_UserReference]  DEFAULT ((0)),
\par \tab [PluginLink] [varchar](32) NOT NULL,
\par  CONSTRAINT [PK_impPackage] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ImpPackage]') AND name = N'IX_ImpPackage_Company_Id')
\par CREATE NONCLUSTERED INDEX [IX_ImpPackage_Company_Id] ON [dbo].[ImpPackage] 
\par (
\par \tab [Company_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ImpPackage]') AND name = N'IX_ImpPackage_Plugin_Link')
\par CREATE NONCLUSTERED INDEX [IX_ImpPackage_Plugin_Link] ON [dbo].[ImpPackage] 
\par (
\par \tab [PluginLink] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Company]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Company](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [ExCode] [varchar](16) NOT NULL,
\par \tab [Description] [varchar](50) NOT NULL,
\par \tab [Periods] [smallint] NOT NULL CONSTRAINT [DF_Company_Periods]  DEFAULT ((12)),
\par \tab [Active] [bit] NOT NULL CONSTRAINT [DF_Company_Active]  DEFAULT ((0)),
\par     [Directory] [varchar] (255) NOT NULL,
\par \tab [Guid] [varchar](38) NULL,
\par \tab [LastUpdate] [datetime] NULL,
\par  CONSTRAINT [PK_Company] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Company]') AND name = N'IX_Company_ExCode')
\par CREATE UNIQUE NONCLUSTERED INDEX [IX_Company_ExCode] ON [dbo].[Company] 
\par (
\par \tab [ExCode] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[IceLog]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[IceLog](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Description] [varchar](255) NOT NULL,
\par \tab [Location] [varchar](64) NULL,
\par \tab [LastUpdate] [datetime] NOT NULL CONSTRAINT [DF__IceLog__LastUpda__31EC6D26]  DEFAULT ((0)),
\par PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Schedule]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Schedule](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Outbox_Id] [int] NOT NULL,
\par \tab [Outbox_Guid] [varchar](38) NOT NULL,
\par \tab [ScheduleType_Id] [int] NOT NULL,
\par  CONSTRAINT [PK_Schedule] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Schedule]') AND name = N'IX_Schedule_Outbox_Guid')
\par CREATE NONCLUSTERED INDEX [IX_Schedule_Outbox_Guid] ON [dbo].[Schedule] 
\par (
\par \tab [Outbox_Guid] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Schedule]') AND name = N'IX_Schedule_Schedule_Type')
\par CREATE NONCLUSTERED INDEX [IX_Schedule_Schedule_Type] ON [dbo].[Schedule] 
\par (
\par \tab [ScheduleType_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserRule]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[UserRule](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [User_Id] [int] NOT NULL,
\par \tab [Rule_Id] [int] NOT NULL,
\par  CONSTRAINT [PK_UserRole] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DaySchedule]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[DaySchedule](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Schedule_Id] [int] NOT NULL,
\par \tab [StartDate] [datetime] NOT NULL,
\par \tab [EndDate] [datetime] NOT NULL,
\par \tab [StartTime] [datetime] NOT NULL,
\par \tab [AllDays] [bit] NULL CONSTRAINT [DF_DaySchedule_AllDays]  DEFAULT ((0)),
\par \tab [WeekDays] [bit] NULL CONSTRAINT [DF_DaySchedule_WeekDays]  DEFAULT ((0)),
\par \tab [Everyday] [smallint] NULL,
\par  CONSTRAINT [PK_DaySchedule] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DaySchedule]') AND name = N'IX_DaySchedule_Shcedule_Id')
\par CREATE NONCLUSTERED INDEX [IX_DaySchedule_Shcedule_Id] ON [dbo].[DaySchedule] 
\par (
\par \tab [Schedule_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MonthSchedule]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[MonthSchedule](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Schedule_Id] [int] NOT NULL,
\par \tab [Day] [smallint] NOT NULL,
\par \tab [StartTime] [datetime] NOT NULL,
\par \tab [EndDate] [datetime] NOT NULL,
\par \tab [Jan] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Jan]  DEFAULT ((0)),
\par \tab [Feb] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Feb]  DEFAULT ((0)),
\par \tab [Mar] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Mar]  DEFAULT ((0)),
\par \tab [Apr] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Apr]  DEFAULT ((0)),
\par \tab [May] [bit] NULL CONSTRAINT [DF_MonthlySchedule_May]  DEFAULT ((0)),
\par \tab [Jun] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Jun]  DEFAULT ((0)),
\par \tab [Jul] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Jul]  DEFAULT ((0)),
\par \tab [Aug] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Aug]  DEFAULT ((0)),
\par \tab [Sep] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Sep]  DEFAULT ((0)),
\par \tab [Oct] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Oct]  DEFAULT ((0)),
\par \tab [Nov] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Nov]  DEFAULT ((0)),
\par \tab [Dec] [bit] NULL CONSTRAINT [DF_MonthlySchedule_Dec]  DEFAULT ((0)),
\par  CONSTRAINT [PK_MonthlySchedule] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MonthSchedule]') AND name = N'IX_MonthlySchedule_Shcedule_Id')
\par CREATE NONCLUSTERED INDEX [IX_MonthlySchedule_Shcedule_Id] ON [dbo].[MonthSchedule] 
\par (
\par \tab [Schedule_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OneTimeSchedule]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[OneTimeSchedule](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Schedule_Id] [int] NOT NULL,
\par \tab [StartDate] [datetime] NOT NULL,
\par \tab [StartTime] [datetime] NOT NULL,
\par \tab [Process] [bit] NOT NULL,
\par  CONSTRAINT [PK_OneTimeSchedule] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OneTimeSchedule]') AND name = N'IX_OneTimeSchedule_Schedule_Id')
\par CREATE NONCLUSTERED INDEX [IX_OneTimeSchedule_Schedule_Id] ON [dbo].[OneTimeSchedule] 
\par (
\par \tab [Schedule_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[WeekSchedule]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[WeekSchedule](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Schedule_Id] [int] NOT NULL,
\par \tab [EveryWeek] [smallint] NOT NULL,
\par \tab [StartTime] [datetime] NOT NULL,
\par \tab [EndDate] [datetime] NOT NULL,
\par \tab [Monday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Monday]  DEFAULT ((0)),
\par \tab [Tuesday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Tuesday]  DEFAULT ((0)),
\par \tab [Wednesday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Wednesday]  DEFAULT ((0)),
\par \tab [Thursday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Thursday]  DEFAULT ((0)),
\par \tab [Friday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Friday]  DEFAULT ((0)),
\par \tab [Saturday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Saturday]  DEFAULT ((0)),
\par \tab [Sunday] [bit] NULL CONSTRAINT [DF_WeekSchedule_Sunday]  DEFAULT ((0)),
\par  CONSTRAINT [PK_WeekSchedule_1] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[WeekSchedule]') AND name = N'IX_WeekSchedule_Shcedule_Id')
\par CREATE NONCLUSTERED INDEX [IX_WeekSchedule_Shcedule_Id] ON [dbo].[WeekSchedule] 
\par (
\par \tab [Schedule_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Outbox]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Outbox](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Guid] [varchar](38) NOT NULL,
\par \tab [Company_Id] [int] NOT NULL CONSTRAINT [DF_Outbox_Company_Id]  DEFAULT ((0)),
\par \tab [Subject] [varchar](255) NOT NULL,
\par \tab [UserFrom] [varchar](255) NOT NULL,
\par \tab [UserTo] [varchar](255) NOT NULL,
\par \tab [Package_Id] [int] NOT NULL CONSTRAINT [DF__Outbox__MessageT__0EA330E9]  DEFAULT ((0)),
\par \tab [Status] [tinyint] NOT NULL CONSTRAINT [DF__Outbox__Status__0F975522]  DEFAULT ((0)),
\par \tab [Param1] [varchar](50) NULL,
\par \tab [Param2] [varchar](50) NULL,
\par \tab [TotalItems] [smallint] NOT NULL CONSTRAINT [DF__Outbox__TotalIte__300424B4]  DEFAULT ((0)),\tab 
\par \tab [Sent] [datetime] NOT NULL CONSTRAINT [DF__Outbox__LastUpda__32E0915F]  DEFAULT ((0)),
\par \tab [Mode] [smallint] NULL CONSTRAINT [DF_Outbox_Mode]  DEFAULT ((-1)),
\par \tab [LastUpdate] [datetime] NULL,
\par  CONSTRAINT [PK_Outbox_1] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC,
\par \tab [Guid] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Outbox]') AND name = N'IX_Outbox_Company_Id')
\par CREATE NONCLUSTERED INDEX [IX_Outbox_Company_Id] ON [dbo].[Outbox] 
\par (
\par \tab [Company_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Outbox]') AND name = N'IX_Outbox_Sent')
\par CREATE NONCLUSTERED INDEX [IX_Outbox_Sent] ON [dbo].[Outbox] 
\par (
\par \tab [Sent] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Inbox]') AND type in (N'U'))
\par BEGIN
\par CREATE TABLE [dbo].[Inbox](
\par \tab [Id] [int] IDENTITY(1,1) NOT NULL,
\par \tab [Guid] [varchar](38) NOT NULL,
\par \tab [Company_Id] [int] NOT NULL CONSTRAINT [DF_Inbox_Company_Id]  DEFAULT ((0)),
\par \tab [Subject] [varchar](255) NOT NULL,
\par \tab [UserFrom] [varchar](255) NOT NULL,
\par \tab [UserTo] [varchar](255) NOT NULL,
\par \tab [Package_Id] [int] NOT NULL,
\par \tab [TotalItems] [smallint] NOT NULL,
\par \tab [Status] [tinyint] NOT NULL,
\par \tab [Received] [datetime] NOT NULL CONSTRAINT [DF__Inbox__LastUpdat__30F848ED]  DEFAULT ((0)),
\par \tab [Mode] [smallint] NULL CONSTRAINT [DF_Inbox_Mode]  DEFAULT ((-1)),
\par \tab [LastUpdate] [datetime] NULL,
\par  CONSTRAINT [PK_Inbox_1] PRIMARY KEY CLUSTERED 
\par (
\par \tab [Id] ASC,
\par \tab [Guid] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par ) ON [PRIMARY]
\par END
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Inbox]') AND name = N'IX_Inbox_CompanyId')
\par CREATE NONCLUSTERED INDEX [IX_Inbox_CompanyId] ON [dbo].[Inbox] 
\par (
\par \tab [Company_Id] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par 
\par IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Inbox]') AND name = N'IX_Inbox_Received')
\par CREATE NONCLUSTERED INDEX [IX_Inbox_Received] ON [dbo].[Inbox] 
\par (
\par \tab [Received] ASC
\par )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_DELETE_ICELOG]') AND type in (N'P', N'PC'))
\par BEGIN
\par EXEC dbo.sp_executesql @statement = N'
\par 
\par 
\par 
\par CREATE procedure [dbo].[sp_DELETE_ICELOG] @pDays int
\par as  
\par delete from icelog where lastupdate <  DATEADD(dd, - @pDays, GETDATE())
\par 
\par 
\par ' 
\par END
\par GO
\par SET ANSI_NULLS ON
\par GO
\par SET QUOTED_IDENTIFIER ON
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_UPDATE_ICELOG]') AND type in (N'P', N'PC'))
\par BEGIN
\par EXEC dbo.sp_executesql @statement = N'
\par 
\par create procedure [dbo].[sp_UPDATE_ICELOG] @pDesc varchar(255), @pLocation varchar(64)
\par as 
\par 
\par if (@pDesc <> '''') and (@pLocation <> '''')
\par   insert into icelog (description, location, lastupdate) values (@pDesc, @pLocation, getdate()) ' 
\par END
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par USE [IRISCommunicationEngine]
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Schedule_Outbox]') AND parent_object_id = OBJECT_ID(N'[dbo].[Schedule]'))
\par ALTER TABLE [dbo].[Schedule]  WITH CHECK ADD  CONSTRAINT [FK_Schedule_Outbox] FOREIGN KEY([Outbox_Id], [Outbox_Guid])
\par REFERENCES [dbo].[Outbox] ([Id], [Guid])
\par ON DELETE CASCADE
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Schedule_ScheduleType]') AND parent_object_id = OBJECT_ID(N'[dbo].[Schedule]'))
\par ALTER TABLE [dbo].[Schedule]  WITH CHECK ADD  CONSTRAINT [FK_Schedule_ScheduleType] FOREIGN KEY([ScheduleType_Id])
\par REFERENCES [dbo].[ScheduleType] ([Id])
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_UserRule_Rules]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserRule]'))
\par ALTER TABLE [dbo].[UserRule]  WITH CHECK ADD  CONSTRAINT [FK_UserRule_Rules] FOREIGN KEY([Rule_Id])
\par REFERENCES [dbo].[Rules] ([Id])
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_UserRule_User]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserRule]'))
\par ALTER TABLE [dbo].[UserRule]  WITH CHECK ADD  CONSTRAINT [FK_UserRule_User] FOREIGN KEY([User_Id])
\par REFERENCES [dbo].[Users] ([Id])
\par ON DELETE CASCADE
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_DaySchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[DaySchedule]'))
\par ALTER TABLE [dbo].[DaySchedule]  WITH CHECK ADD  CONSTRAINT [FK_DaySchedule_Schedule] FOREIGN KEY([Schedule_Id])
\par REFERENCES [dbo].[Schedule] ([Id])
\par ON DELETE CASCADE
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MonthSchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[MonthSchedule]'))
\par ALTER TABLE [dbo].[MonthSchedule]  WITH CHECK ADD  CONSTRAINT [FK_MonthSchedule_Schedule] FOREIGN KEY([Schedule_Id])
\par REFERENCES [dbo].[Schedule] ([Id])
\par ON DELETE CASCADE
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_OneTimeSchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[OneTimeSchedule]'))
\par ALTER TABLE [dbo].[OneTimeSchedule]  WITH CHECK ADD  CONSTRAINT [FK_OneTimeSchedule_Schedule] FOREIGN KEY([Schedule_Id])
\par REFERENCES [dbo].[Schedule] ([Id])
\par ON DELETE CASCADE
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_WeekSchedule_Schedule]') AND parent_object_id = OBJECT_ID(N'[dbo].[WeekSchedule]'))
\par ALTER TABLE [dbo].[WeekSchedule]  WITH CHECK ADD  CONSTRAINT [FK_WeekSchedule_Schedule] FOREIGN KEY([Schedule_Id])
\par REFERENCES [dbo].[Schedule] ([Id])
\par ON DELETE CASCADE
\par GO
\par IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CIS_Outbox1]') AND parent_object_id = OBJECT_ID(N'[dbo].[CIS]'))
\par ALTER TABLE [dbo].[CIS]  WITH CHECK ADD  CONSTRAINT [FK_CIS_Outbox1] FOREIGN KEY([Outbox_Id], [Outbox_Guid])
\par REFERENCES [dbo].[Outbox] ([Id], [Guid])
\par ON DELETE CASCADE
\par GO
\par 
\par sp_configure 'show advanced options', 1;
\par GO
\par RECONFIGURE;
\par GO
\par sp_configure 'remote access', 1;
\par GO
\par RECONFIGURE;
\par GO
\par sp_configure 'show advanced options', 0;
\par GO
\par RECONFIGURE;
\par GO
\par 
\par 
\par USE [IRISCommunicationEngine]
\par GO
\par 
\par IF NOT EXISTS (SELECT value FROM [dbo].[system] WHERE description = N'version')
\par   insert into [dbo].[system] (description, value) values (N'version', N'1.0.0.0')
\par Go}{\insrsid13635367 
\par }}