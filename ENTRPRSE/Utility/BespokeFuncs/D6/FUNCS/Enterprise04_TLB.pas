unit Enterprise04_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : $Revision:   1.130.3.0.1.0  $
// File generated on 26/03/2013 10:28:39 from Type Library described below.

// ************************************************************************  //
// Type Lib: W:\ENTRPRSE\COMTK\EXE\EntToolk.tlb (1)
// LIBID: {94B42C7D-4FDF-4C2B-8AC7-83815A8B6519}
// LCID: 0
// Helpfile: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\system32\stdole2.tlb)
//   (2) v4.0 StdVCL, (C:\Windows\system32\stdvcl40.dll)
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}

interface

uses Windows, ActiveX, Classes, Graphics, StdVCL, Variants;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  Enterprise04MajorVersion = 1;
  Enterprise04MinorVersion = 0;

  LIBID_Enterprise04: TGUID = '{94B42C7D-4FDF-4C2B-8AC7-83815A8B6519}';

  IID_IToolkit: TGUID = '{3CCE73CF-E79F-4D2F-AAC3-FB7BA9C631AC}';
  IID_IToolkit2: TGUID = '{C80217DA-5243-44B7-AEFD-DB7B3BE2CC2E}';
  IID_IAccount: TGUID = '{27FB2718-B428-4846-AFF2-4F6639E2541F}';
  IID_ITransaction: TGUID = '{297430DD-333B-4F8D-BBAB-CEA7F1E2E9C9}';
  IID_IAddress: TGUID = '{0ADD70EC-0236-401E-B597-A33EC91151EC}';
  IID_IAccountBalance: TGUID = '{B144E3EA-6F65-4A6C-8E65-21B1BF7A00DF}';
  IID_IFunctions: TGUID = '{C7014FC0-8CB0-4EBD-9F2E-88386A70A4FD}';
  IID_ITransactionLines: TGUID = '{B678B41C-3130-4D2E-B8BA-CBE49BD81492}';
  IID_ITransactionLine: TGUID = '{510F63CD-64A6-42FF-9003-44295415D347}';
  IID_ISystemSetup: TGUID = '{980CC008-4263-4A02-B5C9-D46234437557}';
  IID_ISystemSetupCurrency: TGUID = '{BAA63961-5178-4B97-9137-001DDBE89458}';
  IID_ISystemSetupReleaseCodes: TGUID = '{41887A9A-9987-4FFA-8934-8237DB52F9C3}';
  IID_ISystemSetupUserFields: TGUID = '{66D25A8F-96C0-4765-AD3D-7B3C592D8472}';
  IID_ISystemSetupVat: TGUID = '{3F7A8E59-C728-4E99-B075-8D60E767D1B4}';
  IID_IStock: TGUID = '{77F12C49-19EB-459B-A982-B19EB53FF0F2}';
  IID_IStockCover: TGUID = '{A5EB42C0-B08B-4A23-96AE-B6A132811542}';
  IID_IStockIntrastat: TGUID = '{53747A2E-15FD-450B-9158-BF024D8D4AC3}';
  IID_IStockReorder: TGUID = '{D77BF3E9-202A-4DC6-AB68-41BF27383445}';
  IID_IStockSalesBand: TGUID = '{363FE707-C471-43F2-8FD0-87C2A8BB37D8}';
  IID_IConfiguration: TGUID = '{B751883E-C515-4843-B86F-8414DD4C40E1}';
  IID_IEnterprise: TGUID = '{334E16EC-798E-4106-BF97-63770670EE41}';
  IID_IGeneralLedger: TGUID = '{C464ED71-41BC-49A3-ABCB-35DCC36A6462}';
  IID_ILocation: TGUID = '{529357BA-34F9-4558-ADA7-F05437FDFBBD}';
  IID_ICCDept: TGUID = '{54202F43-5F21-4EFF-B338-10CC3C76C444}';
  IID_ICompanyManager: TGUID = '{E8223E69-F6EC-4AF6-81D0-4F36FC70ED8C}';
  IID_ICompanyDetail: TGUID = '{16606080-1F86-4D5B-9F82-A599B9B5D4CA}';
  IID_IStockLocation: TGUID = '{B2B5CFA4-0FB2-45DA-8413-49C84982D647}';
  IID_INotes: TGUID = '{F11DB710-08A7-42CB-B8F6-0D94822D2846}';
  IID_IJobCosting: TGUID = '{E9B74EAF-E165-4BF8-9E65-8A13E7DFCF48}';
  IID_IJob: TGUID = '{CC750828-6032-4D5F-9B89-6161ED126E76}';
  IID_IMatching: TGUID = '{9044999A-6B51-4758-BEDD-CCFF34C47FC2}';
  IID_IAccountDiscount: TGUID = '{463F7605-51FB-402E-A1C8-F6A08D9AE038}';
  IID_IEBusiness: TGUID = '{16CD7B55-6FC6-4B6D-A048-D84182FA60C2}';
  IID_IQuantityBreak: TGUID = '{277C5F20-B2B9-4E4C-8E40-B29E79E3A0CA}';
  IID_ISystemSetupJob: TGUID = '{BE599499-8EED-4E90-90C1-41C1FD75FE85}';
  IID_ISystemSetupPaperless: TGUID = '{CF03F063-36B3-4597-A096-CF4BD270C621}';
  IID_IJobType: TGUID = '{01F1A7A1-2CEB-4477-B806-6DCDEE371752}';
  IID_IJobAnalysis: TGUID = '{E7B224B8-9631-487B-9950-EBF3D3C5779A}';
  IID_IStockBOMComponent: TGUID = '{DB1C0CD3-C7D7-4068-81DA-99ACC73234F3}';
  IID_IStockBOMList: TGUID = '{23C532DC-E126-4029-8765-F26343634962}';
  IID_IStockWhereUsed: TGUID = '{E9B7239B-E3F3-4198-A5FE-DFEB22F911B4}';
  IID_IEmployee: TGUID = '{12563BD3-8614-499E-A169-D4585CEB98D7}';
  IID_ITimeRates: TGUID = '{522FC7A9-545B-43CB-B972-4AC6F10FC890}';
  IID_ISerialBatchDetails: TGUID = '{11104531-9C20-489B-9C26-C0FB0BD3E842}';
  IID_ISerialBatch: TGUID = '{44C60D73-2561-41C6-98B2-AE059CA01706}';
  IID_ITransactionLineSerialBatch: TGUID = '{BB085D2B-E65B-4F4F-8ABC-D21EA001665C}';
  IID_IInternalDebug: TGUID = '{D80E6678-58E8-497C-BE9C-C43F51683966}';
  IID_IUserProfile: TGUID = '{6985BD33-BF1C-4D90-859E-BFD054D33A10}';
  IID_IToolkit3: TGUID = '{6F238C12-DBB7-4580-9C58-BCF5B25BDA5F}';
  IID_ISystemSetupUserFields2: TGUID = '{B2D6AA77-FBC5-417C-BECD-B9555CC5844A}';
  IID_ISystemSetup2: TGUID = '{493F9B71-3AE3-4763-BA0C-F7FC46D336D6}';
  IID_ISystemSetupPaperless2: TGUID = '{18475C1F-5701-4ED2-87F8-6644493520F5}';
  IID_ISystemSetupFormDefinitionSet: TGUID = '{5E49CB6F-18E6-4C7F-A31B-9F640E89A54A}';
  IID_ITransaction2: TGUID = '{F7365935-CB0C-42A2-A513-0968F696195C}';
  IID_ITransactionAsNOM: TGUID = '{D76E5601-93AC-4D78-B61F-AE6A67C42D79}';
  IID_ITransactionAsTSH: TGUID = '{41936116-1974-45CE-A28A-79529AE9FA40}';
  IID_ITransactionLineAsNOM: TGUID = '{3A294E2C-9A46-4579-B974-35DC5CC3D31E}';
  IID_ITransactionLine2: TGUID = '{06C486FD-9C45-4309-B879-A4864276BD8B}';
  IID_ITransactionLineAsTSH: TGUID = '{0F59EC6C-E9A6-4ECE-9A54-9143ED5094F6}';
  IID_ITransactionAsADJ: TGUID = '{01D25446-1458-4E9E-ABED-B2F723391C14}';
  IID_ITransactionLineAsADJ: TGUID = '{8C527DD1-518C-45CD-979D-7E8C1D165DFC}';
  IID_ITransactionAsWOR: TGUID = '{74ED7056-5746-4378-9CEA-3A35946BDECB}';
  IID_ITransactionLineAsWOR: TGUID = '{C1426D63-703E-4E9D-81B4-1ABB982FA107}';
  IID_ILinks: TGUID = '{B7434222-13E6-48AC-898C-56E2847112FF}';
  IID_IJob2: TGUID = '{B52CF222-2753-46B4-A1AE-E97AD047A92B}';
  IID_IAutoTransactionSettings: TGUID = '{79AB0D53-689A-4D34-A430-953C1CA3D3F5}';
  IID_IConvert: TGUID = '{D67A5ABC-0BCE-4AA3-BE53-626AF142D2E1}';
  IID_ISingleConvert: TGUID = '{C7DD82AB-A993-4404-AEE4-2D58549F4180}';
  IID_IConvertList: TGUID = '{1F9FFA65-8BEA-4A80-A436-C4D693983347}';
  IID_ISystemProcesses: TGUID = '{ED57994C-F81E-430E-82AC-6754D5C96FBE}';
  IID_IBackToBackOrder: TGUID = '{91354B5D-AD8D-4709-9BF4-6067FEB6CDC5}';
  IID_ITransactionAsBatch: TGUID = '{E129ADEB-97E4-4828-9C4F-1F9F7B2E31BD}';
  IID_IPrintJob: TGUID = '{57F2323B-8A80-48E6-BE1A-5F4D0E159E83}';
  IID_IPrinters: TGUID = '{56D1F045-A209-4FFB-833F-C4F8E827EDD0}';
  IID_IPrinterDetail: TGUID = '{BB7F9431-50B4-44F7-8174-33074C71ED2B}';
  IID_IStringListReadOnly: TGUID = '{A7F95B57-2894-4EE7-ACC1-A3434EF90805}';
  IID_IPrintFormList: TGUID = '{F6186123-29F6-4910-AE92-0A701CA31E97}';
  IID_IPrintFormDetail: TGUID = '{9F445A95-D0BD-4113-90C9-D4234FD6207E}';
  IID_IPrintTempFile: TGUID = '{44359A50-1F81-409A-8E54-27C8D8C73CF0}';
  IID_IPrintJobEmailInfo: TGUID = '{98C98B66-B406-4FB5-8ED0-35A7CF840F0C}';
  IID_IEmailAddressArray: TGUID = '{4F5C05B0-DF7D-44F3-80BA-BB3F710DB8B6}';
  IID_IEmailAddress: TGUID = '{E47AB80D-9842-402C-83EC-DC2FA158E160}';
  IID_IEmailAttachments: TGUID = '{211D3070-423B-4831-8651-AF2BD8A4B580}';
  IID_IPrintJobFaxInfo: TGUID = '{D4E863CC-AF95-42B2-8918-4CB80137D0DD}';
  IID_IPrintJobFileInfo: TGUID = '{BD05C3E4-E952-4ED4-B9C0-6522CBA5E3D1}';
  IID_ITransactionLineAsPayLine: TGUID = '{79D7ADBF-53E8-4CF2-935E-3001BFAF3572}';
  IID_IFormDetails: TGUID = '{3BF97711-8D24-4C31-98B2-8DB324D6118A}';
  IID_IPrintJobDataList: TGUID = '{3484478D-6062-4272-B374-F0ABFD9CB491}';
  IID_IPrintJobDataDetails: TGUID = '{C7E80C4C-9332-404F-A5BE-C7BF29EB24E5}';
  IID_IRecordPosition: TGUID = '{16A85C8A-0D4F-453D-931C-E01E8FB00897}';
  IID_ITransactionLineSerialBatch2: TGUID = '{7A0E39A1-EC0B-41E2-B0B3-1B326565F6BC}';
  IID_ITransactionDetails: TGUID = '{2805C4B3-A247-4EC1-8A84-9056983BC8AC}';
  IID_IJobType2: TGUID = '{C960615B-0999-4339-904B-8499A79132BC}';
  IID_IJobAnalysis2: TGUID = '{F67DE83A-B979-45D3-AB66-4F6C6661D978}';
  IID_IEmployee2: TGUID = '{65ADA3D4-0890-44A9-9D10-F7163A495B1A}';
  IID_ITimeRates2: TGUID = '{803B14A3-B083-4F79-845D-CE2F4BAD5A01}';
  IID_IJobActual: TGUID = '{0D109DE0-434A-4D62-AEEF-C9C535DAC863}';
  IID_ICurrencyTriangulation: TGUID = '{8428ED69-BC3A-4360-9717-7B940F6CBB11}';
  IID_IJobRetention: TGUID = '{94F197B6-B1B4-490B-AA5F-FC51DECA0968}';
  IID_IJobBudget: TGUID = '{22327D33-8880-4BD8-84A1-4786456DEBEF}';
  IID_ISummaryJobBudget: TGUID = '{EA11D8A4-6AC8-489B-BE20-3C866A06EEB5}';
  IID_IAnalysisJobBudget: TGUID = '{13559D37-9896-4447-AB78-F17CFEEBAFDA}';
  IID_ITimeAndStockJobBudget: TGUID = '{8070A3EF-BCC8-45D9-B3CA-A2622CAAB81B}';
  IID_IBrowseInfo: TGUID = '{DF23F3C7-A880-4FD4-A672-66563EE464E0}';
  IID_IMatching2: TGUID = '{0F967F53-3240-468B-8BEB-502244B6B13B}';
  IID_ICISRate: TGUID = '{A8D122C1-1D16-4BE5-A8CF-097F58D09C2E}';
  IID_ISystemSetupCIS: TGUID = '{DFC434DA-55FA-403C-A643-DBBF0CFFE45B}';
  IID_ICISVoucherCounter: TGUID = '{BB5A574E-9468-4AA7-8F97-73528D5CD9B9}';
  IID_ICISVoucher: TGUID = '{3036AB54-539C-4800-AC6B-342D93D11AC1}';
  IID_IJobCosting2: TGUID = '{329E0073-4B29-421F-971A-A311F6FA7692}';
  IID_IJobInvoice: TGUID = '{D308FD0A-C973-491E-BF33-20B2235200BD}';
  IID_IJobInvoiceTransaction: TGUID = '{3B7F2A6C-0F1D-4240-B861-7316F4CF0972}';
  IID_IJobInvoiceTransactionList: TGUID = '{0AFA3583-A21A-40C7-A5DC-1DBE5FC5709D}';
  IID_IJobInvoiceTransaction2: TGUID = '{1779C27A-F464-4267-8670-6C425FC50386}';
  IID_ITransactionAsNOM2: TGUID = '{1E6DA649-2242-4F9D-B2B0-F0FF8611A3AD}';
  IID_ITransactionLineAsNOM2: TGUID = '{860B30E2-F912-4731-A919-5F28BA8BBC56}';
  IID_IEmployee3: TGUID = '{9EC5F263-2642-4ADE-9133-64E177031B34}';
  IID_IJobInvoiceTransaction3: TGUID = '{FF994CC7-B212-4CB9-9A94-FD338EC6CF95}';
  IID_IBtrieveFunctions: TGUID = '{2334CA7E-B597-4D2B-98CC-862203D3B54C}';
  IID_IAccount2: TGUID = '{476967FE-690C-489A-983B-A1A0AC87D157}';
  IID_IStock2: TGUID = '{579D251D-2447-402D-8110-19C0CA616026}';
  IID_IStockIntrastat2: TGUID = '{05B53731-1BAB-41D1-B815-AF253E098EF9}';
  IID_IFunctions2: TGUID = '{1DDDFFD5-12C0-4CC8-A1E0-45424919DBD6}';
  IID_IAltStockCode: TGUID = '{6A5340CD-EF5F-439A-8E4D-3148501030CE}';
  IID_IMultiBinDetails: TGUID = '{FBC0C037-C831-4C30-9F4D-4198FDF7327C}';
  IID_IMultiBin: TGUID = '{09C1432F-E2FF-4C23-8ADF-43A33F9E7637}';
  IID_ITransactionLineMultiBin: TGUID = '{0E29E95A-E301-4085-B426-B2F42BA72129}';
  IID_ISalesAnalysis: TGUID = '{12545970-2B2A-47B8-A568-01F4F3C12B95}';
  IID_ICustomerSalesAnalysis: TGUID = '{6107E2C6-0A80-496B-B2A7-E60387241340}';
  IID_ISalesAnalysisHistory: TGUID = '{2D8B4012-D0E3-40C3-94F6-D0B2C3A7A5FC}';
  IID_IStockSalesAnalysis: TGUID = '{815154CC-D53F-4CED-8445-FA61431C05F9}';
  IID_ITransactionLine3: TGUID = '{DAE4F0D7-802E-450E-B0B3-AFF43A9F9A8D}';
  IID_ISerialBatchDetails2: TGUID = '{3DF5A944-D2EA-4538-AB4C-D45CBEDDE8B4}';
  IID_ISerialBatch2: TGUID = '{B379EA54-1382-4C13-857C-427FD8525F9E}';
  IID_ISystemSetup3: TGUID = '{78509B73-52E4-4A5E-8EE8-5FA89B9AB765}';
  IID_ITransaction3: TGUID = '{29E0A388-218E-44CD-B8DA-6777487460CD}';
  IID_IBtrieveFunctions2: TGUID = '{3DD3145E-5E32-42A2-85A0-D46A931F537A}';
  IID_IPrintFormList2: TGUID = '{0A3D27EF-F92C-4297-8937-A2673AA02FB4}';
  IID_ITransactionAsApplication: TGUID = '{6DC881D0-54B5-4F8C-B97F-BF0E1B2ECC95}';
  IID_ITransactionLineAsApplication: TGUID = '{E0455F4E-8429-47EF-A612-457D56D8B025}';
  IID_IJobAnalysis3: TGUID = '{22B54059-BFC0-458F-86C4-798EC93B43AB}';
  IID_IJobApplications: TGUID = '{13980D90-0A9C-412F-9467-97FACD42AF24}';
  IID_IApplicationsList: TGUID = '{BF90B6C1-8C18-4FA0-974B-F918B2989261}';
  IID_ITermsList: TGUID = '{8FAD525E-F2BF-4AD0-9EC0-F58D63C1EC38}';
  IID_IJob3: TGUID = '{0A7CA047-99B6-4550-91C3-36217803A1EC}';
  IID_IEmployee4: TGUID = '{F12CC198-97C9-458A-8D09-3B236BFAE9CB}';
  IID_ISystemSetupCIS2: TGUID = '{8BC937B4-2A77-45D8-8769-784D81CB0D11}';
  IID_IAnalysisJobBudget2: TGUID = '{16700687-4C4D-42C4-8FD6-A3DEDA3A98E2}';
  IID_IJobRetention2: TGUID = '{EEF13A40-AF40-4DA8-8507-1722F635D375}';
  IID_ITransactionLineSerialBatch3: TGUID = '{C07A04DC-FA75-4B38-8196-A6111EF1671E}';
  IID_ISystemSetupReleaseCodes2: TGUID = '{22AB4B9C-E5DD-4CE0-AFA2-4B43F8044CC1}';
  IID_IJob4: TGUID = '{74A904E2-801D-4E09-9758-7C531BEE2349}';
  IID_IAltStockCode2: TGUID = '{7A1BC7F6-3E78-4856-99D3-2A7297FB3712}';
  IID_IStock3: TGUID = '{B01978FF-0E94-4593-B1C4-09164CBBDE05}';
  IID_IQuantityBreak2: TGUID = '{E1745A08-B960-4ED3-94C9-D726C8F9C012}';
  IID_IAccountDiscount2: TGUID = '{D19F07F9-63A4-443F-91E0-91FD24BAD1D7}';
  IID_IStock4: TGUID = '{ED4574B8-9F2E-4EC3-A1B6-0535803D70BE}';
  IID_ILocation2: TGUID = '{530477AD-F557-4159-A6DC-9927FE090353}';
  IID_IStockLocation2: TGUID = '{55702475-BF68-4694-AC64-9C8B77702D54}';
  IID_ISerialBatch3: TGUID = '{53B30DE8-1822-4788-AFBA-6DCB6067E7CA}';
  IID_ISerialBatchDetails3: TGUID = '{4A443B12-50FC-4A98-9C6B-F741058ABC84}';
  IID_IMultiBin2: TGUID = '{5EC63CCD-4A7A-43C4-867D-6357F5F4794D}';
  IID_IMultiBinDetails2: TGUID = '{B880F4CA-2A19-41B4-A85A-98923ADAAAA5}';
  IID_ISystemSetupReturnLineReason: TGUID = '{BA534D4D-333A-4510-BC62-09986A45280D}';
  IID_ISystemSetup4: TGUID = '{21E5CE8E-B159-4FDF-B6D9-D8DB2FAA6BF3}';
  IID_ITransactionLineAsReturn: TGUID = '{FCD40575-B974-4395-89B9-AE12EF378AC3}';
  IID_ITransactionLine4: TGUID = '{EDB509E4-1A97-4F85-9679-8D63D0F0919B}';
  IID_ITransactionAsReturn: TGUID = '{C6C15F6E-2A21-441B-98F7-41871D28AB5E}';
  IID_ITransaction4: TGUID = '{83903181-27C6-415B-A4E3-2745D5658A81}';
  IID_IReturnCreate: TGUID = '{DCA8569B-7044-4F86-B221-F8423CCF8CC7}';
  IID_ITransactionReturnCreate: TGUID = '{1428FDDD-1C9B-4A8E-91A1-D1B164FD0139}';
  IID_ITransactionLineReturnCreate: TGUID = '{2F537BDC-E75E-4B59-9C3E-0A87516C7CC9}';
  IID_IReturnAction: TGUID = '{1319E714-F451-4FC8-A67A-F7B14C1A8921}';
  IID_ISystemSetupReleaseCodes3: TGUID = '{E4390350-CCF4-4056-90BC-A5F22984C631}';
  IID_IBankAccount: TGUID = '{7B4B0430-239F-47A0-BDAA-46A59C24F707}';
  IID_IBanking: TGUID = '{BC0A55BA-BD9D-4EDB-AAAB-9CDFCCE343DE}';
  CLASS_Toolkit: TGUID = '{3CB675B7-B3B8-4909-BA38-CE270255A112}';
  IID_IBankProducts: TGUID = '{A1E9492A-4CEB-460C-B514-6882AD946456}';
  IID_IGeneralLedger2: TGUID = '{F5FAB995-C1EA-4958-80D8-9AC7A505B0AB}';
  IID_IBankStatementLine: TGUID = '{38AD7F52-A324-41A7-AA7F-595795A69F4D}';
  IID_IBankStatement: TGUID = '{ADAF0232-3F91-4360-99F9-8BC3B594FCC2}';
  IID_IAutoTransactionSettings2: TGUID = '{AE5C886E-53A9-48DD-94E1-562B5CF8F839}';
  IID_IToolkitRecord: TGUID = '{4F50A838-E7BA-4C4A-BC9A-EC2D26C67D12}';
  IID_IBankReconciliationHeader: TGUID = '{DACCD3BB-ECBF-4C1F-BC0A-4DA045B0D053}';
  IID_IBankReconciliationDetail: TGUID = '{FA404081-38FC-474D-8288-0E82FC7AA9CB}';
  IID_IConvertList2: TGUID = '{556AAC23-9D51-46E5-A07E-65DCC79A6193}';
  IID_ICCDept2: TGUID = '{8B6903A2-7C5C-48E6-A548-080DF0003302}';
  IID_ISystemSetup5: TGUID = '{D07EF7C6-DF54-4A53-9D41-274A8E213FB4}';
  IID_IEmployee5: TGUID = '{F838A2E9-B451-4B49-A171-8FC0A9C6DD60}';
  IID_ISystemSetupReleaseCodes4: TGUID = '{9B1991B6-0E7E-4FFD-B11E-AD3156B2035A}';
  IID_ISystemSetupCIS3: TGUID = '{D30A0BDE-4D94-42A1-A4F4-64ACA657B183}';
  IID_ISystemSetupCIS4: TGUID = '{47DE4A74-1A40-40DB-82DD-2444D9A04D8E}';
  IID_ISystemSetupPaperless3: TGUID = '{C88CBE75-D21A-45B2-B4E7-5A509180F3D2}';
  IID_ITransaction5: TGUID = '{41475514-DEFD-447E-923B-90882634D7C7}';
  IID_ISystemSetup6: TGUID = '{0F17E5A9-7068-4AAA-8EDC-F6FE17334423}';
  IID_IBankAccount2: TGUID = '{A3D35FF7-FC50-41D3-B921-07C5EAD8A9BF}';
  IID_ICompanyManager2: TGUID = '{5C48F7F8-CDB2-431F-A5AB-9B4B9AC9645A}';
  IID_ICompanyDetail2: TGUID = '{E16AFF4D-4001-4027-8B1F-9EB02F304F4B}';
  IID_IFunctions3: TGUID = '{65DC3A8C-4BEE-49DC-9020-1136B94AE5EC}';
  IID_IGeneralLedger3: TGUID = '{9E12D4DB-EEA7-44D6-9D5F-3A4714027763}';
  IID_ISQLFunctions: TGUID = '{04E7194D-4DEF-4405-B9CC-AF1147FC11BA}';
  IID_IAnalysisJobBudget3: TGUID = '{EB2A2034-A960-498D-8432-21E91B68DEB7}';
  IID_ITimeAndStockJobBudget2: TGUID = '{A4FB2146-1B8F-4370-87FF-954BCDDB1A64}';
  IID_ISummaryJobBudget2: TGUID = '{AE256D05-EA84-4EAB-A799-E5273ED20421}';
  IID_ICCDept3: TGUID = '{A20D863E-9FA7-4322-B783-0B24243C78D2}';
  IID_IMultiBuyDetails: TGUID = '{602774B3-C86F-4716-9AA8-CC4D9528FA9F}';
  IID_IMultiBuyDiscounts: TGUID = '{733F2FE4-30E0-4716-9A8B-B333288512FC}';
  IID_IMultiBuy: TGUID = '{FE917271-45F7-46E6-B5E2-41461728E9EB}';
  IID_IAccount3: TGUID = '{C1C6D083-67B7-4C90-823E-9355764803D1}';
  IID_IStock5: TGUID = '{CE8E619D-5A0F-4816-BC81-04BDF5D987F3}';
  IID_ITransactionLine5: TGUID = '{6B9BDD38-F7A8-497D-8456-E71632F7D841}';
  IID_ITransaction6: TGUID = '{DBC4B05A-DD27-4BBC-9CCE-B1F2D28CA08A}';
  IID_ITransactionLine6: TGUID = '{76D28893-3356-4FB5-8210-DCAFE559AF8B}';
  IID_ISystemSetup7: TGUID = '{7EB7EA9D-51B1-4A11-BA15-BCC7F2F9A2D1}';
  IID_ITransaction7: TGUID = '{0F734B9F-5FF9-483D-A07B-C131E374951F}';
  IID_ITransactionLine7: TGUID = '{5955EC3D-364F-4BC8-9297-E7469A624EFA}';
  IID_IEmployee6: TGUID = '{7D8432E1-D53B-46CC-889B-48608087D805}';
  IID_ITransaction8: TGUID = '{2AE994E3-C451-4A21-A348-BB7DAFE63AC1}';
  IID_ISystemSetup8: TGUID = '{62C11E7D-8DE3-4302-8D79-5A3F9E843825}';
  IID_IConfiguration2: TGUID = '{AEDB6B9C-D3FA-45B5-AB55-BE83725999D1}';
  IID_ISerialBatch4: TGUID = '{72843C45-88A4-4C7B-94BB-1F9B2BDAFFE9}';
  IID_IAccountBalance2: TGUID = '{6C8D2E1C-4443-499B-A44E-35902F838E2C}';
  IID_IUserProfile2: TGUID = '{ACA874E1-4F68-44FE-A627-4A2B00F2BAC2}';
  IID_IAccount4: TGUID = '{73EBC15B-CF39-4EA4-A358-3CAC72DBCDF9}';
  IID_ITransaction9: TGUID = '{5E4AB4E7-B88D-4BAF-9F49-DC232E05DF82}';
  IID_IStock6: TGUID = '{5B39EC71-0D22-4076-AF79-A1D2A222678A}';
  IID_IJob5: TGUID = '{44EA0142-F0CC-4D8A-A59F-BACBDA752BA9}';
  IID_ITransactionLine8: TGUID = '{0E4BC4E0-1E90-4796-93E8-36F8E855D28A}';
  IID_ISystemSetupUserFields3: TGUID = '{DC3663F3-0492-4BE7-9CF3-F100AFEF97A1}';
  IID_IConversionLibrary: TGUID = '{9FF7B25C-CD0F-43D5-B002-14F40E2A80F4}';
  IID_ISystemSetupUserFields4: TGUID = '{85F05233-BE25-4DCA-B6DD-65103B94290D}';
  IID_ITransactionLine9: TGUID = '{2849FF44-1A4B-4421-B787-E76A5D63419D}';
  IID_IJob6: TGUID = '{60A7B1E4-FA8C-4715-A0E4-97C058B61225}';
  IID_IUserProfile3: TGUID = '{3A3ED164-5AEB-47FD-BEEB-A6E831E7BB7E}';
  IID_IJob7: TGUID = '{42E5E1AF-3CB1-4009-B364-111DF0761BC9}';
  IID_ISummaryJobBudget3: TGUID = '{C97B9870-7C91-44CF-B20D-6342B0D66914}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum TAccountStatus
type
  TAccountStatus = TOleEnum;
const
  asOpen = $00000000;
  asNotes = $00000001;
  asOnHold = $00000002;
  asClosed = $00000003;

// Constants for enum TToolkitStatus
type
  TToolkitStatus = TOleEnum;
const
  tkClosed = $00000000;
  tkOpen = $00000001;

// Constants for enum TDocTypes
type
  TDocTypes = TOleEnum;
const
  dtSIN = $00000000;
  dtSRC = $00000001;
  dtSCR = $00000002;
  dtSJI = $00000003;
  dtSJC = $00000004;
  dtSRF = $00000005;
  dtSRI = $00000006;
  dtSQU = $00000007;
  dtSOR = $00000008;
  dtSDN = $00000009;
  dtSBT = $0000000A;
  dtPIN = $0000000B;
  dtPPY = $0000000C;
  dtPCR = $0000000D;
  dtPJI = $0000000E;
  dtPJC = $0000000F;
  dtPRF = $00000010;
  dtPPI = $00000011;
  dtPQU = $00000012;
  dtPOR = $00000013;
  dtPDN = $00000014;
  dtPBT = $00000015;
  dtNMT = $00000016;
  dtADJ = $00000017;
  dtTSH = $00000018;
  dtWOR = $00000019;
  dtJCT = $0000001A;
  dtJST = $0000001B;
  dtJPT = $0000001C;
  dtJSA = $0000001D;
  dtJPA = $0000001E;
  dtSRN = $0000001F;
  dtPRN = $00000020;

// Constants for enum TIntrastatProcess
type
  TIntrastatProcess = TOleEnum;
const
  ipNormal = $00000000;
  ipTriangulation = $00000001;
  ipProcess = $00000002;

// Constants for enum TAccountIndex
type
  TAccountIndex = TOleEnum;
const
  acIdxCode = $00000000;
  acIdxName = $00000001;
  acIdxAltCode = $00000002;
  acIdxVATRegNo = $00000003;
  acIdxEmail = $00000004;
  acIdxPhone = $00000005;
  acIdxPostCode = $00000006;
  acIdxOurCode = $00000007;
  acIdxInvTo = $00000008;

// Constants for enum TTransactionIndex
type
  TTransactionIndex = TOleEnum;
const
  thIdxOurRef = $00000000;
  thIdxFolio = $00000001;
  thIdxAccount = $00000002;
  thIdxYourRef = $00000003;
  thIdxLongYourRef = $00000004;
  thIdxRunNo = $00000005;
  thIdxAccountDue = $00000006;
  thIdxPostedDate = $00000007;
  thIdxBatchLink = $00000008;
  thIdxTransDate = $00000009;
  thIdxYearPeriod = $0000000A;
  thIdxOutstanding = $0000000B;

// Constants for enum TStockIndex
type
  TStockIndex = TOleEnum;
const
  stIdxCode = $00000000;
  stIdxFolio = $00000001;
  stIdxParent = $00000002;
  stIdxDesc = $00000003;
  stIdxSupplier = $00000004;
  stIdxPandLGL = $00000005;
  stIdxAltCode = $00000006;
  stIdxBinLoc = $00000007;
  stIdxBarCode = $00000008;

// Constants for enum TStockType
type
  TStockType = TOleEnum;
const
  stTypeGroup = $00000000;
  stTypeProduct = $00000001;
  stTypeDescription = $00000002;
  stTypeBillOfMaterials = $00000003;
  stTypeDiscontinued = $00000004;

// Constants for enum TStockValuationType
type
  TStockValuationType = TOleEnum;
const
  stValStandard = $00000000;
  stValLastCost = $00000001;
  stValFIFO = $00000002;
  stValLIFO = $00000003;
  stValAverage = $00000004;
  stValSerial = $00000005;
  stValSerialAvgCost = $00000006;

// Constants for enum TReleaseCodeStatus
type
  TReleaseCodeStatus = TOleEnum;
const
  rcDisabled = $00000000;
  rc30Day = $00000001;
  rcEnabled = $00000002;

// Constants for enum TStockPricingMethod
type
  TStockPricingMethod = TOleEnum;
const
  spmByStockUnit = $00000000;
  spmBySalesUnit = $00000001;
  spmBySplitPack = $00000002;

// Constants for enum TEnterpriseCurrencyVersion
type
  TEnterpriseCurrencyVersion = TOleEnum;
const
  enProfessional = $00000000;
  enEuro = $00000001;
  enGlobal = $00000002;

// Constants for enum TGeneralLedgerIndex
type
  TGeneralLedgerIndex = TOleEnum;
const
  glIdxCode = $00000000;
  glIdxName = $00000001;
  glIdxParent = $00000002;
  glIdxAltCode = $00000003;
  glIdxCodeString = $00000004;

// Constants for enum TGeneralLedgerType
type
  TGeneralLedgerType = TOleEnum;
const
  glTypeProfitLoss = $00000000;
  glTypeBalanceSheet = $00000001;
  glTypeControl = $00000002;
  glTypeCarryFwd = $00000003;
  glTypeHeading = $00000004;

// Constants for enum TLocationIndex
type
  TLocationIndex = TOleEnum;
const
  loIdxCode = $00000000;
  loIdxName = $00000001;

// Constants for enum TCCDeptIndex
type
  TCCDeptIndex = TOleEnum;
const
  cdIdxCode = $00000000;
  cdIdxName = $00000001;

// Constants for enum TNotesType
type
  TNotesType = TOleEnum;
const
  ntTypeGeneral = $00000000;
  ntTypeDated = $00000001;

// Constants for enum TJobChargeType
type
  TJobChargeType = TOleEnum;
const
  JChrgTimeMaterials = $00000000;
  JChrgFixedPrice = $00000001;
  JChrgCostPlus = $00000002;
  JChrgNonProductive = $00000003;

// Constants for enum TJobStatusType
type
  TJobStatusType = TOleEnum;
const
  JStatusQuotation = $00000000;
  JStatusActive = $00000001;
  JStatusSuspended = $00000002;
  JStatusCompleted = $00000003;
  JStatusClosed = $00000004;

// Constants for enum TJobIndex
type
  TJobIndex = TOleEnum;
const
  jrIdxCode = $00000000;
  jrIdxFolio = $00000001;
  jrIdxParent = $00000002;
  jrIdxDesc = $00000003;
  jrIdxCompletedCode = $00000004;
  jrIdxCompletedDesc = $00000005;
  jrIdxAltCode = $00000006;
  jrIdxAccount = $00000007;

// Constants for enum TJobTypeType
type
  TJobTypeType = TOleEnum;
const
  JTypeContract = $00000000;
  JTypeJob = $00000001;
  JTypePhase = $00000002;

// Constants for enum TTransTotalsType
type
  TTransTotalsType = TOleEnum;
const
  TransTotInCcy = $00000000;
  TransTotInBase = $00000001;
  TransTotSettledInBase = $00000002;
  TransTotOutstandingInCcy = $00000003;
  TransTotOutstandingInBase = $00000004;
  TransTotNetInCcy = $00000005;
  TransTotNetInBase = $00000006;
  TransTotCostInBase = $00000007;
  TransTotSignedInCcy = $00000008;
  TransTotSignedInBase = $00000009;
  TransTotVarianceSignedInBase = $0000000A;
  TransTotRevalAdjustSignedInBase = $0000000B;

// Constants for enum TMatchingSubType
type
  TMatchingSubType = TOleEnum;
const
  maTypeFinancial = $00000000;
  maTypeSPOP = $00000001;
  maTypeCIS = $00000002;
  maTypeCostApportionment = $00000003;
  maTypeUser1 = $00000004;
  maTypeUser2 = $00000005;
  maTypeUser3 = $00000006;
  maTypeUser4 = $00000007;

// Constants for enum TDiscountType
type
  TDiscountType = TOleEnum;
const
  DiscSpecialPrice = $00000000;
  DiscBandPrice = $00000001;
  DiscMargin = $00000002;
  DiscMarkup = $00000003;
  DiscQtyBreak = $00000004;
  DiscValueBased = $00000005;

// Constants for enum TCurrencyRateType
type
  TCurrencyRateType = TOleEnum;
const
  rtCompany = $00000000;
  rtDaily = $00000001;

// Constants for enum TFaxMethod
type
  TFaxMethod = TOleEnum;
const
  fmEnterprise = $00000000;
  fmMAPI = $00000001;
  fmThirdParty = $00000002;

// Constants for enum TJobCategoryType
type
  TJobCategoryType = TOleEnum;
const
  jcRevenue = $00000000;
  jcLabour = $00000001;
  jcDirectExpense1 = $00000002;
  jcDirectExpense2 = $00000003;
  jcStockIssues = $00000004;
  jcOverheads = $00000005;
  jcReceipts = $00000006;
  jcWorkInProgress = $00000007;
  jcRetentionsSL = $00000008;
  jcRetentionsPL = $00000009;

// Constants for enum TJobTypeIndex
type
  TJobTypeIndex = TOleEnum;
const
  jtIdxCode = $00000000;
  jtIdxName = $00000001;

// Constants for enum TAnalysisType
type
  TAnalysisType = TOleEnum;
const
  anTypeRevenue = $00000000;
  anTypeOverheads = $00000001;
  anTypeMaterials = $00000002;
  anTypeLabour = $00000003;

// Constants for enum TAnalysisCategory
type
  TAnalysisCategory = TOleEnum;
const
  anCatSales = $00000000;
  anCatTime = $00000001;
  anCatDisbursement = $00000002;
  anCatNRDisbursements = $00000003;
  anCatStockIssues = $00000004;
  anCatOverheads = $00000005;
  anCatReceipts = $00000006;
  anCatWorkInProgress = $00000007;
  anCatRetentionSL = $00000008;
  anCatRetentionPL = $00000009;
  anCatSubLabour = $0000000A;
  anCatMaterials2 = $0000000B;
  anCatOverheads2 = $0000000C;
  anCatSalesDeductions = $0000000D;
  anCatSalesApps = $0000000E;
  anCatPurchaseApps = $0000000F;
  anCatPurchaseDeductions = $00000010;

// Constants for enum TTransactionLineType
type
  TTransactionLineType = TOleEnum;
const
  tlTypeNormal = $00000000;
  tlTypeLabour = $00000001;
  tlTypeMaterials = $00000002;
  tlTypeFreight = $00000003;
  tlTypeDiscount = $00000004;
  tlTypeMaterials1 = $00000005;
  tlTypeMaterials2 = $00000006;
  tlTypeLabour1 = $00000007;
  tlTypeLabour2 = $00000008;
  tlTypeRetentions1 = $00000009;
  tlTypeRetentions2 = $0000000A;
  tlTypeDeductions1 = $0000000B;
  tlTypeDeductions2 = $0000000C;
  tlTypeDeductions3 = $0000000D;
  tlTypeCITB = $0000000E;
  tlTypeCIS = $0000000F;
  tlTypeMisc1 = $00000010;
  tlTypeMisc2 = $00000011;

// Constants for enum TJobAnalysisIndex
type
  TJobAnalysisIndex = TOleEnum;
const
  anIdxCode = $00000000;
  anIdxDescription = $00000001;

// Constants for enum TEmployeeType
type
  TEmployeeType = TOleEnum;
const
  emTypeProduction = $00000000;
  emTypeSubContract = $00000001;
  emTypeOverhead = $00000002;

// Constants for enum TEmployeeIndex
type
  TEmployeeIndex = TOleEnum;
const
  emIdxCode = $00000000;
  emIdxSupplier = $00000001;

// Constants for enum TSerialBatchType
type
  TSerialBatchType = TOleEnum;
const
  snTypeSerial = $00000000;
  snTypeBatch = $00000001;
  snTypeBatchSale = $00000002;

// Constants for enum TSerialBatchIndex
type
  TSerialBatchIndex = TOleEnum;
const
  snIdxUsedSerialNo = $00000000;
  snIdxSerialNo = $00000001;
  snIdxBatchNo = $00000002;

// Constants for enum TSystemSetupGLCtrlType
type
  TSystemSetupGLCtrlType = TOleEnum;
const
  ssGLVatInput = $00000000;
  ssGLVatOutput = $00000001;
  ssGLDebtors = $00000002;
  ssGLCreditors = $00000003;
  ssGLSettleDiscountGiven = $00000004;
  ssGLSettleDiscountTaken = $00000005;
  ssGLLineDiscountGiven = $00000006;
  ssGLLineDiscountTaken = $00000007;
  ssGLProfitLossBF = $00000008;
  ssGLCurrencyVariance = $00000009;
  ssGLUnrealisedCurrencyDifference = $0000000A;
  ssGLProfitAndLossStart = $0000000B;
  ssGLProfitAndLossEnd = $0000000C;
  ssGLFreightUplift = $0000000D;
  ssGLSalesAccrual = $0000000E;
  ssGLPurchaseAccrual = $0000000F;
  ssGLReturnsRestockCharge = $00000010;

// Constants for enum TSystemSetupJobGLCtrlType
type
  TSystemSetupJobGLCtrlType = TOleEnum;
const
  ssjGLOverhead = $00000000;
  ssjGLProdution = $00000001;
  ssjGLSubContract = $00000002;

// Constants for enum TEnterpriseModuleVersion
type
  TEnterpriseModuleVersion = TOleEnum;
const
  enModStandard = $00000000;
  enModStock = $00000001;
  enModSPOP = $00000002;

// Constants for enum TPasswordExpiryType
type
  TPasswordExpiryType = TOleEnum;
const
  pxNever = $00000000;
  pxPeriodic = $00000001;
  pxExpired = $00000002;

// Constants for enum TUserIndexType
type
  TUserIndexType = TOleEnum;
const
  usIdxLogin = $00000000;

// Constants for enum TPriorityRuleType
type
  TPriorityRuleType = TOleEnum;
const
  prStkAccOp = $00000000;
  prAccStkOp = $00000001;
  prOpAccStk = $00000002;
  prOpStkAcc = $00000003;

// Constants for enum TSecurityResultType
type
  TSecurityResultType = TOleEnum;
const
  srNoAccess = $00000000;
  srAccess = $00000001;

// Constants for enum TTransactionDetailIndex
type
  TTransactionDetailIndex = TOleEnum;
const
  tdIdxFolio = $00000000;
  tdIdxPostRunNo = $00000001;
  tdIdxNomCode = $00000002;
  tdIdxStockCode = $00000003;
  tdIdxLineClass = $00000004;
  tdIdxFolioAbsLineNo = $00000005;
  tdIdxLineClassCust = $00000006;
  tdIdxReconcile = $00000007;

// Constants for enum TReconcileStatusType
type
  TReconcileStatusType = TOleEnum;
const
  rsCleared = $00000001;
  rsCancelled = $00000002;
  rsReturned = $00000003;

// Constants for enum TNominalModeType
type
  TNominalModeType = TOleEnum;
const
  nmNormal = $00000000;
  nmPayIn = $00000001;
  nmStockAdj = $00000002;
  nmTimeSheet = $00000003;

// Constants for enum TUserDefinedFieldNo
type
  TUserDefinedFieldNo = TOleEnum;
const
  uf1 = $00000001;
  uf2 = $00000002;
  uf3 = $00000003;
  uf4 = $00000004;
  uf5 = $00000005;
  uf6 = $00000006;
  uf7 = $00000007;
  uf8 = $00000008;
  uf9 = $00000009;
  uf10 = $0000000A;

// Constants for enum TWOPStockNotesType
type
  TWOPStockNotesType = TOleEnum;
const
  wnBoth = $00000000;
  wnGeneral = $00000001;
  wnDated = $00000002;

// Constants for enum TFormDefinitionType
type
  TFormDefinitionType = TOleEnum;
const
  fdCustSuppAccDet = $00000000;
  fdCustSuppTradingHistory = $00000001;
  fdCustSuppLabels = $00000002;
  fdCustSuppSalesStatement = $00000003;
  fdSuppRemittanceAdvice = $00000004;
  fdDebtChase1 = $00000005;
  fdDebtChase2 = $00000006;
  fdDebtChase3 = $00000007;
  fdSIN = $00000008;
  fdSRI = $00000009;
  fdSCR = $0000000A;
  fdSRF = $0000000B;
  fdSQU = $0000000C;
  fdSOR = $0000000D;
  fdProForma = $0000000E;
  fdSDN = $0000000F;
  fdSRC = $00000010;
  fdSJI = $00000011;
  fdSJC = $00000012;
  fdConsPickingList = $00000013;
  fdIndPickingList = $00000014;
  fdSalesConsignmentNote = $00000015;
  fdSalesDeliveryLabel = $00000016;
  fdProductLabels = $00000017;
  fdSrcDetails = $00000018;
  fdPIN = $00000019;
  fdPPY = $0000001A;
  fdPCR = $0000001B;
  fdPQU = $0000001C;
  fdPOR = $0000001D;
  fdPDN = $0000001E;
  fdPJI = $0000001F;
  fdPJC = $00000020;
  fdPPI = $00000021;
  fdPRF = $00000022;
  fdPurchPayDebitNote = $00000023;
  fdStockWBOM = $00000024;
  fdStockWNotes = $00000025;
  fdADJ = $00000026;
  fdTSH = $00000027;
  fdJCBackingSheet = $00000028;
  fdJobRecord = $00000029;
  fdSelfBillSubContractorInv = $0000002A;
  fdConsWorksPickingList = $0000002B;
  fdWorksIssueNote = $0000002C;
  fdWOR = $0000002D;
  fdWorksPickingList = $0000002E;
  fdEmailCover = $0000002F;
  fdFaxCover = $00000030;
  fdNOM = $00000031;
  fdSalesPurchBatchEntry = $00000032;
  fcCIS23VoucherRCT47 = $00000033;
  fdCIS24Voucher = $00000034;
  fdCIS25VoucherRCTDC = $00000035;
  fdJST = $00000036;
  fdJSA = $00000037;
  fdCertifiedJSA = $00000038;
  fdJPT = $00000039;
  fdJCT = $0000003A;
  fdJPA = $0000003B;
  fdCertifiedJPA = $0000003C;
  fdSRN = $0000003D;
  fdSRNAsRepairQuote = $0000003E;
  fdPRN = $0000003F;

// Constants for enum TLinkType
type
  TLinkType = TOleEnum;
const
  lkTypeLetter = $00000000;
  lkTypeLink = $00000001;

// Constants for enum TLinkObjectType
type
  TLinkObjectType = TOleEnum;
const
  lkoTypeDoc = $00000000;
  lkoTypeFax = $00000001;
  lkoTypeImage = $00000002;
  lkoTypePresentation = $00000003;
  lkoTypeProgram = $00000004;
  lkoTypeSound = $00000005;
  lkoTypeVideo = $00000006;
  lkoTypeOther = $00000007;
  lkoTypeSpreadSheet = $00000008;
  lkoTypeInternetDoc = $00000009;

// Constants for enum TAutoIncrementType
type
  TAutoIncrementType = TOleEnum;
const
  aiDays = $00000000;
  aiPeriods = $00000001;

// Constants for enum TB2BQtyModeType
type
  TB2BQtyModeType = TOleEnum;
const
  b2bOriginalOrder = $00000000;
  b2bLessDelivered = $00000001;
  b2bMaxStockLevel = $00000002;
  b2bLessPicked = $00000003;

// Constants for enum TPrintDestination
type
  TPrintDestination = TOleEnum;
const
  pdPrinter = $00000000;
  pdEmail = $00000001;
  pdFax = $00000002;

// Constants for enum TPreviewType
type
  TPreviewType = TOleEnum;
const
  ptNonModal = $00000001;
  ptEDFReader = $00000002;

// Constants for enum TEmailType
type
  TEmailType = TOleEnum;
const
  emtMAPI = $00000000;
  emtSMTP = $00000001;

// Constants for enum TEmailPriority
type
  TEmailPriority = TOleEnum;
const
  epLow = $00000000;
  epNormal = $00000001;
  epHigh = $00000002;

// Constants for enum TEmailAttachMethod
type
  TEmailAttachMethod = TOleEnum;
const
  eamInternal = $00000000;
  eamAcrobat = $00000001;
  eamInternalPDF = $00000002;

// Constants for enum TEmailAttachmentZIPType
type
  TEmailAttachmentZIPType = TOleEnum;
const
  emZIPNone = $00000000;
  emZIPPKZIP = $00000001;
  emZIPEDZ = $00000002;

// Constants for enum TFaxPriority
type
  TFaxPriority = TOleEnum;
const
  fpOffPeak = $00000000;
  fpNormal = $00000001;
  fpUrgent = $00000002;

// Constants for enum TPrintJobType
type
  TPrintJobType = TOleEnum;
const
  jtForm = $00000000;
  jtLabel = $00000001;
  jtLabelRun = $00000002;

// Constants for enum TFormType
type
  TFormType = TOleEnum;
const
  ftPCC = $00000000;
  ftEFDForm = $00000001;
  ftEFDLabel = $00000002;

// Constants for enum TSaveAsType
type
  TSaveAsType = TOleEnum;
const
  saEDF = $00000000;
  saEDZ = $00000001;
  saPDF = $00000002;

// Constants for enum TTransactionPrintMode
type
  TTransactionPrintMode = TOleEnum;
const
  thpmDefault = $00000000;
  thpmSalesProForma = $00000001;
  thpmPPYDebitNote = $00000002;
  thpmDeliveryLabel = $00000003;
  thpmSQUAsOrder = $00000004;
  thpmSQUAsDeliveryNote = $00000005;
  thpmStockLabels = $00000006;
  thpmSerialLabels = $00000007;
  thpmWorksIssueNote = $00000008;
  thpmConsignmentNote = $00000009;
  thpmPickingList = $0000000A;
  thpmCustomPickingList = $0000000B;
  thpmNotes = $0000000C;
  thpmJCBackingSheet = $0000000D;
  thpmSRNAsRepairQuote = $0000000E;

// Constants for enum TTransactionLinePrintMode
type
  TTransactionLinePrintMode = TOleEnum;
const
  tlpmLabel = $00000000;

// Constants for enum TTransLineSerialPrintMode
type
  TTransLineSerialPrintMode = TOleEnum;
const
  tspmLabel = $00000000;

// Constants for enum TTransactionUpdateMode
type
  TTransactionUpdateMode = TOleEnum;
const
  umDefault = $00000000;
  umNonFinancial = $00000001;

// Constants for enum TEmployeeCertificateType
type
  TEmployeeCertificateType = TOleEnum;
const
  ecNA = $00000000;
  ecCIS4 = $00000001;
  ecCIS5 = $00000002;
  ecCIS6 = $00000003;
  ecCIS4P = $00000004;
  ecCIS5P = $00000005;

// Constants for enum TAccountType
type
  TAccountType = TOleEnum;
const
  atCustomer = $00000000;
  atSupplier = $00000001;

// Constants for enum TJobActualIndexType
type
  TJobActualIndexType = TOleEnum;
const
  jaIdxLedger = $00000000;
  jaIdxAnalysisCode = $00000001;
  jaIdxStockCode = $00000002;
  jaIdxAnalysisCategory = $00000004;

// Constants for enum TJobRetentionIndexType
type
  TJobRetentionIndexType = TOleEnum;
const
  jrtIdxInvoiced = $00000000;
  jrtIdxDate = $00000001;

// Constants for enum TJobBudgetCategoryType
type
  TJobBudgetCategoryType = TOleEnum;
const
  jbcRevenue = $00000000;
  jbcLabour = $00000001;
  jbcDirectExpense1 = $00000002;
  jbcDirectExpense2 = $00000003;
  jbcStockIssues = $00000004;
  jbcOverheads = $00000005;
  jbcProfit = $00000006;
  jbcReceipts = $00000007;
  jbcWorkInProgress = $00000008;
  jbcRetentionsSL = $00000009;
  jbcRetentionsPL = $0000000A;
  jbcSubLabour = $0000000B;
  jbcMaterials2 = $0000000C;
  jbcOverheads2 = $0000000D;
  jbcSalesDeductions = $0000000E;
  jbcSalesApps = $0000000F;
  jbcPurchaseApps = $00000010;
  jbcPurchaseDeductions = $00000011;

// Constants for enum TCISTaxType
type
  TCISTaxType = TOleEnum;
const
  cisttNA = $00000000;
  cisttConstruction = $00000001;
  cisttTechnical = $00000002;

// Constants for enum TCISVoucherType
type
  TCISVoucherType = TOleEnum;
const
  cvt23 = $00000000;
  cvt24 = $00000001;
  cvt25 = $00000002;

// Constants for enum TCISVoucherIndex
type
  TCISVoucherIndex = TOleEnum;
const
  cvIdxEmployeeDate = $00000000;
  cvIdxDateEmployeeType = $00000001;
  cvIdxNumber = $00000002;
  cvIdxFolio = $00000003;
  cvIdxDateSupplier = $00000004;
  cvIdxSupplierDate = $00000005;

// Constants for enum TMatchingSearchType
type
  TMatchingSearchType = TOleEnum;
const
  maSearchTypeFinancial = $00000000;
  maSearchTypeSPOP = $00000001;
  maSearchTypeCIS = $00000002;
  maSearchTypeCostApportionment = $00000003;
  maSearchTypeUser1 = $00000004;
  maSearchTypeUser2 = $00000005;
  maSearchTypeUser3 = $00000006;
  maSearchTypeUser4 = $00000007;

// Constants for enum TJobInvoiceDetailType
type
  TJobInvoiceDetailType = TOleEnum;
const
  jidBasicSummary = $00000000;
  jidAnalysisSummary = $00000001;
  jidFullDetail = $00000002;

// Constants for enum TJobInvoiceType
type
  TJobInvoiceType = TOleEnum;
const
  jitStage = $00000000;
  jitFinal = $00000001;
  jitWIPOnly = $00000002;

// Constants for enum TAutoLineTypeType
type
  TAutoLineTypeType = TOleEnum;
const
  alNA = $00000000;
  alCIS = $00000001;
  alCustomisation = $00000002;

// Constants for enum TCISHolderType
type
  TCISHolderType = TOleEnum;
const
  chNA = $00000000;
  chRetentions = $00000001;
  chSelfBilling = $00000002;

// Constants for enum TSummaryJobBudgetIndex
type
  TSummaryJobBudgetIndex = TOleEnum;
const
  jbIdxCategory = $00000000;

// Constants for enum TJobPrintMode
type
  TJobPrintMode = TOleEnum;
const
  jrpmJobWithNotes = $00000000;

// Constants for enum TAnalysisJobBudgetIndex
type
  TAnalysisJobBudgetIndex = TOleEnum;
const
  jbIdxAnalysisCode = $00000000;
  jbIdxAnalysisCategory = $00000001;

// Constants for enum TTimeAndStockJobBudgetIndex
type
  TTimeAndStockJobBudgetIndex = TOleEnum;
const
  jbIdxTimeOrStockCode = $00000000;

// Constants for enum TVatIOType
type
  TVatIOType = TOleEnum;
const
  vioNA = $00000000;
  vioInput = $00000001;
  vioOutput = $00000002;

// Constants for enum TNomLineVatType
type
  TNomLineVatType = TOleEnum;
const
  nlvNA = $00000000;
  nlvAuto = $00000001;
  nlvManual = $00000002;

// Constants for enum TOrderConsolidationModeType
type
  TOrderConsolidationModeType = TOleEnum;
const
  ocmDefault = $00000000;
  ocmDeliveries = $00000001;
  ocmInvoices = $00000002;
  ocmDeliveriesAndInvoices = $00000003;
  ocmNeverDeliveries = $00000004;
  ocmNeverInvoices = $00000005;
  ocmNeverDeliveriesOrInvoices = $00000006;
  ocmDeliveriesNeverInvoices = $00000007;
  ocmInvoicesNeverDeliveries = $00000008;

// Constants for enum TAccountOfficeType
type
  TAccountOfficeType = TOleEnum;
const
  aotOffice = $00000000;
  aotHeadOffice = $00000001;

// Constants for enum TAltStockCodeIndex
type
  TAltStockCodeIndex = TOleEnum;
const
  ascAltCode = $00000000;

// Constants for enum TAutoPickModeType
type
  TAutoPickModeType = TOleEnum;
const
  apmNormal = $00000000;
  apmLockBin = $00000001;
  apmQuarantineBin = $00000002;
  apmTagNo = $00000003;

// Constants for enum TCustomerSalesAnalysisIndexType
type
  TCustomerSalesAnalysisIndexType = TOleEnum;
const
  csaIdxDisplayOrder = $00000000;
  csaIdxStockCode = $00000001;

// Constants for enum TSalesAnalysisFilterType
type
  TSalesAnalysisFilterType = TOleEnum;
const
  ftNone = $00000000;
  ftCostCentre = $00000001;
  ftDepartment = $00000002;
  ftLocation = $00000003;

// Constants for enum TBudgetByCCDeptType
type
  TBudgetByCCDeptType = TOleEnum;
const
  bccNone = $00000000;
  bccCCorDepOnly = $00000001;
  bccCombined = $00000002;

// Constants for enum TStatementUseInvoiceDateType
type
  TStatementUseInvoiceDateType = TOleEnum;
const
  suNone = $00000000;
  suSales = $00000001;
  suPurchase = $00000002;
  suSalesAndPurchase = $00000003;

// Constants for enum TStockPrintMode
type
  TStockPrintMode = TOleEnum;
const
  stpmStockWithBOM = $00000000;
  stpmStockWithNotes = $00000001;
  stpmStockLabel = $00000002;

// Constants for enum TAccountPrintMode
type
  TAccountPrintMode = TOleEnum;
const
  acpmAccountWithNotes = $00000000;
  acpmStatement = $00000001;
  acpmTradingLedger = $00000003;
  acpmAccountLabel = $00000004;
  acpmCustomTradingList = $00000005;

// Constants for enum TTermsInterimType
type
  TTermsInterimType = TOleEnum;
const
  tifIncremental = $00000000;
  tifGrossIncremental = $00000001;
  tifGross = $00000005;

// Constants for enum TAppsInterimType
type
  TAppsInterimType = TOleEnum;
const
  aifStandAlone = $00000000;
  aifInterim = $00000001;
  aifPractical = $00000002;
  aifFinal = $00000003;

// Constants for enum TDeductionType
type
  TDeductionType = TOleEnum;
const
  detNormal = $00000000;
  detAfterAllOther = $00000001;
  detContra = $00000002;

// Constants for enum TDeductionApplyToType
type
  TDeductionApplyToType = TOleEnum;
const
  datAll = $00000000;
  datMaterials = $00000001;
  datLabour = $00000002;
  datMaterialsAndLabour = $00000003;
  datOverheads = $00000004;

// Constants for enum TJobDeductionBaseType
type
  TJobDeductionBaseType = TOleEnum;
const
  dbtPercentage = $00000000;
  dbtValue = $00000001;

// Constants for enum TRetentionExpiryType
type
  TRetentionExpiryType = TOleEnum;
const
  reMonths = $00000000;
  reYears = $00000001;
  reOnPractical = $00000002;
  reOnFinal = $00000003;

// Constants for enum TTimeRateRulesType
type
  TTimeRateRulesType = TOleEnum;
const
  trGlobalOwnJob = $00000000;
  trOwnOnly = $00000001;
  trGlobalJobOwn = $00000002;
  trJobOnly = $00000003;

// Constants for enum TLineModeType
type
  TLineModeType = TOleEnum;
const
  lmNormal = $00000000;
  lmDeduction = $00000001;
  lmRetention = $00000002;

// Constants for enum TRetentionType
type
  TRetentionType = TOleEnum;
const
  rtOneOff = $00000000;
  rtInterim = $00000001;
  rtPractical = $00000002;

// Constants for enum TRevenueType
type
  TRevenueType = TOleEnum;
const
  rtNA = $00000000;
  rtLabour = $00000001;
  rtSubLabour = $00000002;
  rtDirectExpense1 = $00000003;
  rtDirectExpense2 = $00000004;
  rtStockIssues = $00000005;
  rtMaterials2 = $00000006;
  rtOverheads = $00000007;
  rtOverheads2 = $00000008;

// Constants for enum TCISCertificateType
type
  TCISCertificateType = TOleEnum;
const
  cisNA = $00000000;
  cis4T = $00000001;
  cis4P = $00000002;
  cis5 = $00000003;
  cis5Partner = $00000004;
  cis6Group = $00000005;

// Constants for enum TBudgetAppBasisType
type
  TBudgetAppBasisType = TOleEnum;
const
  abIncremental = $00000000;
  abGross = $00000001;

// Constants for enum TRetentionAppType
type
  TRetentionAppType = TOleEnum;
const
  ratNormal = $00000000;
  ratOneSided = $00000001;
  ratVatDefer = $00000002;

// Constants for enum TWarrantyUnitsType
type
  TWarrantyUnitsType = TOleEnum;
const
  wtDays = $00000000;
  wtWeeks = $00000001;
  wtMonths = $00000002;
  wtYears = $00000003;

// Constants for enum TPurchaseReturnStatus
type
  TPurchaseReturnStatus = TOleEnum;
const
  prsPending = $00000000;
  prsQuarantined = $00000001;
  prsCreditAndWriteOff = $00000002;
  prsPDNGenerated = $00000003;
  prsReplacementPINGenerated = $00000004;
  prsRepairPINGenerated = $00000005;
  prsWriteOff = $00000006;
  prsComplete = $00000007;

// Constants for enum TReturnActionType
type
  TReturnActionType = TOleEnum;
const
  raCreditAndWriteOff = $00000000;
  raCreditAndReplace = $00000001;
  raRepair = $00000002;
  raWriteOff = $00000003;
  raIssueBackToStock = $00000004;

// Constants for enum TReturnedItemsDisposalType
type
  TReturnedItemsDisposalType = TOleEnum;
const
  ridWriteOff = $00000000;
  ridReturnToStock = $00000001;

// Constants for enum TRestockChargeType
type
  TRestockChargeType = TOleEnum;
const
  rcValue = $00000000;
  rcPercentage = $00000001;

// Constants for enum TSalesReturnStatus
type
  TSalesReturnStatus = TOleEnum;
const
  srsPending = $00000000;
  srsQuarantined = $00000001;
  srsCreditAndWriteOff = $00000002;
  srsSORGenerated = $00000003;
  srsPORGenerated = $00000004;
  srsReplacementSINGenerated = $00000005;
  srsRepairSINGenerated = $00000006;
  srsWriteOff = $00000007;
  srsIssueStock = $00000008;
  srsComplete = $00000009;

// Constants for enum TBankAccountIndex
type
  TBankAccountIndex = TOleEnum;
const
  baIdxGLCode = $00000000;
  baIdxProduct = $00000001;

// Constants for enum TGeneralLedgerClass
type
  TGeneralLedgerClass = TOleEnum;
const
  glcNone = $00000000;
  glcBankAccount = $00000001;
  glcClosingStock = $00000002;
  glcFinishedGoods = $00000003;
  glcStockValue = $00000004;
  glcWOPWIP = $00000005;
  glcOverheads = $00000006;
  glMisc = $00000007;
  glcSalesReturns = $00000008;
  glcPurchaseReturns = $00000009;

// Constants for enum TBankStatementIndex
type
  TBankStatementIndex = TOleEnum;
const
  bsIdxDateAndFolio = $00000000;
  bsIdxReference = $00000001;
  bsIdxStatus = $00000002;

// Constants for enum TBankStatementLineIndex
type
  TBankStatementLineIndex = TOleEnum;
const
  bslIdxLineDate = $00000000;
  bslIdxReference = $00000001;
  bslIdxValue = $00000002;

// Constants for enum TBankStatementStatus
type
  TBankStatementStatus = TOleEnum;
const
  bssOpen = $00000000;
  bssInProgress = $00000001;
  bssComplete = $00000002;

// Constants for enum TBankStatementLineStatus
type
  TBankStatementLineStatus = TOleEnum;
const
  bslsOpen = $00000000;
  bslsComplete = $00000001;

// Constants for enum TContractorType
type
  TContractorType = TOleEnum;
const
  ctNA = $00000000;
  ctSoleTrader = $00000001;
  ctPartnership = $00000002;
  ctTrust = $00000003;
  ctCompany = $00000004;

// Constants for enum TCISSubmitterType
type
  TCISSubmitterType = TOleEnum;
const
  cstIndividual = $00000000;
  cstCompany = $00000001;
  cstAgent = $00000002;
  cstBureau = $00000003;
  cstPartnership = $00000004;
  cstTrust = $00000005;
  cstEmployer = $00000006;
  cstGovernment = $00000007;
  cstActingInCapacity = $00000008;
  cstOther = $00000009;

// Constants for enum TVATSchemeType
type
  TVATSchemeType = TOleEnum;
const
  vsNormal = $00000000;
  vsCashAccounting = $00000001;

// Constants for enum TCompanyManagerSearchMode
type
  TCompanyManagerSearchMode = TOleEnum;
const
  smCoCode = $00000000;
  smCoName = $00000001;
  smCoPath = $00000002;

// Constants for enum TTransValueDiscountType
type
  TTransValueDiscountType = TOleEnum;
const
  tvdNA = $00000000;
  tvdTotalTrans = $00000001;
  tvdValueBased = $00000002;
  tvdDescription = $000000FF;

// Constants for enum TMultiBuyDiscountType
type
  TMultiBuyDiscountType = TOleEnum;
const
  mbtGetFree = $00000000;
  mbtForPrice = $00000001;
  mbtPercentOff = $00000002;

// Constants for enum TTransLineTotalsType
type
  TTransLineTotalsType = TOleEnum;
const
  LineTotNet = $00000000;
  LineTotGross = $00000001;
  LineTotTotalDiscounts = $00000002;
  LineTotTotalCost = $00000003;
  LineTotMultiBuyDiscount = $00000004;
  LineTotTransDiscount = $00000005;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IToolkit = interface;
  IToolkitDisp = dispinterface;
  IToolkit2 = interface;
  IToolkit2Disp = dispinterface;
  IAccount = interface;
  IAccountDisp = dispinterface;
  ITransaction = interface;
  ITransactionDisp = dispinterface;
  IAddress = interface;
  IAddressDisp = dispinterface;
  IAccountBalance = interface;
  IAccountBalanceDisp = dispinterface;
  IFunctions = interface;
  IFunctionsDisp = dispinterface;
  ITransactionLines = interface;
  ITransactionLinesDisp = dispinterface;
  ITransactionLine = interface;
  ITransactionLineDisp = dispinterface;
  ISystemSetup = interface;
  ISystemSetupDisp = dispinterface;
  ISystemSetupCurrency = interface;
  ISystemSetupCurrencyDisp = dispinterface;
  ISystemSetupReleaseCodes = interface;
  ISystemSetupReleaseCodesDisp = dispinterface;
  ISystemSetupUserFields = interface;
  ISystemSetupUserFieldsDisp = dispinterface;
  ISystemSetupVat = interface;
  ISystemSetupVatDisp = dispinterface;
  IStock = interface;
  IStockDisp = dispinterface;
  IStockCover = interface;
  IStockCoverDisp = dispinterface;
  IStockIntrastat = interface;
  IStockIntrastatDisp = dispinterface;
  IStockReorder = interface;
  IStockReorderDisp = dispinterface;
  IStockSalesBand = interface;
  IStockSalesBandDisp = dispinterface;
  IConfiguration = interface;
  IConfigurationDisp = dispinterface;
  IEnterprise = interface;
  IEnterpriseDisp = dispinterface;
  IGeneralLedger = interface;
  IGeneralLedgerDisp = dispinterface;
  ILocation = interface;
  ILocationDisp = dispinterface;
  ICCDept = interface;
  ICCDeptDisp = dispinterface;
  ICompanyManager = interface;
  ICompanyManagerDisp = dispinterface;
  ICompanyDetail = interface;
  ICompanyDetailDisp = dispinterface;
  IStockLocation = interface;
  IStockLocationDisp = dispinterface;
  INotes = interface;
  INotesDisp = dispinterface;
  IJobCosting = interface;
  IJobCostingDisp = dispinterface;
  IJob = interface;
  IJobDisp = dispinterface;
  IMatching = interface;
  IMatchingDisp = dispinterface;
  IAccountDiscount = interface;
  IAccountDiscountDisp = dispinterface;
  IEBusiness = interface;
  IEBusinessDisp = dispinterface;
  IQuantityBreak = interface;
  IQuantityBreakDisp = dispinterface;
  ISystemSetupJob = interface;
  ISystemSetupJobDisp = dispinterface;
  ISystemSetupPaperless = interface;
  ISystemSetupPaperlessDisp = dispinterface;
  IJobType = interface;
  IJobTypeDisp = dispinterface;
  IJobAnalysis = interface;
  IJobAnalysisDisp = dispinterface;
  IStockBOMComponent = interface;
  IStockBOMComponentDisp = dispinterface;
  IStockBOMList = interface;
  IStockBOMListDisp = dispinterface;
  IStockWhereUsed = interface;
  IStockWhereUsedDisp = dispinterface;
  IEmployee = interface;
  IEmployeeDisp = dispinterface;
  ITimeRates = interface;
  ITimeRatesDisp = dispinterface;
  ISerialBatchDetails = interface;
  ISerialBatchDetailsDisp = dispinterface;
  ISerialBatch = interface;
  ISerialBatchDisp = dispinterface;
  ITransactionLineSerialBatch = interface;
  ITransactionLineSerialBatchDisp = dispinterface;
  IInternalDebug = interface;
  IInternalDebugDisp = dispinterface;
  IUserProfile = interface;
  IUserProfileDisp = dispinterface;
  IToolkit3 = interface;
  IToolkit3Disp = dispinterface;
  ISystemSetupUserFields2 = interface;
  ISystemSetupUserFields2Disp = dispinterface;
  ISystemSetup2 = interface;
  ISystemSetup2Disp = dispinterface;
  ISystemSetupPaperless2 = interface;
  ISystemSetupPaperless2Disp = dispinterface;
  ISystemSetupFormDefinitionSet = interface;
  ISystemSetupFormDefinitionSetDisp = dispinterface;
  ITransaction2 = interface;
  ITransaction2Disp = dispinterface;
  ITransactionAsNOM = interface;
  ITransactionAsNOMDisp = dispinterface;
  ITransactionAsTSH = interface;
  ITransactionAsTSHDisp = dispinterface;
  ITransactionLineAsNOM = interface;
  ITransactionLineAsNOMDisp = dispinterface;
  ITransactionLine2 = interface;
  ITransactionLine2Disp = dispinterface;
  ITransactionLineAsTSH = interface;
  ITransactionLineAsTSHDisp = dispinterface;
  ITransactionAsADJ = interface;
  ITransactionAsADJDisp = dispinterface;
  ITransactionLineAsADJ = interface;
  ITransactionLineAsADJDisp = dispinterface;
  ITransactionAsWOR = interface;
  ITransactionAsWORDisp = dispinterface;
  ITransactionLineAsWOR = interface;
  ITransactionLineAsWORDisp = dispinterface;
  ILinks = interface;
  ILinksDisp = dispinterface;
  IJob2 = interface;
  IJob2Disp = dispinterface;
  IAutoTransactionSettings = interface;
  IAutoTransactionSettingsDisp = dispinterface;
  IConvert = interface;
  IConvertDisp = dispinterface;
  ISingleConvert = interface;
  ISingleConvertDisp = dispinterface;
  IConvertList = interface;
  IConvertListDisp = dispinterface;
  ISystemProcesses = interface;
  ISystemProcessesDisp = dispinterface;
  IBackToBackOrder = interface;
  IBackToBackOrderDisp = dispinterface;
  ITransactionAsBatch = interface;
  ITransactionAsBatchDisp = dispinterface;
  IPrintJob = interface;
  IPrintJobDisp = dispinterface;
  IPrinters = interface;
  IPrintersDisp = dispinterface;
  IPrinterDetail = interface;
  IPrinterDetailDisp = dispinterface;
  IStringListReadOnly = interface;
  IStringListReadOnlyDisp = dispinterface;
  IPrintFormList = interface;
  IPrintFormListDisp = dispinterface;
  IPrintFormDetail = interface;
  IPrintFormDetailDisp = dispinterface;
  IPrintTempFile = interface;
  IPrintTempFileDisp = dispinterface;
  IPrintJobEmailInfo = interface;
  IPrintJobEmailInfoDisp = dispinterface;
  IEmailAddressArray = interface;
  IEmailAddressArrayDisp = dispinterface;
  IEmailAddress = interface;
  IEmailAddressDisp = dispinterface;
  IEmailAttachments = interface;
  IEmailAttachmentsDisp = dispinterface;
  IPrintJobFaxInfo = interface;
  IPrintJobFaxInfoDisp = dispinterface;
  IPrintJobFileInfo = interface;
  IPrintJobFileInfoDisp = dispinterface;
  ITransactionLineAsPayLine = interface;
  ITransactionLineAsPayLineDisp = dispinterface;
  IFormDetails = interface;
  IFormDetailsDisp = dispinterface;
  IPrintJobDataList = interface;
  IPrintJobDataListDisp = dispinterface;
  IPrintJobDataDetails = interface;
  IPrintJobDataDetailsDisp = dispinterface;
  IRecordPosition = interface;
  IRecordPositionDisp = dispinterface;
  ITransactionLineSerialBatch2 = interface;
  ITransactionLineSerialBatch2Disp = dispinterface;
  ITransactionDetails = interface;
  ITransactionDetailsDisp = dispinterface;
  IJobType2 = interface;
  IJobType2Disp = dispinterface;
  IJobAnalysis2 = interface;
  IJobAnalysis2Disp = dispinterface;
  IEmployee2 = interface;
  IEmployee2Disp = dispinterface;
  ITimeRates2 = interface;
  ITimeRates2Disp = dispinterface;
  IJobActual = interface;
  IJobActualDisp = dispinterface;
  ICurrencyTriangulation = interface;
  ICurrencyTriangulationDisp = dispinterface;
  IJobRetention = interface;
  IJobRetentionDisp = dispinterface;
  IJobBudget = interface;
  IJobBudgetDisp = dispinterface;
  ISummaryJobBudget = interface;
  ISummaryJobBudgetDisp = dispinterface;
  IAnalysisJobBudget = interface;
  IAnalysisJobBudgetDisp = dispinterface;
  ITimeAndStockJobBudget = interface;
  ITimeAndStockJobBudgetDisp = dispinterface;
  IBrowseInfo = interface;
  IBrowseInfoDisp = dispinterface;
  IMatching2 = interface;
  IMatching2Disp = dispinterface;
  ICISRate = interface;
  ICISRateDisp = dispinterface;
  ISystemSetupCIS = interface;
  ISystemSetupCISDisp = dispinterface;
  ICISVoucherCounter = interface;
  ICISVoucherCounterDisp = dispinterface;
  ICISVoucher = interface;
  ICISVoucherDisp = dispinterface;
  IJobCosting2 = interface;
  IJobCosting2Disp = dispinterface;
  IJobInvoice = interface;
  IJobInvoiceDisp = dispinterface;
  IJobInvoiceTransaction = interface;
  IJobInvoiceTransactionDisp = dispinterface;
  IJobInvoiceTransactionList = interface;
  IJobInvoiceTransactionListDisp = dispinterface;
  IJobInvoiceTransaction2 = interface;
  IJobInvoiceTransaction2Disp = dispinterface;
  ITransactionAsNOM2 = interface;
  ITransactionAsNOM2Disp = dispinterface;
  ITransactionLineAsNOM2 = interface;
  ITransactionLineAsNOM2Disp = dispinterface;
  IEmployee3 = interface;
  IEmployee3Disp = dispinterface;
  IJobInvoiceTransaction3 = interface;
  IJobInvoiceTransaction3Disp = dispinterface;
  IBtrieveFunctions = interface;
  IBtrieveFunctionsDisp = dispinterface;
  IAccount2 = interface;
  IAccount2Disp = dispinterface;
  IStock2 = interface;
  IStock2Disp = dispinterface;
  IStockIntrastat2 = interface;
  IStockIntrastat2Disp = dispinterface;
  IFunctions2 = interface;
  IFunctions2Disp = dispinterface;
  IAltStockCode = interface;
  IAltStockCodeDisp = dispinterface;
  IMultiBinDetails = interface;
  IMultiBinDetailsDisp = dispinterface;
  IMultiBin = interface;
  IMultiBinDisp = dispinterface;
  ITransactionLineMultiBin = interface;
  ITransactionLineMultiBinDisp = dispinterface;
  ISalesAnalysis = interface;
  ISalesAnalysisDisp = dispinterface;
  ICustomerSalesAnalysis = interface;
  ICustomerSalesAnalysisDisp = dispinterface;
  ISalesAnalysisHistory = interface;
  ISalesAnalysisHistoryDisp = dispinterface;
  IStockSalesAnalysis = interface;
  IStockSalesAnalysisDisp = dispinterface;
  ITransactionLine3 = interface;
  ITransactionLine3Disp = dispinterface;
  ISerialBatchDetails2 = interface;
  ISerialBatchDetails2Disp = dispinterface;
  ISerialBatch2 = interface;
  ISerialBatch2Disp = dispinterface;
  ISystemSetup3 = interface;
  ISystemSetup3Disp = dispinterface;
  ITransaction3 = interface;
  ITransaction3Disp = dispinterface;
  IBtrieveFunctions2 = interface;
  IBtrieveFunctions2Disp = dispinterface;
  IPrintFormList2 = interface;
  IPrintFormList2Disp = dispinterface;
  ITransactionAsApplication = interface;
  ITransactionAsApplicationDisp = dispinterface;
  ITransactionLineAsApplication = interface;
  ITransactionLineAsApplicationDisp = dispinterface;
  IJobAnalysis3 = interface;
  IJobAnalysis3Disp = dispinterface;
  IJobApplications = interface;
  IJobApplicationsDisp = dispinterface;
  IApplicationsList = interface;
  IApplicationsListDisp = dispinterface;
  ITermsList = interface;
  ITermsListDisp = dispinterface;
  IJob3 = interface;
  IJob3Disp = dispinterface;
  IEmployee4 = interface;
  IEmployee4Disp = dispinterface;
  ISystemSetupCIS2 = interface;
  ISystemSetupCIS2Disp = dispinterface;
  IAnalysisJobBudget2 = interface;
  IAnalysisJobBudget2Disp = dispinterface;
  IJobRetention2 = interface;
  IJobRetention2Disp = dispinterface;
  ITransactionLineSerialBatch3 = interface;
  ITransactionLineSerialBatch3Disp = dispinterface;
  ISystemSetupReleaseCodes2 = interface;
  ISystemSetupReleaseCodes2Disp = dispinterface;
  IJob4 = interface;
  IJob4Disp = dispinterface;
  IAltStockCode2 = interface;
  IAltStockCode2Disp = dispinterface;
  IStock3 = interface;
  IStock3Disp = dispinterface;
  IQuantityBreak2 = interface;
  IQuantityBreak2Disp = dispinterface;
  IAccountDiscount2 = interface;
  IAccountDiscount2Disp = dispinterface;
  IStock4 = interface;
  IStock4Disp = dispinterface;
  ILocation2 = interface;
  ILocation2Disp = dispinterface;
  IStockLocation2 = interface;
  IStockLocation2Disp = dispinterface;
  ISerialBatch3 = interface;
  ISerialBatch3Disp = dispinterface;
  ISerialBatchDetails3 = interface;
  ISerialBatchDetails3Disp = dispinterface;
  IMultiBin2 = interface;
  IMultiBin2Disp = dispinterface;
  IMultiBinDetails2 = interface;
  IMultiBinDetails2Disp = dispinterface;
  ISystemSetupReturnLineReason = interface;
  ISystemSetupReturnLineReasonDisp = dispinterface;
  ISystemSetup4 = interface;
  ISystemSetup4Disp = dispinterface;
  ITransactionLineAsReturn = interface;
  ITransactionLineAsReturnDisp = dispinterface;
  ITransactionLine4 = interface;
  ITransactionLine4Disp = dispinterface;
  ITransactionAsReturn = interface;
  ITransactionAsReturnDisp = dispinterface;
  ITransaction4 = interface;
  ITransaction4Disp = dispinterface;
  IReturnCreate = interface;
  IReturnCreateDisp = dispinterface;
  ITransactionReturnCreate = interface;
  ITransactionReturnCreateDisp = dispinterface;
  ITransactionLineReturnCreate = interface;
  ITransactionLineReturnCreateDisp = dispinterface;
  IReturnAction = interface;
  IReturnActionDisp = dispinterface;
  ISystemSetupReleaseCodes3 = interface;
  ISystemSetupReleaseCodes3Disp = dispinterface;
  IBankAccount = interface;
  IBankAccountDisp = dispinterface;
  IBanking = interface;
  IBankingDisp = dispinterface;
  IBankProducts = interface;
  IBankProductsDisp = dispinterface;
  IGeneralLedger2 = interface;
  IGeneralLedger2Disp = dispinterface;
  IBankStatementLine = interface;
  IBankStatementLineDisp = dispinterface;
  IBankStatement = interface;
  IBankStatementDisp = dispinterface;
  IAutoTransactionSettings2 = interface;
  IAutoTransactionSettings2Disp = dispinterface;
  IToolkitRecord = interface;
  IToolkitRecordDisp = dispinterface;
  IBankReconciliationHeader = interface;
  IBankReconciliationHeaderDisp = dispinterface;
  IBankReconciliationDetail = interface;
  IBankReconciliationDetailDisp = dispinterface;
  IConvertList2 = interface;
  IConvertList2Disp = dispinterface;
  ICCDept2 = interface;
  ICCDept2Disp = dispinterface;
  ISystemSetup5 = interface;
  ISystemSetup5Disp = dispinterface;
  IEmployee5 = interface;
  IEmployee5Disp = dispinterface;
  ISystemSetupReleaseCodes4 = interface;
  ISystemSetupReleaseCodes4Disp = dispinterface;
  ISystemSetupCIS3 = interface;
  ISystemSetupCIS3Disp = dispinterface;
  ISystemSetupCIS4 = interface;
  ISystemSetupCIS4Disp = dispinterface;
  ISystemSetupPaperless3 = interface;
  ISystemSetupPaperless3Disp = dispinterface;
  ITransaction5 = interface;
  ITransaction5Disp = dispinterface;
  ISystemSetup6 = interface;
  ISystemSetup6Disp = dispinterface;
  IBankAccount2 = interface;
  IBankAccount2Disp = dispinterface;
  ICompanyManager2 = interface;
  ICompanyManager2Disp = dispinterface;
  ICompanyDetail2 = interface;
  ICompanyDetail2Disp = dispinterface;
  IFunctions3 = interface;
  IFunctions3Disp = dispinterface;
  IGeneralLedger3 = interface;
  IGeneralLedger3Disp = dispinterface;
  ISQLFunctions = interface;
  ISQLFunctionsDisp = dispinterface;
  IAnalysisJobBudget3 = interface;
  IAnalysisJobBudget3Disp = dispinterface;
  ITimeAndStockJobBudget2 = interface;
  ITimeAndStockJobBudget2Disp = dispinterface;
  ISummaryJobBudget2 = interface;
  ISummaryJobBudget2Disp = dispinterface;
  ICCDept3 = interface;
  ICCDept3Disp = dispinterface;
  IMultiBuyDetails = interface;
  IMultiBuyDetailsDisp = dispinterface;
  IMultiBuyDiscounts = interface;
  IMultiBuyDiscountsDisp = dispinterface;
  IMultiBuy = interface;
  IMultiBuyDisp = dispinterface;
  IAccount3 = interface;
  IAccount3Disp = dispinterface;
  IStock5 = interface;
  IStock5Disp = dispinterface;
  ITransactionLine5 = interface;
  ITransactionLine5Disp = dispinterface;
  ITransaction6 = interface;
  ITransaction6Disp = dispinterface;
  ITransactionLine6 = interface;
  ITransactionLine6Disp = dispinterface;
  ISystemSetup7 = interface;
  ISystemSetup7Disp = dispinterface;
  ITransaction7 = interface;
  ITransaction7Disp = dispinterface;
  ITransactionLine7 = interface;
  ITransactionLine7Disp = dispinterface;
  IEmployee6 = interface;
  IEmployee6Disp = dispinterface;
  ITransaction8 = interface;
  ITransaction8Disp = dispinterface;
  ISystemSetup8 = interface;
  ISystemSetup8Disp = dispinterface;
  IConfiguration2 = interface;
  IConfiguration2Disp = dispinterface;
  ISerialBatch4 = interface;
  ISerialBatch4Disp = dispinterface;
  IAccountBalance2 = interface;
  IAccountBalance2Disp = dispinterface;
  IUserProfile2 = interface;
  IUserProfile2Disp = dispinterface;
  IAccount4 = interface;
  IAccount4Disp = dispinterface;
  ITransaction9 = interface;
  ITransaction9Disp = dispinterface;
  IStock6 = interface;
  IStock6Disp = dispinterface;
  IJob5 = interface;
  IJob5Disp = dispinterface;
  ITransactionLine8 = interface;
  ITransactionLine8Disp = dispinterface;
  ISystemSetupUserFields3 = interface;
  ISystemSetupUserFields3Disp = dispinterface;
  IConversionLibrary = interface;
  IConversionLibraryDisp = dispinterface;
  ISystemSetupUserFields4 = interface;
  ISystemSetupUserFields4Disp = dispinterface;
  ITransactionLine9 = interface;
  ITransactionLine9Disp = dispinterface;
  IJob6 = interface;
  IJob6Disp = dispinterface;
  IUserProfile3 = interface;
  IUserProfile3Disp = dispinterface;
  IJob7 = interface;
  IJob7Disp = dispinterface;
  ISummaryJobBudget3 = interface;
  ISummaryJobBudget3Disp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  Toolkit = IToolkit3;


// *********************************************************************//
// Interface: IToolkit
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3CCE73CF-E79F-4D2F-AAC3-FB7BA9C631AC}
// *********************************************************************//
  IToolkit = interface(IDispatch)
    ['{3CCE73CF-E79F-4D2F-AAC3-FB7BA9C631AC}']
    function CloseToolkit: Integer; safecall;
    function Get_Company: ICompanyManager; safecall;
    function Get_Configuration: IConfiguration; safecall;
    function Get_CostCentre: ICCDept; safecall;
    function Get_Customer: IAccount; safecall;
    function Get_Department: ICCDept; safecall;
    function Get_eBusiness: IEBusiness; safecall;
    function Get_Enterprise: IEnterprise; safecall;
    function Get_Functions: IFunctions; safecall;
    function Get_GeneralLedger: IGeneralLedger; safecall;
    function Get_JobCosting: IJobCosting; safecall;
    function Get_LastErrorString: WideString; safecall;
    function Get_Location: ILocation; safecall;
    function OpenToolkit: Integer; safecall;
    function Get_Status: TToolkitStatus; safecall;
    function Get_Stock: IStock; safecall;
    function Get_Supplier: IAccount; safecall;
    function Get_SystemSetup: ISystemSetup; safecall;
    function Get_Transaction: ITransaction; safecall;
    function Get_Version: WideString; safecall;
    property Company: ICompanyManager read Get_Company;
    property Configuration: IConfiguration read Get_Configuration;
    property CostCentre: ICCDept read Get_CostCentre;
    property Customer: IAccount read Get_Customer;
    property Department: ICCDept read Get_Department;
    property eBusiness: IEBusiness read Get_eBusiness;
    property Enterprise: IEnterprise read Get_Enterprise;
    property Functions: IFunctions read Get_Functions;
    property GeneralLedger: IGeneralLedger read Get_GeneralLedger;
    property JobCosting: IJobCosting read Get_JobCosting;
    property LastErrorString: WideString read Get_LastErrorString;
    property Location: ILocation read Get_Location;
    property Status: TToolkitStatus read Get_Status;
    property Stock: IStock read Get_Stock;
    property Supplier: IAccount read Get_Supplier;
    property SystemSetup: ISystemSetup read Get_SystemSetup;
    property Transaction: ITransaction read Get_Transaction;
    property Version: WideString read Get_Version;
  end;

// *********************************************************************//
// DispIntf:  IToolkitDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3CCE73CF-E79F-4D2F-AAC3-FB7BA9C631AC}
// *********************************************************************//
  IToolkitDisp = dispinterface
    ['{3CCE73CF-E79F-4D2F-AAC3-FB7BA9C631AC}']
    function CloseToolkit: Integer; dispid 1;
    property Company: ICompanyManager readonly dispid 2;
    property Configuration: IConfiguration readonly dispid 3;
    property CostCentre: ICCDept readonly dispid 4;
    property Customer: IAccount readonly dispid 5;
    property Department: ICCDept readonly dispid 6;
    property eBusiness: IEBusiness readonly dispid 7;
    property Enterprise: IEnterprise readonly dispid 8;
    property Functions: IFunctions readonly dispid 9;
    property GeneralLedger: IGeneralLedger readonly dispid 10;
    property JobCosting: IJobCosting readonly dispid 11;
    property LastErrorString: WideString readonly dispid 12;
    property Location: ILocation readonly dispid 13;
    function OpenToolkit: Integer; dispid 14;
    property Status: TToolkitStatus readonly dispid 15;
    property Stock: IStock readonly dispid 16;
    property Supplier: IAccount readonly dispid 17;
    property SystemSetup: ISystemSetup readonly dispid 18;
    property Transaction: ITransaction readonly dispid 19;
    property Version: WideString readonly dispid 20;
  end;

// *********************************************************************//
// Interface: IToolkit2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C80217DA-5243-44B7-AEFD-DB7B3BE2CC2E}
// *********************************************************************//
  IToolkit2 = interface(IToolkit)
    ['{C80217DA-5243-44B7-AEFD-DB7B3BE2CC2E}']
    function Get_UserProfile: IUserProfile; safecall;
    function Get_TransactionDetails: ITransactionDetails; safecall;
    function Get_SystemProcesses: ISystemProcesses; safecall;
    property UserProfile: IUserProfile read Get_UserProfile;
    property TransactionDetails: ITransactionDetails read Get_TransactionDetails;
    property SystemProcesses: ISystemProcesses read Get_SystemProcesses;
  end;

// *********************************************************************//
// DispIntf:  IToolkit2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C80217DA-5243-44B7-AEFD-DB7B3BE2CC2E}
// *********************************************************************//
  IToolkit2Disp = dispinterface
    ['{C80217DA-5243-44B7-AEFD-DB7B3BE2CC2E}']
    property UserProfile: IUserProfile readonly dispid 21;
    property TransactionDetails: ITransactionDetails readonly dispid 22;
    property SystemProcesses: ISystemProcesses readonly dispid 23;
    function CloseToolkit: Integer; dispid 1;
    property Company: ICompanyManager readonly dispid 2;
    property Configuration: IConfiguration readonly dispid 3;
    property CostCentre: ICCDept readonly dispid 4;
    property Customer: IAccount readonly dispid 5;
    property Department: ICCDept readonly dispid 6;
    property eBusiness: IEBusiness readonly dispid 7;
    property Enterprise: IEnterprise readonly dispid 8;
    property Functions: IFunctions readonly dispid 9;
    property GeneralLedger: IGeneralLedger readonly dispid 10;
    property JobCosting: IJobCosting readonly dispid 11;
    property LastErrorString: WideString readonly dispid 12;
    property Location: ILocation readonly dispid 13;
    function OpenToolkit: Integer; dispid 14;
    property Status: TToolkitStatus readonly dispid 15;
    property Stock: IStock readonly dispid 16;
    property Supplier: IAccount readonly dispid 17;
    property SystemSetup: ISystemSetup readonly dispid 18;
    property Transaction: ITransaction readonly dispid 19;
    property Version: WideString readonly dispid 20;
  end;

// *********************************************************************//
// Interface: IAccount
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27FB2718-B428-4846-AFF2-4F6639E2541F}
// *********************************************************************//
  IAccount = interface(IDispatch)
    ['{27FB2718-B428-4846-AFF2-4F6639E2541F}']
    function Get_acCode: WideString; safecall;
    procedure Set_acCode(const Value: WideString); safecall;
    function Get_acCompany: WideString; safecall;
    procedure Set_acCompany(const Value: WideString); safecall;
    function Get_acArea: WideString; safecall;
    procedure Set_acArea(const Value: WideString); safecall;
    function Get_acAccType: WideString; safecall;
    procedure Set_acAccType(const Value: WideString); safecall;
    function Get_acStatementTo: WideString; safecall;
    procedure Set_acStatementTo(const Value: WideString); safecall;
    function Get_acVATRegNo: WideString; safecall;
    procedure Set_acVATRegNo(const Value: WideString); safecall;
    function Get_acAddress: IAddress; safecall;
    function Get_acDelAddress: IAddress; safecall;
    function Get_acContact: WideString; safecall;
    procedure Set_acContact(const Value: WideString); safecall;
    function Get_acPhone: WideString; safecall;
    procedure Set_acPhone(const Value: WideString); safecall;
    function Get_acFax: WideString; safecall;
    procedure Set_acFax(const Value: WideString); safecall;
    function Get_acTheirAcc: WideString; safecall;
    procedure Set_acTheirAcc(const Value: WideString); safecall;
    function Get_acOwnTradTerm: WordBool; safecall;
    procedure Set_acOwnTradTerm(Value: WordBool); safecall;
    function Get_acTradeTerms(Index: Integer): WideString; safecall;
    procedure Set_acTradeTerms(Index: Integer; const Value: WideString); safecall;
    function Get_acCurrency: Smallint; safecall;
    procedure Set_acCurrency(Value: Smallint); safecall;
    function Get_acVATCode: WideString; safecall;
    procedure Set_acVATCode(const Value: WideString); safecall;
    function Get_acPayTerms: Smallint; safecall;
    procedure Set_acPayTerms(Value: Smallint); safecall;
    function Get_acCreditLimit: Double; safecall;
    procedure Set_acCreditLimit(Value: Double); safecall;
    function Get_acDiscount: Double; safecall;
    procedure Set_acDiscount(Value: Double); safecall;
    function Get_acCreditStatus: Smallint; safecall;
    procedure Set_acCreditStatus(Value: Smallint); safecall;
    function Get_acCostCentre: WideString; safecall;
    procedure Set_acCostCentre(const Value: WideString); safecall;
    function Get_acDiscountBand: WideString; safecall;
    procedure Set_acDiscountBand(const Value: WideString); safecall;
    function Get_acDepartment: WideString; safecall;
    procedure Set_acDepartment(const Value: WideString); safecall;
    function Get_acECMember: WordBool; safecall;
    procedure Set_acECMember(Value: WordBool); safecall;
    function Get_acStatement: WordBool; safecall;
    procedure Set_acStatement(Value: WordBool); safecall;
    function Get_acSalesGL: Integer; safecall;
    procedure Set_acSalesGL(Value: Integer); safecall;
    function Get_acLocation: WideString; safecall;
    procedure Set_acLocation(const Value: WideString); safecall;
    function Get_acAccStatus: TAccountStatus; safecall;
    procedure Set_acAccStatus(Value: TAccountStatus); safecall;
    function Get_acPayType: WideString; safecall;
    procedure Set_acPayType(const Value: WideString); safecall;
    function Get_acBankSort: WideString; safecall;
    procedure Set_acBankSort(const Value: WideString); safecall;
    function Get_acBankAcc: WideString; safecall;
    procedure Set_acBankAcc(const Value: WideString); safecall;
    function Get_acBankRef: WideString; safecall;
    procedure Set_acBankRef(const Value: WideString); safecall;
    function Get_acLastUsed: WideString; safecall;
    function Get_acPhone2: WideString; safecall;
    procedure Set_acPhone2(const Value: WideString); safecall;
    function Get_acUserDef1: WideString; safecall;
    procedure Set_acUserDef1(const Value: WideString); safecall;
    function Get_acUserDef2: WideString; safecall;
    procedure Set_acUserDef2(const Value: WideString); safecall;
    function Get_acInvoiceTo: WideString; safecall;
    procedure Set_acInvoiceTo(const Value: WideString); safecall;
    function Get_acSOPAutoWOff: WordBool; safecall;
    procedure Set_acSOPAutoWOff(Value: WordBool); safecall;
    function Get_acBookOrdVal: Double; safecall;
    procedure Set_acBookOrdVal(Value: Double); safecall;
    function Get_acCOSGL: Integer; safecall;
    procedure Set_acCOSGL(Value: Integer); safecall;
    function Get_acDrCrGL: Integer; safecall;
    procedure Set_acDrCrGL(Value: Integer); safecall;
    function Get_acDirDebMode: Smallint; safecall;
    procedure Set_acDirDebMode(Value: Smallint); safecall;
    function Get_acCCStart: WideString; safecall;
    procedure Set_acCCStart(const Value: WideString); safecall;
    function Get_acCCEnd: WideString; safecall;
    procedure Set_acCCEnd(const Value: WideString); safecall;
    function Get_acCCName: WideString; safecall;
    procedure Set_acCCName(const Value: WideString); safecall;
    function Get_acCCNumber: WideString; safecall;
    procedure Set_acCCNumber(const Value: WideString); safecall;
    function Get_acCCSwitch: WideString; safecall;
    procedure Set_acCCSwitch(const Value: WideString); safecall;
    function Get_acDefSettleDays: Integer; safecall;
    procedure Set_acDefSettleDays(Value: Integer); safecall;
    function Get_acDefSettleDisc: Double; safecall;
    procedure Set_acDefSettleDisc(Value: Double); safecall;
    function Get_acFormSet: Smallint; safecall;
    procedure Set_acFormSet(Value: Smallint); safecall;
    function Get_acStateDeliveryMode: Integer; safecall;
    procedure Set_acStateDeliveryMode(Value: Integer); safecall;
    function Get_acEmailAddr: WideString; safecall;
    procedure Set_acEmailAddr(const Value: WideString); safecall;
    function Get_acSendReader: WordBool; safecall;
    procedure Set_acSendReader(Value: WordBool); safecall;
    function Get_acEBusPword: WideString; safecall;
    procedure Set_acEBusPword(const Value: WideString); safecall;
    function Get_acAltCode: WideString; safecall;
    procedure Set_acAltCode(const Value: WideString); safecall;
    function Get_acPostCode: WideString; safecall;
    procedure Set_acPostCode(const Value: WideString); safecall;
    function Get_acUseForEbus: Integer; safecall;
    procedure Set_acUseForEbus(Value: Integer); safecall;
    function Get_acZIPAttachments: TEmailAttachmentZIPType; safecall;
    procedure Set_acZIPAttachments(Value: TEmailAttachmentZIPType); safecall;
    function Get_acUserDef3: WideString; safecall;
    procedure Set_acUserDef3(const Value: WideString); safecall;
    function Get_acUserDef4: WideString; safecall;
    procedure Set_acUserDef4(const Value: WideString); safecall;
    function Get_acTimeStamp: WideString; safecall;
    function Get_acSSDDeliveryTerms: WideString; safecall;
    procedure Set_acSSDDeliveryTerms(const Value: WideString); safecall;
    function Get_acInclusiveVATCode: WideString; safecall;
    procedure Set_acInclusiveVATCode(const Value: WideString); safecall;
    function Get_acSSDModeOfTransport: Integer; safecall;
    procedure Set_acSSDModeOfTransport(Value: Integer); safecall;
    function Get_acLastOperator: WideString; safecall;
    procedure Set_acLastOperator(const Value: WideString); safecall;
    function Get_acDocDeliveryMode: Integer; safecall;
    procedure Set_acDocDeliveryMode(Value: Integer); safecall;
    function Get_acSendHTML: WordBool; safecall;
    procedure Set_acSendHTML(Value: WordBool); safecall;
    function Get_acWebLiveCatalog: WideString; safecall;
    procedure Set_acWebLiveCatalog(const Value: WideString); safecall;
    function Get_acWebPrevCatalog: WideString; safecall;
    procedure Set_acWebPrevCatalog(const Value: WideString); safecall;
    function Get_acHistory: IAccountBalance; safecall;
    function Save: Integer; safecall;
    function Add: IAccount; safecall;
    function Clone: IAccount; safecall;
    function Update: IAccount; safecall;
    procedure Cancel; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Index: TAccountIndex; safecall;
    procedure Set_Index(Value: TAccountIndex); safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function BuildCodeIndex(const AccountCode: WideString): WideString; safecall;
    function BuildNameIndex(const AccountName: WideString): WideString; safecall;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; safecall;
    function BuildVatRegIndex(const VatRegNo: WideString; const AccountCode: WideString): WideString; safecall;
    function BuildEmailIndex(const EmailAddr: WideString): WideString; safecall;
    function BuildPhoneIndex(const PhoneNo: WideString): WideString; safecall;
    function BuildPostCodeIndex(const PostCode: WideString): WideString; safecall;
    function BuildOurCodeIndex(const OurCode: WideString): WideString; safecall;
    function BuildInvoiceToIndex(const AccountCode: WideString): WideString; safecall;
    function Get_acNotes: INotes; safecall;
    function Get_acDiscounts: IAccountDiscount; safecall;
    property acCode: WideString read Get_acCode write Set_acCode;
    property acCompany: WideString read Get_acCompany write Set_acCompany;
    property acArea: WideString read Get_acArea write Set_acArea;
    property acAccType: WideString read Get_acAccType write Set_acAccType;
    property acStatementTo: WideString read Get_acStatementTo write Set_acStatementTo;
    property acVATRegNo: WideString read Get_acVATRegNo write Set_acVATRegNo;
    property acAddress: IAddress read Get_acAddress;
    property acDelAddress: IAddress read Get_acDelAddress;
    property acContact: WideString read Get_acContact write Set_acContact;
    property acPhone: WideString read Get_acPhone write Set_acPhone;
    property acFax: WideString read Get_acFax write Set_acFax;
    property acTheirAcc: WideString read Get_acTheirAcc write Set_acTheirAcc;
    property acOwnTradTerm: WordBool read Get_acOwnTradTerm write Set_acOwnTradTerm;
    property acTradeTerms[Index: Integer]: WideString read Get_acTradeTerms write Set_acTradeTerms;
    property acCurrency: Smallint read Get_acCurrency write Set_acCurrency;
    property acVATCode: WideString read Get_acVATCode write Set_acVATCode;
    property acPayTerms: Smallint read Get_acPayTerms write Set_acPayTerms;
    property acCreditLimit: Double read Get_acCreditLimit write Set_acCreditLimit;
    property acDiscount: Double read Get_acDiscount write Set_acDiscount;
    property acCreditStatus: Smallint read Get_acCreditStatus write Set_acCreditStatus;
    property acCostCentre: WideString read Get_acCostCentre write Set_acCostCentre;
    property acDiscountBand: WideString read Get_acDiscountBand write Set_acDiscountBand;
    property acDepartment: WideString read Get_acDepartment write Set_acDepartment;
    property acECMember: WordBool read Get_acECMember write Set_acECMember;
    property acStatement: WordBool read Get_acStatement write Set_acStatement;
    property acSalesGL: Integer read Get_acSalesGL write Set_acSalesGL;
    property acLocation: WideString read Get_acLocation write Set_acLocation;
    property acAccStatus: TAccountStatus read Get_acAccStatus write Set_acAccStatus;
    property acPayType: WideString read Get_acPayType write Set_acPayType;
    property acBankSort: WideString read Get_acBankSort write Set_acBankSort;
    property acBankAcc: WideString read Get_acBankAcc write Set_acBankAcc;
    property acBankRef: WideString read Get_acBankRef write Set_acBankRef;
    property acLastUsed: WideString read Get_acLastUsed;
    property acPhone2: WideString read Get_acPhone2 write Set_acPhone2;
    property acUserDef1: WideString read Get_acUserDef1 write Set_acUserDef1;
    property acUserDef2: WideString read Get_acUserDef2 write Set_acUserDef2;
    property acInvoiceTo: WideString read Get_acInvoiceTo write Set_acInvoiceTo;
    property acSOPAutoWOff: WordBool read Get_acSOPAutoWOff write Set_acSOPAutoWOff;
    property acBookOrdVal: Double read Get_acBookOrdVal write Set_acBookOrdVal;
    property acCOSGL: Integer read Get_acCOSGL write Set_acCOSGL;
    property acDrCrGL: Integer read Get_acDrCrGL write Set_acDrCrGL;
    property acDirDebMode: Smallint read Get_acDirDebMode write Set_acDirDebMode;
    property acCCStart: WideString read Get_acCCStart write Set_acCCStart;
    property acCCEnd: WideString read Get_acCCEnd write Set_acCCEnd;
    property acCCName: WideString read Get_acCCName write Set_acCCName;
    property acCCNumber: WideString read Get_acCCNumber write Set_acCCNumber;
    property acCCSwitch: WideString read Get_acCCSwitch write Set_acCCSwitch;
    property acDefSettleDays: Integer read Get_acDefSettleDays write Set_acDefSettleDays;
    property acDefSettleDisc: Double read Get_acDefSettleDisc write Set_acDefSettleDisc;
    property acFormSet: Smallint read Get_acFormSet write Set_acFormSet;
    property acStateDeliveryMode: Integer read Get_acStateDeliveryMode write Set_acStateDeliveryMode;
    property acEmailAddr: WideString read Get_acEmailAddr write Set_acEmailAddr;
    property acSendReader: WordBool read Get_acSendReader write Set_acSendReader;
    property acEBusPword: WideString read Get_acEBusPword write Set_acEBusPword;
    property acAltCode: WideString read Get_acAltCode write Set_acAltCode;
    property acPostCode: WideString read Get_acPostCode write Set_acPostCode;
    property acUseForEbus: Integer read Get_acUseForEbus write Set_acUseForEbus;
    property acZIPAttachments: TEmailAttachmentZIPType read Get_acZIPAttachments write Set_acZIPAttachments;
    property acUserDef3: WideString read Get_acUserDef3 write Set_acUserDef3;
    property acUserDef4: WideString read Get_acUserDef4 write Set_acUserDef4;
    property acTimeStamp: WideString read Get_acTimeStamp;
    property acSSDDeliveryTerms: WideString read Get_acSSDDeliveryTerms write Set_acSSDDeliveryTerms;
    property acInclusiveVATCode: WideString read Get_acInclusiveVATCode write Set_acInclusiveVATCode;
    property acSSDModeOfTransport: Integer read Get_acSSDModeOfTransport write Set_acSSDModeOfTransport;
    property acLastOperator: WideString read Get_acLastOperator write Set_acLastOperator;
    property acDocDeliveryMode: Integer read Get_acDocDeliveryMode write Set_acDocDeliveryMode;
    property acSendHTML: WordBool read Get_acSendHTML write Set_acSendHTML;
    property acWebLiveCatalog: WideString read Get_acWebLiveCatalog write Set_acWebLiveCatalog;
    property acWebPrevCatalog: WideString read Get_acWebPrevCatalog write Set_acWebPrevCatalog;
    property acHistory: IAccountBalance read Get_acHistory;
    property Index: TAccountIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property acNotes: INotes read Get_acNotes;
    property acDiscounts: IAccountDiscount read Get_acDiscounts;
  end;

// *********************************************************************//
// DispIntf:  IAccountDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27FB2718-B428-4846-AFF2-4F6639E2541F}
// *********************************************************************//
  IAccountDisp = dispinterface
    ['{27FB2718-B428-4846-AFF2-4F6639E2541F}']
    property acCode: WideString dispid 1;
    property acCompany: WideString dispid 2;
    property acArea: WideString dispid 3;
    property acAccType: WideString dispid 4;
    property acStatementTo: WideString dispid 5;
    property acVATRegNo: WideString dispid 6;
    property acAddress: IAddress readonly dispid 7;
    property acDelAddress: IAddress readonly dispid 8;
    property acContact: WideString dispid 9;
    property acPhone: WideString dispid 10;
    property acFax: WideString dispid 11;
    property acTheirAcc: WideString dispid 12;
    property acOwnTradTerm: WordBool dispid 13;
    property acTradeTerms[Index: Integer]: WideString dispid 14;
    property acCurrency: Smallint dispid 15;
    property acVATCode: WideString dispid 16;
    property acPayTerms: Smallint dispid 17;
    property acCreditLimit: Double dispid 18;
    property acDiscount: Double dispid 19;
    property acCreditStatus: Smallint dispid 20;
    property acCostCentre: WideString dispid 21;
    property acDiscountBand: WideString dispid 22;
    property acDepartment: WideString dispid 23;
    property acECMember: WordBool dispid 24;
    property acStatement: WordBool dispid 25;
    property acSalesGL: Integer dispid 26;
    property acLocation: WideString dispid 27;
    property acAccStatus: TAccountStatus dispid 28;
    property acPayType: WideString dispid 29;
    property acBankSort: WideString dispid 30;
    property acBankAcc: WideString dispid 31;
    property acBankRef: WideString dispid 32;
    property acLastUsed: WideString readonly dispid 33;
    property acPhone2: WideString dispid 34;
    property acUserDef1: WideString dispid 35;
    property acUserDef2: WideString dispid 36;
    property acInvoiceTo: WideString dispid 37;
    property acSOPAutoWOff: WordBool dispid 38;
    property acBookOrdVal: Double dispid 39;
    property acCOSGL: Integer dispid 40;
    property acDrCrGL: Integer dispid 41;
    property acDirDebMode: Smallint dispid 42;
    property acCCStart: WideString dispid 43;
    property acCCEnd: WideString dispid 44;
    property acCCName: WideString dispid 45;
    property acCCNumber: WideString dispid 46;
    property acCCSwitch: WideString dispid 47;
    property acDefSettleDays: Integer dispid 49;
    property acDefSettleDisc: Double dispid 50;
    property acFormSet: Smallint dispid 51;
    property acStateDeliveryMode: Integer dispid 52;
    property acEmailAddr: WideString dispid 53;
    property acSendReader: WordBool dispid 54;
    property acEBusPword: WideString dispid 55;
    property acAltCode: WideString dispid 56;
    property acPostCode: WideString dispid 57;
    property acUseForEbus: Integer dispid 58;
    property acZIPAttachments: TEmailAttachmentZIPType dispid 59;
    property acUserDef3: WideString dispid 60;
    property acUserDef4: WideString dispid 61;
    property acTimeStamp: WideString readonly dispid 62;
    property acSSDDeliveryTerms: WideString dispid 63;
    property acInclusiveVATCode: WideString dispid 64;
    property acSSDModeOfTransport: Integer dispid 65;
    property acLastOperator: WideString dispid 66;
    property acDocDeliveryMode: Integer dispid 67;
    property acSendHTML: WordBool dispid 68;
    property acWebLiveCatalog: WideString dispid 69;
    property acWebPrevCatalog: WideString dispid 70;
    property acHistory: IAccountBalance readonly dispid 71;
    function Save: Integer; dispid 72;
    function Add: IAccount; dispid 74;
    function Clone: IAccount; dispid 75;
    function Update: IAccount; dispid 76;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TAccountIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const AccountCode: WideString): WideString; dispid 78;
    function BuildNameIndex(const AccountName: WideString): WideString; dispid 79;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 48;
    function BuildVatRegIndex(const VatRegNo: WideString; const AccountCode: WideString): WideString; dispid 73;
    function BuildEmailIndex(const EmailAddr: WideString): WideString; dispid 80;
    function BuildPhoneIndex(const PhoneNo: WideString): WideString; dispid 81;
    function BuildPostCodeIndex(const PostCode: WideString): WideString; dispid 82;
    function BuildOurCodeIndex(const OurCode: WideString): WideString; dispid 83;
    function BuildInvoiceToIndex(const AccountCode: WideString): WideString; dispid 84;
    property acNotes: INotes readonly dispid 85;
    property acDiscounts: IAccountDiscount readonly dispid 86;
  end;

// *********************************************************************//
// Interface: ITransaction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {297430DD-333B-4F8D-BBAB-CEA7F1E2E9C9}
// *********************************************************************//
  ITransaction = interface(IDispatch)
    ['{297430DD-333B-4F8D-BBAB-CEA7F1E2E9C9}']
    function Get_thOurRef: WideString; safecall;
    procedure Set_thOurRef(const Value: WideString); safecall;
    function Get_thYourRef: WideString; safecall;
    procedure Set_thYourRef(const Value: WideString); safecall;
    function Get_thAcCode: WideString; safecall;
    procedure Set_thAcCode(const Value: WideString); safecall;
    function Get_thRunNo: Integer; safecall;
    function Get_thFolioNum: Integer; safecall;
    procedure Set_thFolioNum(Value: Integer); safecall;
    function Get_thCurrency: Smallint; safecall;
    procedure Set_thCurrency(Value: Smallint); safecall;
    function Get_thYear: Smallint; safecall;
    procedure Set_thYear(Value: Smallint); safecall;
    function Get_thPeriod: Smallint; safecall;
    procedure Set_thPeriod(Value: Smallint); safecall;
    function Get_thTransDate: WideString; safecall;
    procedure Set_thTransDate(const Value: WideString); safecall;
    function Get_thDueDate: WideString; safecall;
    procedure Set_thDueDate(const Value: WideString); safecall;
    function Get_thCompanyRate: Double; safecall;
    procedure Set_thCompanyRate(Value: Double); safecall;
    function Get_thDailyRate: Double; safecall;
    procedure Set_thDailyRate(Value: Double); safecall;
    function Get_thDocType: TDocTypes; safecall;
    function Get_thVATAnalysis(const Index: WideString): Double; safecall;
    procedure Set_thVATAnalysis(const Index: WideString; Value: Double); safecall;
    function Get_thNetValue: Double; safecall;
    procedure Set_thNetValue(Value: Double); safecall;
    function Get_thTotalVAT: Double; safecall;
    procedure Set_thTotalVAT(Value: Double); safecall;
    function Get_thSettleDiscPerc: Double; safecall;
    procedure Set_thSettleDiscPerc(Value: Double); safecall;
    function Get_thSettleDiscAmount: Double; safecall;
    procedure Set_thSettleDiscAmount(Value: Double); safecall;
    function Get_thTotalLineDiscount: Double; safecall;
    procedure Set_thTotalLineDiscount(Value: Double); safecall;
    function Get_thSettleDiscDays: Smallint; safecall;
    procedure Set_thSettleDiscDays(Value: Smallint); safecall;
    function Get_thSettleDiscTaken: WordBool; safecall;
    procedure Set_thSettleDiscTaken(Value: WordBool); safecall;
    function Get_thAmountSettled: Double; safecall;
    function Get_thTransportNature: Smallint; safecall;
    procedure Set_thTransportNature(Value: Smallint); safecall;
    function Get_thTransportMode: Smallint; safecall;
    procedure Set_thTransportMode(Value: Smallint); safecall;
    function Get_thHoldFlag: Smallint; safecall;
    procedure Set_thHoldFlag(Value: Smallint); safecall;
    function Get_thTotalWeight: Double; safecall;
    procedure Set_thTotalWeight(Value: Double); safecall;
    function Get_thDelAddress: IAddress; safecall;
    function Get_thTotalCost: Double; safecall;
    procedure Set_thTotalCost(Value: Double); safecall;
    function Get_thPrinted: WordBool; safecall;
    function Get_thManualVAT: WordBool; safecall;
    procedure Set_thManualVAT(Value: WordBool); safecall;
    function Get_thDeliveryTerms: WideString; safecall;
    procedure Set_thDeliveryTerms(const Value: WideString); safecall;
    function Get_thOperator: WideString; safecall;
    procedure Set_thOperator(const Value: WideString); safecall;
    function Get_thJobCode: WideString; safecall;
    procedure Set_thJobCode(const Value: WideString); safecall;
    function Get_thAnalysisCode: WideString; safecall;
    procedure Set_thAnalysisCode(const Value: WideString); safecall;
    function Get_thTotalOrderOS: Double; safecall;
    procedure Set_thTotalOrderOS(Value: Double); safecall;
    function Get_thUserField1: WideString; safecall;
    procedure Set_thUserField1(const Value: WideString); safecall;
    function Get_thUserField2: WideString; safecall;
    procedure Set_thUserField2(const Value: WideString); safecall;
    function Get_thUserField3: WideString; safecall;
    procedure Set_thUserField3(const Value: WideString); safecall;
    function Get_thUserField4: WideString; safecall;
    procedure Set_thUserField4(const Value: WideString); safecall;
    function Get_thTagged: WordBool; safecall;
    procedure Set_thTagged(Value: WordBool); safecall;
    function Get_thNoLabels: Smallint; safecall;
    procedure Set_thNoLabels(Value: Smallint); safecall;
    function Get_thControlGL: Integer; safecall;
    procedure Set_thControlGL(Value: Integer); safecall;
    function Get_thProcess: TIntrastatProcess; safecall;
    procedure Set_thProcess(Value: TIntrastatProcess); safecall;
    function Get_thSource: Integer; safecall;
    function Get_thPostedDate: WideString; safecall;
    function Get_thPORPickSOR: WordBool; safecall;
    procedure Set_thPORPickSOR(Value: WordBool); safecall;
    function Get_thBatchDiscAmount: Double; safecall;
    procedure Set_thBatchDiscAmount(Value: Double); safecall;
    function Get_thPrePost: Integer; safecall;
    procedure Set_thPrePost(Value: Integer); safecall;
    function Get_thOutstanding: WideString; safecall;
    function Get_thFixedRate: WordBool; safecall;
    procedure Set_thFixedRate(Value: WordBool); safecall;
    function Get_thLongYourRef: WideString; safecall;
    procedure Set_thLongYourRef(const Value: WideString); safecall;
    function Get_thAcCodeI: IAccount; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Index: TTransactionIndex; safecall;
    procedure Set_Index(Value: TTransactionIndex); safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function StepFirst: Integer; safecall;
    function StepPrevious: Integer; safecall;
    function StepNext: Integer; safecall;
    function StepLast: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_thLines: ITransactionLines; safecall;
    function Get_thGoodsAnalysis(const Index: WideString): Double; safecall;
    function Get_thLineTypeAnalysis(Index: Integer): Double; safecall;
    function entCanUpdate: WordBool; safecall;
    function Add(TransactionType: TDocTypes): ITransaction; safecall;
    function Update: ITransaction; safecall;
    function Save(CalculateTotals: WordBool): Integer; safecall;
    procedure Cancel; safecall;
    function Clone: ITransaction; safecall;
    function Get_SaveErrorLine: Integer; safecall;
    function BuildOurRefIndex(const OurRef: WideString): WideString; safecall;
    function BuildFolioIndex(Folio: Integer): WideString; safecall;
    function BuildAccountIndex(const AccountCode: WideString): WideString; safecall;
    function Get_thEmployeeCode: WideString; safecall;
    procedure Set_thEmployeeCode(const Value: WideString); safecall;
    procedure ImportDefaults; safecall;
    procedure UpdateTotals; safecall;
    function BuildYourRefIndex(const YourRef: WideString): WideString; safecall;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; safecall;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; safecall;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; safecall;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; safecall;
    function BuildTransDateIndex(const TransDate: WideString): WideString; safecall;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; safecall;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; safecall;
    procedure AllocateTransNo; safecall;
    function Get_thNotes: INotes; safecall;
    function Get_thTotals(TotalType: TTransTotalsType): Double; safecall;
    function Get_thMatching: IMatching; safecall;
    function Get_thAnalysisCodeI: IJobAnalysis; safecall;
    function Get_thJobCodeI: IJob; safecall;
    property thOurRef: WideString read Get_thOurRef write Set_thOurRef;
    property thYourRef: WideString read Get_thYourRef write Set_thYourRef;
    property thAcCode: WideString read Get_thAcCode write Set_thAcCode;
    property thRunNo: Integer read Get_thRunNo;
    property thFolioNum: Integer read Get_thFolioNum write Set_thFolioNum;
    property thCurrency: Smallint read Get_thCurrency write Set_thCurrency;
    property thYear: Smallint read Get_thYear write Set_thYear;
    property thPeriod: Smallint read Get_thPeriod write Set_thPeriod;
    property thTransDate: WideString read Get_thTransDate write Set_thTransDate;
    property thDueDate: WideString read Get_thDueDate write Set_thDueDate;
    property thCompanyRate: Double read Get_thCompanyRate write Set_thCompanyRate;
    property thDailyRate: Double read Get_thDailyRate write Set_thDailyRate;
    property thDocType: TDocTypes read Get_thDocType;
    property thVATAnalysis[const Index: WideString]: Double read Get_thVATAnalysis write Set_thVATAnalysis;
    property thNetValue: Double read Get_thNetValue write Set_thNetValue;
    property thTotalVAT: Double read Get_thTotalVAT write Set_thTotalVAT;
    property thSettleDiscPerc: Double read Get_thSettleDiscPerc write Set_thSettleDiscPerc;
    property thSettleDiscAmount: Double read Get_thSettleDiscAmount write Set_thSettleDiscAmount;
    property thTotalLineDiscount: Double read Get_thTotalLineDiscount write Set_thTotalLineDiscount;
    property thSettleDiscDays: Smallint read Get_thSettleDiscDays write Set_thSettleDiscDays;
    property thSettleDiscTaken: WordBool read Get_thSettleDiscTaken write Set_thSettleDiscTaken;
    property thAmountSettled: Double read Get_thAmountSettled;
    property thTransportNature: Smallint read Get_thTransportNature write Set_thTransportNature;
    property thTransportMode: Smallint read Get_thTransportMode write Set_thTransportMode;
    property thHoldFlag: Smallint read Get_thHoldFlag write Set_thHoldFlag;
    property thTotalWeight: Double read Get_thTotalWeight write Set_thTotalWeight;
    property thDelAddress: IAddress read Get_thDelAddress;
    property thTotalCost: Double read Get_thTotalCost write Set_thTotalCost;
    property thPrinted: WordBool read Get_thPrinted;
    property thManualVAT: WordBool read Get_thManualVAT write Set_thManualVAT;
    property thDeliveryTerms: WideString read Get_thDeliveryTerms write Set_thDeliveryTerms;
    property thOperator: WideString read Get_thOperator write Set_thOperator;
    property thJobCode: WideString read Get_thJobCode write Set_thJobCode;
    property thAnalysisCode: WideString read Get_thAnalysisCode write Set_thAnalysisCode;
    property thTotalOrderOS: Double read Get_thTotalOrderOS write Set_thTotalOrderOS;
    property thUserField1: WideString read Get_thUserField1 write Set_thUserField1;
    property thUserField2: WideString read Get_thUserField2 write Set_thUserField2;
    property thUserField3: WideString read Get_thUserField3 write Set_thUserField3;
    property thUserField4: WideString read Get_thUserField4 write Set_thUserField4;
    property thTagged: WordBool read Get_thTagged write Set_thTagged;
    property thNoLabels: Smallint read Get_thNoLabels write Set_thNoLabels;
    property thControlGL: Integer read Get_thControlGL write Set_thControlGL;
    property thProcess: TIntrastatProcess read Get_thProcess write Set_thProcess;
    property thSource: Integer read Get_thSource;
    property thPostedDate: WideString read Get_thPostedDate;
    property thPORPickSOR: WordBool read Get_thPORPickSOR write Set_thPORPickSOR;
    property thBatchDiscAmount: Double read Get_thBatchDiscAmount write Set_thBatchDiscAmount;
    property thPrePost: Integer read Get_thPrePost write Set_thPrePost;
    property thOutstanding: WideString read Get_thOutstanding;
    property thFixedRate: WordBool read Get_thFixedRate write Set_thFixedRate;
    property thLongYourRef: WideString read Get_thLongYourRef write Set_thLongYourRef;
    property thAcCodeI: IAccount read Get_thAcCodeI;
    property Index: TTransactionIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property thLines: ITransactionLines read Get_thLines;
    property thGoodsAnalysis[const Index: WideString]: Double read Get_thGoodsAnalysis;
    property thLineTypeAnalysis[Index: Integer]: Double read Get_thLineTypeAnalysis;
    property SaveErrorLine: Integer read Get_SaveErrorLine;
    property thEmployeeCode: WideString read Get_thEmployeeCode write Set_thEmployeeCode;
    property thNotes: INotes read Get_thNotes;
    property thTotals[TotalType: TTransTotalsType]: Double read Get_thTotals;
    property thMatching: IMatching read Get_thMatching;
    property thAnalysisCodeI: IJobAnalysis read Get_thAnalysisCodeI;
    property thJobCodeI: IJob read Get_thJobCodeI;
  end;

// *********************************************************************//
// DispIntf:  ITransactionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {297430DD-333B-4F8D-BBAB-CEA7F1E2E9C9}
// *********************************************************************//
  ITransactionDisp = dispinterface
    ['{297430DD-333B-4F8D-BBAB-CEA7F1E2E9C9}']
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: IAddress
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0ADD70EC-0236-401E-B597-A33EC91151EC}
// *********************************************************************//
  IAddress = interface(IDispatch)
    ['{0ADD70EC-0236-401E-B597-A33EC91151EC}']
    function Get_Lines(Index: Integer): WideString; safecall;
    procedure Set_Lines(Index: Integer; const Value: WideString); safecall;
    function Get_Street1: WideString; safecall;
    procedure Set_Street1(const Value: WideString); safecall;
    function Get_Street2: WideString; safecall;
    procedure Set_Street2(const Value: WideString); safecall;
    function Get_Town: WideString; safecall;
    procedure Set_Town(const Value: WideString); safecall;
    function Get_County: WideString; safecall;
    procedure Set_County(const Value: WideString); safecall;
    function Get_PostCode: WideString; safecall;
    procedure Set_PostCode(const Value: WideString); safecall;
    procedure AssignAddress(const Address: IAddress); safecall;
    property Lines[Index: Integer]: WideString read Get_Lines write Set_Lines; default;
    property Street1: WideString read Get_Street1 write Set_Street1;
    property Street2: WideString read Get_Street2 write Set_Street2;
    property Town: WideString read Get_Town write Set_Town;
    property County: WideString read Get_County write Set_County;
    property PostCode: WideString read Get_PostCode write Set_PostCode;
  end;

// *********************************************************************//
// DispIntf:  IAddressDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0ADD70EC-0236-401E-B597-A33EC91151EC}
// *********************************************************************//
  IAddressDisp = dispinterface
    ['{0ADD70EC-0236-401E-B597-A33EC91151EC}']
    property Lines[Index: Integer]: WideString dispid 0; default;
    property Street1: WideString dispid 1;
    property Street2: WideString dispid 2;
    property Town: WideString dispid 3;
    property County: WideString dispid 4;
    property PostCode: WideString dispid 5;
    procedure AssignAddress(const Address: IAddress); dispid 6;
  end;

// *********************************************************************//
// Interface: IAccountBalance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B144E3EA-6F65-4A6C-8E65-21B1BF7A00DF}
// *********************************************************************//
  IAccountBalance = interface(IDispatch)
    ['{B144E3EA-6F65-4A6C-8E65-21B1BF7A00DF}']
    function Get_acCurrency: Integer; safecall;
    procedure Set_acCurrency(Value: Integer); safecall;
    function Get_acPeriod: Integer; safecall;
    procedure Set_acPeriod(Value: Integer); safecall;
    function Get_acYear: Integer; safecall;
    procedure Set_acYear(Value: Integer); safecall;
    function Get_acBalance: Double; safecall;
    function Get_acSales: Double; safecall;
    function Get_acCosts: Double; safecall;
    function Get_acMargin: Double; safecall;
    function Get_acDebits: Double; safecall;
    function Get_acCredits: Double; safecall;
    function Get_acBudget: Double; safecall;
    function Get_acCommitted: Double; safecall;
    property acCurrency: Integer read Get_acCurrency write Set_acCurrency;
    property acPeriod: Integer read Get_acPeriod write Set_acPeriod;
    property acYear: Integer read Get_acYear write Set_acYear;
    property acBalance: Double read Get_acBalance;
    property acSales: Double read Get_acSales;
    property acCosts: Double read Get_acCosts;
    property acMargin: Double read Get_acMargin;
    property acDebits: Double read Get_acDebits;
    property acCredits: Double read Get_acCredits;
    property acBudget: Double read Get_acBudget;
    property acCommitted: Double read Get_acCommitted;
  end;

// *********************************************************************//
// DispIntf:  IAccountBalanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B144E3EA-6F65-4A6C-8E65-21B1BF7A00DF}
// *********************************************************************//
  IAccountBalanceDisp = dispinterface
    ['{B144E3EA-6F65-4A6C-8E65-21B1BF7A00DF}']
    property acCurrency: Integer dispid 1;
    property acPeriod: Integer dispid 2;
    property acYear: Integer dispid 3;
    property acBalance: Double readonly dispid 4;
    property acSales: Double readonly dispid 5;
    property acCosts: Double readonly dispid 6;
    property acMargin: Double readonly dispid 7;
    property acDebits: Double readonly dispid 8;
    property acCredits: Double readonly dispid 9;
    property acBudget: Double readonly dispid 10;
    property acCommitted: Double readonly dispid 11;
  end;

// *********************************************************************//
// Interface: IFunctions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7014FC0-8CB0-4EBD-9F2E-88386A70A4FD}
// *********************************************************************//
  IFunctions = interface(IDispatch)
    ['{C7014FC0-8CB0-4EBD-9F2E-88386A70A4FD}']
    function entFormatDate(const EntDateStr: WideString; const DateFormat: WideString): WideString; safecall;
    function entRound(Value: Double; Decs: Integer): Double; safecall;
    function entFormatPeriodYear(Period: Integer; Year: Integer): WideString; safecall;
    function entConvertAmount(Amount: Double; FromCurrency: Integer; ToCurrency: Integer; 
                              RateType: Integer): Double; safecall;
    function entConvertDateToPeriod(const DateString: WideString; var FinancialPeriod: Integer; 
                                    var FinancialYear: Integer): Integer; safecall;
    function entConvertAmountWithRates(Amount: Double; ConvertToBase: WordBool; 
                                       RateCurrency: Integer; CompanyRate: Double; DailyRate: Double): Double; safecall;
    procedure entBrowseObject(const ObjectToBrowse: IDispatch; ShowModal: WordBool); safecall;
    function entCheckPassword(const UserName: WideString; const UserPassword: WideString): Integer; safecall;
    function entCheckSecurity(const UserName: WideString; AreaCode: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IFunctionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7014FC0-8CB0-4EBD-9F2E-88386A70A4FD}
// *********************************************************************//
  IFunctionsDisp = dispinterface
    ['{C7014FC0-8CB0-4EBD-9F2E-88386A70A4FD}']
    function entFormatDate(const EntDateStr: WideString; const DateFormat: WideString): WideString; dispid 1;
    function entRound(Value: Double; Decs: Integer): Double; dispid 2;
    function entFormatPeriodYear(Period: Integer; Year: Integer): WideString; dispid 3;
    function entConvertAmount(Amount: Double; FromCurrency: Integer; ToCurrency: Integer; 
                              RateType: Integer): Double; dispid 4;
    function entConvertDateToPeriod(const DateString: WideString; var FinancialPeriod: Integer; 
                                    var FinancialYear: Integer): Integer; dispid 5;
    function entConvertAmountWithRates(Amount: Double; ConvertToBase: WordBool; 
                                       RateCurrency: Integer; CompanyRate: Double; DailyRate: Double): Double; dispid 6;
    procedure entBrowseObject(const ObjectToBrowse: IDispatch; ShowModal: WordBool); dispid 7;
    function entCheckPassword(const UserName: WideString; const UserPassword: WideString): Integer; dispid 8;
    function entCheckSecurity(const UserName: WideString; AreaCode: Integer): Integer; dispid 9;
  end;

// *********************************************************************//
// Interface: ITransactionLines
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B678B41C-3130-4D2E-B8BA-CBE49BD81492}
// *********************************************************************//
  ITransactionLines = interface(IDispatch)
    ['{B678B41C-3130-4D2E-B8BA-CBE49BD81492}']
    function Get_thLine(Index: Integer): ITransactionLine; safecall;
    function Get_thLineCount: Integer; safecall;
    procedure Delete(Index: Integer); safecall;
    function Add: ITransactionLine; safecall;
    property thLine[Index: Integer]: ITransactionLine read Get_thLine; default;
    property thLineCount: Integer read Get_thLineCount;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLinesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B678B41C-3130-4D2E-B8BA-CBE49BD81492}
// *********************************************************************//
  ITransactionLinesDisp = dispinterface
    ['{B678B41C-3130-4D2E-B8BA-CBE49BD81492}']
    property thLine[Index: Integer]: ITransactionLine readonly dispid 0; default;
    property thLineCount: Integer readonly dispid 1;
    procedure Delete(Index: Integer); dispid 2;
    function Add: ITransactionLine; dispid 4;
  end;

// *********************************************************************//
// Interface: ITransactionLine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {510F63CD-64A6-42FF-9003-44295415D347}
// *********************************************************************//
  ITransactionLine = interface(IDispatch)
    ['{510F63CD-64A6-42FF-9003-44295415D347}']
    function Get_tlLineNo: Integer; safecall;
    procedure Set_tlLineNo(Value: Integer); safecall;
    function Get_tlGLCode: Integer; safecall;
    procedure Set_tlGLCode(Value: Integer); safecall;
    function Get_tlCurrency: Integer; safecall;
    procedure Set_tlCurrency(Value: Integer); safecall;
    function Get_tlCompanyRate: Double; safecall;
    procedure Set_tlCompanyRate(Value: Double); safecall;
    function Get_tlDailyRate: Double; safecall;
    procedure Set_tlDailyRate(Value: Double); safecall;
    function Get_tlCostCentre: WideString; safecall;
    procedure Set_tlCostCentre(const Value: WideString); safecall;
    function Get_tlDepartment: WideString; safecall;
    procedure Set_tlDepartment(const Value: WideString); safecall;
    function Get_tlStockCode: WideString; safecall;
    procedure Set_tlStockCode(const Value: WideString); safecall;
    function Get_tlQty: Double; safecall;
    procedure Set_tlQty(Value: Double); safecall;
    function Get_tlQtyMul: Double; safecall;
    procedure Set_tlQtyMul(Value: Double); safecall;
    function Get_tlNetValue: Double; safecall;
    procedure Set_tlNetValue(Value: Double); safecall;
    function Get_tlDiscount: Double; safecall;
    procedure Set_tlDiscount(Value: Double); safecall;
    function Get_tlDiscFlag: WideString; safecall;
    procedure Set_tlDiscFlag(const Value: WideString); safecall;
    function Get_tlVATCode: WideString; safecall;
    procedure Set_tlVATCode(const Value: WideString); safecall;
    function Get_tlVATAmount: Double; safecall;
    procedure Set_tlVATAmount(Value: Double); safecall;
    function Get_tlPayment: WordBool; safecall;
    procedure Set_tlPayment(Value: WordBool); safecall;
    function Get_tlQtyWOFF: Double; safecall;
    procedure Set_tlQtyWOFF(Value: Double); safecall;
    function Get_tlQtyDel: Double; safecall;
    procedure Set_tlQtyDel(Value: Double); safecall;
    function Get_tlCost: Double; safecall;
    procedure Set_tlCost(Value: Double); safecall;
    function Get_tlLineDate: WideString; safecall;
    procedure Set_tlLineDate(const Value: WideString); safecall;
    function Get_tlItemNo: WideString; safecall;
    procedure Set_tlItemNo(const Value: WideString); safecall;
    function Get_tlDescr: WideString; safecall;
    procedure Set_tlDescr(const Value: WideString); safecall;
    function Get_tlJobCode: WideString; safecall;
    procedure Set_tlJobCode(const Value: WideString); safecall;
    function Get_tlAnalysisCode: WideString; safecall;
    procedure Set_tlAnalysisCode(const Value: WideString); safecall;
    function Get_tlUnitWeight: Double; safecall;
    procedure Set_tlUnitWeight(Value: Double); safecall;
    function Get_tlLocation: WideString; safecall;
    procedure Set_tlLocation(const Value: WideString); safecall;
    function Get_tlChargeCurrency: Integer; safecall;
    procedure Set_tlChargeCurrency(Value: Integer); safecall;
    function Get_tlAcCode: WideString; safecall;
    function Get_tlLineType: TTransactionLineType; safecall;
    procedure Set_tlLineType(Value: TTransactionLineType); safecall;
    function Get_tlFolioNum: Integer; safecall;
    function Get_tlLineClass: WideString; safecall;
    function Get_tlRecStatus: Smallint; safecall;
    procedure Set_tlRecStatus(Value: Smallint); safecall;
    function Get_tlSOPFolioNum: Integer; safecall;
    procedure Set_tlSOPFolioNum(Value: Integer); safecall;
    function Get_tlSOPABSLineNo: Integer; safecall;
    procedure Set_tlSOPABSLineNo(Value: Integer); safecall;
    function Get_tlABSLineNo: Integer; safecall;
    function Get_tlUserField1: WideString; safecall;
    procedure Set_tlUserField1(const Value: WideString); safecall;
    function Get_tlUserField2: WideString; safecall;
    procedure Set_tlUserField2(const Value: WideString); safecall;
    function Get_tlUserField3: WideString; safecall;
    procedure Set_tlUserField3(const Value: WideString); safecall;
    function Get_tlUserField4: WideString; safecall;
    procedure Set_tlUserField4(const Value: WideString); safecall;
    function Get_tlSSDUpliftPerc: Double; safecall;
    procedure Set_tlSSDUpliftPerc(Value: Double); safecall;
    function Get_tlSSDCommodCode: WideString; safecall;
    procedure Set_tlSSDCommodCode(const Value: WideString); safecall;
    function Get_tlSSDSalesUnit: Double; safecall;
    procedure Set_tlSSDSalesUnit(Value: Double); safecall;
    function Get_tlSSDUseLineValues: WordBool; safecall;
    procedure Set_tlSSDUseLineValues(Value: WordBool); safecall;
    function Get_tlPriceMultiplier: Double; safecall;
    procedure Set_tlPriceMultiplier(Value: Double); safecall;
    function Get_tlQtyPicked: Double; safecall;
    procedure Set_tlQtyPicked(Value: Double); safecall;
    function Get_tlQtyPickedWO: Double; safecall;
    procedure Set_tlQtyPickedWO(Value: Double); safecall;
    function Get_tlSSDCountry: WideString; safecall;
    procedure Set_tlSSDCountry(const Value: WideString); safecall;
    function Get_tlInclusiveVATCode: WideString; safecall;
    procedure Set_tlInclusiveVATCode(const Value: WideString); safecall;
    function Get_tlBOMKitLink: Integer; safecall;
    procedure Set_tlBOMKitLink(Value: Integer); safecall;
    function Get_tlOurRef: WideString; safecall;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; safecall;
    procedure Save; safecall;
    procedure Cancel; safecall;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; safecall;
    procedure CalcVATAmount; safecall;
    procedure CalcStockPrice; safecall;
    function Get_tlStockCodeI: IStock; safecall;
    procedure ImportDefaults; safecall;
    function Get_tlAnalyisCodeI: IJobAnalysis; safecall;
    function Get_tlJobCodeI: IJob; safecall;
    function Get_tlSerialBatch: ITransactionLineSerialBatch; safecall;
    property tlLineNo: Integer read Get_tlLineNo write Set_tlLineNo;
    property tlGLCode: Integer read Get_tlGLCode write Set_tlGLCode;
    property tlCurrency: Integer read Get_tlCurrency write Set_tlCurrency;
    property tlCompanyRate: Double read Get_tlCompanyRate write Set_tlCompanyRate;
    property tlDailyRate: Double read Get_tlDailyRate write Set_tlDailyRate;
    property tlCostCentre: WideString read Get_tlCostCentre write Set_tlCostCentre;
    property tlDepartment: WideString read Get_tlDepartment write Set_tlDepartment;
    property tlStockCode: WideString read Get_tlStockCode write Set_tlStockCode;
    property tlQty: Double read Get_tlQty write Set_tlQty;
    property tlQtyMul: Double read Get_tlQtyMul write Set_tlQtyMul;
    property tlNetValue: Double read Get_tlNetValue write Set_tlNetValue;
    property tlDiscount: Double read Get_tlDiscount write Set_tlDiscount;
    property tlDiscFlag: WideString read Get_tlDiscFlag write Set_tlDiscFlag;
    property tlVATCode: WideString read Get_tlVATCode write Set_tlVATCode;
    property tlVATAmount: Double read Get_tlVATAmount write Set_tlVATAmount;
    property tlPayment: WordBool read Get_tlPayment write Set_tlPayment;
    property tlQtyWOFF: Double read Get_tlQtyWOFF write Set_tlQtyWOFF;
    property tlQtyDel: Double read Get_tlQtyDel write Set_tlQtyDel;
    property tlCost: Double read Get_tlCost write Set_tlCost;
    property tlLineDate: WideString read Get_tlLineDate write Set_tlLineDate;
    property tlItemNo: WideString read Get_tlItemNo write Set_tlItemNo;
    property tlDescr: WideString read Get_tlDescr write Set_tlDescr;
    property tlJobCode: WideString read Get_tlJobCode write Set_tlJobCode;
    property tlAnalysisCode: WideString read Get_tlAnalysisCode write Set_tlAnalysisCode;
    property tlUnitWeight: Double read Get_tlUnitWeight write Set_tlUnitWeight;
    property tlLocation: WideString read Get_tlLocation write Set_tlLocation;
    property tlChargeCurrency: Integer read Get_tlChargeCurrency write Set_tlChargeCurrency;
    property tlAcCode: WideString read Get_tlAcCode;
    property tlLineType: TTransactionLineType read Get_tlLineType write Set_tlLineType;
    property tlFolioNum: Integer read Get_tlFolioNum;
    property tlLineClass: WideString read Get_tlLineClass;
    property tlRecStatus: Smallint read Get_tlRecStatus write Set_tlRecStatus;
    property tlSOPFolioNum: Integer read Get_tlSOPFolioNum write Set_tlSOPFolioNum;
    property tlSOPABSLineNo: Integer read Get_tlSOPABSLineNo write Set_tlSOPABSLineNo;
    property tlABSLineNo: Integer read Get_tlABSLineNo;
    property tlUserField1: WideString read Get_tlUserField1 write Set_tlUserField1;
    property tlUserField2: WideString read Get_tlUserField2 write Set_tlUserField2;
    property tlUserField3: WideString read Get_tlUserField3 write Set_tlUserField3;
    property tlUserField4: WideString read Get_tlUserField4 write Set_tlUserField4;
    property tlSSDUpliftPerc: Double read Get_tlSSDUpliftPerc write Set_tlSSDUpliftPerc;
    property tlSSDCommodCode: WideString read Get_tlSSDCommodCode write Set_tlSSDCommodCode;
    property tlSSDSalesUnit: Double read Get_tlSSDSalesUnit write Set_tlSSDSalesUnit;
    property tlSSDUseLineValues: WordBool read Get_tlSSDUseLineValues write Set_tlSSDUseLineValues;
    property tlPriceMultiplier: Double read Get_tlPriceMultiplier write Set_tlPriceMultiplier;
    property tlQtyPicked: Double read Get_tlQtyPicked write Set_tlQtyPicked;
    property tlQtyPickedWO: Double read Get_tlQtyPickedWO write Set_tlQtyPickedWO;
    property tlSSDCountry: WideString read Get_tlSSDCountry write Set_tlSSDCountry;
    property tlInclusiveVATCode: WideString read Get_tlInclusiveVATCode write Set_tlInclusiveVATCode;
    property tlBOMKitLink: Integer read Get_tlBOMKitLink write Set_tlBOMKitLink;
    property tlOurRef: WideString read Get_tlOurRef;
    property tlStockCodeI: IStock read Get_tlStockCodeI;
    property tlAnalyisCodeI: IJobAnalysis read Get_tlAnalyisCodeI;
    property tlJobCodeI: IJob read Get_tlJobCodeI;
    property tlSerialBatch: ITransactionLineSerialBatch read Get_tlSerialBatch;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {510F63CD-64A6-42FF-9003-44295415D347}
// *********************************************************************//
  ITransactionLineDisp = dispinterface
    ['{510F63CD-64A6-42FF-9003-44295415D347}']
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: ISystemSetup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {980CC008-4263-4A02-B5C9-D46234437557}
// *********************************************************************//
  ISystemSetup = interface(IDispatch)
    ['{980CC008-4263-4A02-B5C9-D46234437557}']
    function Get_ssPeriodsInYear: Smallint; safecall;
    function Get_ssCompanyName: WideString; safecall;
    function Get_ssLastAuditYr: Smallint; safecall;
    function Get_ssManUpdReorderCost: WordBool; safecall;
    function Get_ssVATReturnCurrency: Smallint; safecall;
    function Get_ssCostDecimals: Smallint; safecall;
    function Get_ssShowStkPriceAsMargin: WordBool; safecall;
    function Get_ssLiveStockCOSVal: WordBool; safecall;
    function Get_ssSDNShowPickedOnly: WordBool; safecall;
    function Get_ssUseLocations: WordBool; safecall;
    function Get_ssSetBOMSerNo: WordBool; safecall;
    function Get_ssWarnDupliYourRef: WordBool; safecall;
    function Get_ssUseLocDelAddress: WordBool; safecall;
    function Get_ssBudgetByCCDept: WordBool; safecall;
    function Get_ssCurrencyTolerance: Double; safecall;
    function Get_ssCurrencyToleranceMode: Smallint; safecall;
    function Get_ssDebtChaseMode: Smallint; safecall;
    function Get_ssAutoGenVariance: WordBool; safecall;
    function Get_ssAutoGenDisc: WordBool; safecall;
    function Get_ssCompanyCountryCode: WideString; safecall;
    function Get_ssSalesDecimals: Smallint; safecall;
    function Get_ssDebtChaseOverdue: Smallint; safecall;
    function Get_ssCurrentPeriod: Smallint; safecall;
    function Get_ssCurrentYear: Smallint; safecall;
    function Get_ssTradeTerm: WordBool; safecall;
    function Get_ssSeparateCurrencyStatements: WordBool; safecall;
    function Get_ssStatementAgingMethod: Smallint; safecall;
    function Get_ssStatementUseInvoiceDate: WordBool; safecall;
    function Get_ssQuotesAllocateStock: WordBool; safecall;
    function Get_ssDeductBOMComponents: WordBool; safecall;
    function Get_ssAuthorisationMethod: WideString; safecall;
    function Get_ssUseIntrastat: WordBool; safecall;
    function Get_ssAnalyseDescOnly: WordBool; safecall;
    function Get_ssDefaultStockValMethod: WideString; safecall;
    function Get_ssDisplayUpdateCosts: WordBool; safecall;
    function Get_ssAutoChequeNo: WordBool; safecall;
    function Get_ssStatementIncNotDue: WordBool; safecall;
    function Get_ssForceBatchTotalBalancing: WordBool; safecall;
    function Get_ssDisplayStockLevelWarning: WordBool; safecall;
    function Get_ssStatementNoteEntry: WordBool; safecall;
    function Get_ssHideMenuOpt: WordBool; safecall;
    function Get_ssUseCCDept: WordBool; safecall;
    function Get_ssHoldSettlementDiscTransactions: WordBool; safecall;
    function Get_ssSetTransPeriodByDate: WordBool; safecall;
    function Get_ssStopOverCreditLimit: WordBool; safecall;
    function Get_ssUseSRCPayInRef: WordBool; safecall;
    function Get_ssUsePasswords: WordBool; safecall;
    function Get_ssPromptToPrintReciept: WordBool; safecall;
    function Get_ssExternalCustomers: WordBool; safecall;
    function Get_ssQtyDecimals: Smallint; safecall;
    function Get_ssExternalSINEntry: WordBool; safecall;
    function Get_ssDisablePostingToPreviousPeriods: WordBool; safecall;
    function Get_ssPercDiscounts: WordBool; safecall;
    function Get_ssNumericAccountCodes: WordBool; safecall;
    function Get_ssUpdateBalanceOnPosting: WordBool; safecall;
    function Get_ssShowInvoiceDisc: WordBool; safecall;
    function Get_ssSplitDiscountsInGL: WordBool; safecall;
    function Get_ssDoCreditStatusCheck: WordBool; safecall;
    function Get_ssDoCreditLimitCheck: WordBool; safecall;
    function Get_ssAutoClearPayments: WordBool; safecall;
    function Get_ssCurrencyRateType: TCurrencyRateType; safecall;
    function Get_ssShowPeriodsAsMonths: WordBool; safecall;
    function Get_ssDirectCustomer: WideString; safecall;
    function Get_ssDirectSupplier: WideString; safecall;
    function Get_ssSettlementDiscount: Double; safecall;
    function Get_ssSettlementDays: Smallint; safecall;
    function Get_ssNeedBOMCostingUpdate: WordBool; safecall;
    function Get_ssInputPackQtyOnLine: WordBool; safecall;
    function Get_ssDefaultVATCode: WideString; safecall;
    function Get_ssPaymentTerms: Smallint; safecall;
    function Get_ssStatementAgeingInterval: Smallint; safecall;
    function Get_ssKeepQuoteDate: WordBool; safecall;
    function Get_ssFreeStockExcludesSOR: WordBool; safecall;
    function Get_ssSeparateDirectTransCounter: WordBool; safecall;
    function Get_ssStatementShowMatchedInMonth: WordBool; safecall;
    function Get_ssLiveOldestDebt: WordBool; safecall;
    function Get_ssBatchPPY: WordBool; safecall;
    function Get_ssDefaultBankGL: Integer; safecall;
    function Get_ssUseDefaultBankAccount: WordBool; safecall;
    function Get_ssYearStartDate: WideString; safecall;
    function Get_ssLastAuditDate: WideString; safecall;
    function Get_ssBankSortCode: WideString; safecall;
    function Get_ssBankAccountNo: WideString; safecall;
    function Get_ssBankAccountRef: WideString; safecall;
    function Get_ssBankName: WideString; safecall;
    function Get_ssCompanyPhone: WideString; safecall;
    function Get_ssCompanyFax: WideString; safecall;
    function Get_ssCompanyVATRegNo: WideString; safecall;
    function Get_ssCompanyAddress(Index: Integer): WideString; safecall;
    function Get_ssGLCtrlCodes(Index: TSystemSetupGLCtrlType): Integer; safecall;
    function Get_ssDebtChaseDays(Index: Integer): Smallint; safecall;
    function Get_ssTermsofTrade(Index: Integer): WideString; safecall;
    function Get_ssVATRates(const Index: WideString): ISystemSetupVat; safecall;
    function Get_ssCurrency(Index: Integer): ISystemSetupCurrency; safecall;
    function Get_ssUserFields: ISystemSetupUserFields; safecall;
    function Get_ssPickingOrderAllocatesStock: WordBool; safecall;
    function Get_ssReleaseCodes: ISystemSetupReleaseCodes; safecall;
    function Get_ssDocumentNumbers(const DocType: WideString): Integer; safecall;
    function Get_ssCurrencyVersion: TEnterpriseCurrencyVersion; safecall;
    function Get_ssMaxCurrency: Integer; safecall;
    procedure Refresh; safecall;
    function Get_ssUseDosKeys: WordBool; safecall;
    function Get_ssHideEnterpriseLogo: WordBool; safecall;
    function Get_ssConserveMemory: WordBool; safecall;
    function Get_ssProtectYourRef: WordBool; safecall;
    function Get_ssSDNDateIsTaxPointDate: WordBool; safecall;
    function Get_ssAutoPostUplift: WordBool; safecall;
    function Get_ssJobCosting: ISystemSetupJob; safecall;
    function Get_ssPaperless: ISystemSetupPaperless; safecall;
    function Get_ssTaxWord: WideString; safecall;
    property ssPeriodsInYear: Smallint read Get_ssPeriodsInYear;
    property ssCompanyName: WideString read Get_ssCompanyName;
    property ssLastAuditYr: Smallint read Get_ssLastAuditYr;
    property ssManUpdReorderCost: WordBool read Get_ssManUpdReorderCost;
    property ssVATReturnCurrency: Smallint read Get_ssVATReturnCurrency;
    property ssCostDecimals: Smallint read Get_ssCostDecimals;
    property ssShowStkPriceAsMargin: WordBool read Get_ssShowStkPriceAsMargin;
    property ssLiveStockCOSVal: WordBool read Get_ssLiveStockCOSVal;
    property ssSDNShowPickedOnly: WordBool read Get_ssSDNShowPickedOnly;
    property ssUseLocations: WordBool read Get_ssUseLocations;
    property ssSetBOMSerNo: WordBool read Get_ssSetBOMSerNo;
    property ssWarnDupliYourRef: WordBool read Get_ssWarnDupliYourRef;
    property ssUseLocDelAddress: WordBool read Get_ssUseLocDelAddress;
    property ssBudgetByCCDept: WordBool read Get_ssBudgetByCCDept;
    property ssCurrencyTolerance: Double read Get_ssCurrencyTolerance;
    property ssCurrencyToleranceMode: Smallint read Get_ssCurrencyToleranceMode;
    property ssDebtChaseMode: Smallint read Get_ssDebtChaseMode;
    property ssAutoGenVariance: WordBool read Get_ssAutoGenVariance;
    property ssAutoGenDisc: WordBool read Get_ssAutoGenDisc;
    property ssCompanyCountryCode: WideString read Get_ssCompanyCountryCode;
    property ssSalesDecimals: Smallint read Get_ssSalesDecimals;
    property ssDebtChaseOverdue: Smallint read Get_ssDebtChaseOverdue;
    property ssCurrentPeriod: Smallint read Get_ssCurrentPeriod;
    property ssCurrentYear: Smallint read Get_ssCurrentYear;
    property ssTradeTerm: WordBool read Get_ssTradeTerm;
    property ssSeparateCurrencyStatements: WordBool read Get_ssSeparateCurrencyStatements;
    property ssStatementAgingMethod: Smallint read Get_ssStatementAgingMethod;
    property ssStatementUseInvoiceDate: WordBool read Get_ssStatementUseInvoiceDate;
    property ssQuotesAllocateStock: WordBool read Get_ssQuotesAllocateStock;
    property ssDeductBOMComponents: WordBool read Get_ssDeductBOMComponents;
    property ssAuthorisationMethod: WideString read Get_ssAuthorisationMethod;
    property ssUseIntrastat: WordBool read Get_ssUseIntrastat;
    property ssAnalyseDescOnly: WordBool read Get_ssAnalyseDescOnly;
    property ssDefaultStockValMethod: WideString read Get_ssDefaultStockValMethod;
    property ssDisplayUpdateCosts: WordBool read Get_ssDisplayUpdateCosts;
    property ssAutoChequeNo: WordBool read Get_ssAutoChequeNo;
    property ssStatementIncNotDue: WordBool read Get_ssStatementIncNotDue;
    property ssForceBatchTotalBalancing: WordBool read Get_ssForceBatchTotalBalancing;
    property ssDisplayStockLevelWarning: WordBool read Get_ssDisplayStockLevelWarning;
    property ssStatementNoteEntry: WordBool read Get_ssStatementNoteEntry;
    property ssHideMenuOpt: WordBool read Get_ssHideMenuOpt;
    property ssUseCCDept: WordBool read Get_ssUseCCDept;
    property ssHoldSettlementDiscTransactions: WordBool read Get_ssHoldSettlementDiscTransactions;
    property ssSetTransPeriodByDate: WordBool read Get_ssSetTransPeriodByDate;
    property ssStopOverCreditLimit: WordBool read Get_ssStopOverCreditLimit;
    property ssUseSRCPayInRef: WordBool read Get_ssUseSRCPayInRef;
    property ssUsePasswords: WordBool read Get_ssUsePasswords;
    property ssPromptToPrintReciept: WordBool read Get_ssPromptToPrintReciept;
    property ssExternalCustomers: WordBool read Get_ssExternalCustomers;
    property ssQtyDecimals: Smallint read Get_ssQtyDecimals;
    property ssExternalSINEntry: WordBool read Get_ssExternalSINEntry;
    property ssDisablePostingToPreviousPeriods: WordBool read Get_ssDisablePostingToPreviousPeriods;
    property ssPercDiscounts: WordBool read Get_ssPercDiscounts;
    property ssNumericAccountCodes: WordBool read Get_ssNumericAccountCodes;
    property ssUpdateBalanceOnPosting: WordBool read Get_ssUpdateBalanceOnPosting;
    property ssShowInvoiceDisc: WordBool read Get_ssShowInvoiceDisc;
    property ssSplitDiscountsInGL: WordBool read Get_ssSplitDiscountsInGL;
    property ssDoCreditStatusCheck: WordBool read Get_ssDoCreditStatusCheck;
    property ssDoCreditLimitCheck: WordBool read Get_ssDoCreditLimitCheck;
    property ssAutoClearPayments: WordBool read Get_ssAutoClearPayments;
    property ssCurrencyRateType: TCurrencyRateType read Get_ssCurrencyRateType;
    property ssShowPeriodsAsMonths: WordBool read Get_ssShowPeriodsAsMonths;
    property ssDirectCustomer: WideString read Get_ssDirectCustomer;
    property ssDirectSupplier: WideString read Get_ssDirectSupplier;
    property ssSettlementDiscount: Double read Get_ssSettlementDiscount;
    property ssSettlementDays: Smallint read Get_ssSettlementDays;
    property ssNeedBOMCostingUpdate: WordBool read Get_ssNeedBOMCostingUpdate;
    property ssInputPackQtyOnLine: WordBool read Get_ssInputPackQtyOnLine;
    property ssDefaultVATCode: WideString read Get_ssDefaultVATCode;
    property ssPaymentTerms: Smallint read Get_ssPaymentTerms;
    property ssStatementAgeingInterval: Smallint read Get_ssStatementAgeingInterval;
    property ssKeepQuoteDate: WordBool read Get_ssKeepQuoteDate;
    property ssFreeStockExcludesSOR: WordBool read Get_ssFreeStockExcludesSOR;
    property ssSeparateDirectTransCounter: WordBool read Get_ssSeparateDirectTransCounter;
    property ssStatementShowMatchedInMonth: WordBool read Get_ssStatementShowMatchedInMonth;
    property ssLiveOldestDebt: WordBool read Get_ssLiveOldestDebt;
    property ssBatchPPY: WordBool read Get_ssBatchPPY;
    property ssDefaultBankGL: Integer read Get_ssDefaultBankGL;
    property ssUseDefaultBankAccount: WordBool read Get_ssUseDefaultBankAccount;
    property ssYearStartDate: WideString read Get_ssYearStartDate;
    property ssLastAuditDate: WideString read Get_ssLastAuditDate;
    property ssBankSortCode: WideString read Get_ssBankSortCode;
    property ssBankAccountNo: WideString read Get_ssBankAccountNo;
    property ssBankAccountRef: WideString read Get_ssBankAccountRef;
    property ssBankName: WideString read Get_ssBankName;
    property ssCompanyPhone: WideString read Get_ssCompanyPhone;
    property ssCompanyFax: WideString read Get_ssCompanyFax;
    property ssCompanyVATRegNo: WideString read Get_ssCompanyVATRegNo;
    property ssCompanyAddress[Index: Integer]: WideString read Get_ssCompanyAddress;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer read Get_ssGLCtrlCodes;
    property ssDebtChaseDays[Index: Integer]: Smallint read Get_ssDebtChaseDays;
    property ssTermsofTrade[Index: Integer]: WideString read Get_ssTermsofTrade;
    property ssVATRates[const Index: WideString]: ISystemSetupVat read Get_ssVATRates;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency read Get_ssCurrency;
    property ssUserFields: ISystemSetupUserFields read Get_ssUserFields;
    property ssPickingOrderAllocatesStock: WordBool read Get_ssPickingOrderAllocatesStock;
    property ssReleaseCodes: ISystemSetupReleaseCodes read Get_ssReleaseCodes;
    property ssDocumentNumbers[const DocType: WideString]: Integer read Get_ssDocumentNumbers;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion read Get_ssCurrencyVersion;
    property ssMaxCurrency: Integer read Get_ssMaxCurrency;
    property ssUseDosKeys: WordBool read Get_ssUseDosKeys;
    property ssHideEnterpriseLogo: WordBool read Get_ssHideEnterpriseLogo;
    property ssConserveMemory: WordBool read Get_ssConserveMemory;
    property ssProtectYourRef: WordBool read Get_ssProtectYourRef;
    property ssSDNDateIsTaxPointDate: WordBool read Get_ssSDNDateIsTaxPointDate;
    property ssAutoPostUplift: WordBool read Get_ssAutoPostUplift;
    property ssJobCosting: ISystemSetupJob read Get_ssJobCosting;
    property ssPaperless: ISystemSetupPaperless read Get_ssPaperless;
    property ssTaxWord: WideString read Get_ssTaxWord;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {980CC008-4263-4A02-B5C9-D46234437557}
// *********************************************************************//
  ISystemSetupDisp = dispinterface
    ['{980CC008-4263-4A02-B5C9-D46234437557}']
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ISystemSetupCurrency
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BAA63961-5178-4B97-9137-001DDBE89458}
// *********************************************************************//
  ISystemSetupCurrency = interface(IDispatch)
    ['{BAA63961-5178-4B97-9137-001DDBE89458}']
    function Get_scSymbol: WideString; safecall;
    function Get_scDesc: WideString; safecall;
    function Get_scCompanyRate: Double; safecall;
    function Get_scDailyRate: Double; safecall;
    function Get_scPrintSymb: WideString; safecall;
    function Get_scTriRate: Double; safecall;
    function Get_scTriEuroCcy: Smallint; safecall;
    function Get_scTriInvert: WordBool; safecall;
    function Get_scTriFloating: WordBool; safecall;
    property scSymbol: WideString read Get_scSymbol;
    property scDesc: WideString read Get_scDesc;
    property scCompanyRate: Double read Get_scCompanyRate;
    property scDailyRate: Double read Get_scDailyRate;
    property scPrintSymb: WideString read Get_scPrintSymb;
    property scTriRate: Double read Get_scTriRate;
    property scTriEuroCcy: Smallint read Get_scTriEuroCcy;
    property scTriInvert: WordBool read Get_scTriInvert;
    property scTriFloating: WordBool read Get_scTriFloating;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupCurrencyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BAA63961-5178-4B97-9137-001DDBE89458}
// *********************************************************************//
  ISystemSetupCurrencyDisp = dispinterface
    ['{BAA63961-5178-4B97-9137-001DDBE89458}']
    property scSymbol: WideString readonly dispid 1;
    property scDesc: WideString readonly dispid 2;
    property scCompanyRate: Double readonly dispid 3;
    property scDailyRate: Double readonly dispid 4;
    property scPrintSymb: WideString readonly dispid 5;
    property scTriRate: Double readonly dispid 6;
    property scTriEuroCcy: Smallint readonly dispid 7;
    property scTriInvert: WordBool readonly dispid 8;
    property scTriFloating: WordBool readonly dispid 9;
  end;

// *********************************************************************//
// Interface: ISystemSetupReleaseCodes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41887A9A-9987-4FFA-8934-8237DB52F9C3}
// *********************************************************************//
  ISystemSetupReleaseCodes = interface(IDispatch)
    ['{41887A9A-9987-4FFA-8934-8237DB52F9C3}']
    function Get_rcAccountStockAnalysis: TReleaseCodeStatus; safecall;
    function Get_rcCommitment: TReleaseCodeStatus; safecall;
    function Get_rcEBusiness: TReleaseCodeStatus; safecall;
    function Get_rcJobCosting: TReleaseCodeStatus; safecall;
    function Get_rcMultiCurrency: TReleaseCodeStatus; safecall;
    function Get_rcOLESave: TReleaseCodeStatus; safecall;
    function Get_rcPaperless: TReleaseCodeStatus; safecall;
    function Get_rcReportWriter: TReleaseCodeStatus; safecall;
    function Get_rcTelesales: TReleaseCodeStatus; safecall;
    function Get_rcToolkitDLL: TReleaseCodeStatus; safecall;
    property rcAccountStockAnalysis: TReleaseCodeStatus read Get_rcAccountStockAnalysis;
    property rcCommitment: TReleaseCodeStatus read Get_rcCommitment;
    property rcEBusiness: TReleaseCodeStatus read Get_rcEBusiness;
    property rcJobCosting: TReleaseCodeStatus read Get_rcJobCosting;
    property rcMultiCurrency: TReleaseCodeStatus read Get_rcMultiCurrency;
    property rcOLESave: TReleaseCodeStatus read Get_rcOLESave;
    property rcPaperless: TReleaseCodeStatus read Get_rcPaperless;
    property rcReportWriter: TReleaseCodeStatus read Get_rcReportWriter;
    property rcTelesales: TReleaseCodeStatus read Get_rcTelesales;
    property rcToolkitDLL: TReleaseCodeStatus read Get_rcToolkitDLL;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupReleaseCodesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41887A9A-9987-4FFA-8934-8237DB52F9C3}
// *********************************************************************//
  ISystemSetupReleaseCodesDisp = dispinterface
    ['{41887A9A-9987-4FFA-8934-8237DB52F9C3}']
    property rcAccountStockAnalysis: TReleaseCodeStatus readonly dispid 1;
    property rcCommitment: TReleaseCodeStatus readonly dispid 2;
    property rcEBusiness: TReleaseCodeStatus readonly dispid 3;
    property rcJobCosting: TReleaseCodeStatus readonly dispid 4;
    property rcMultiCurrency: TReleaseCodeStatus readonly dispid 5;
    property rcOLESave: TReleaseCodeStatus readonly dispid 6;
    property rcPaperless: TReleaseCodeStatus readonly dispid 7;
    property rcReportWriter: TReleaseCodeStatus readonly dispid 8;
    property rcTelesales: TReleaseCodeStatus readonly dispid 9;
    property rcToolkitDLL: TReleaseCodeStatus readonly dispid 10;
  end;

// *********************************************************************//
// Interface: ISystemSetupUserFields
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66D25A8F-96C0-4765-AD3D-7B3C592D8472}
// *********************************************************************//
  ISystemSetupUserFields = interface(IDispatch)
    ['{66D25A8F-96C0-4765-AD3D-7B3C592D8472}']
    function Get_ufAccount1: WideString; safecall;
    function Get_ufAccount2: WideString; safecall;
    function Get_ufAccount3: WideString; safecall;
    function Get_ufAccount4: WideString; safecall;
    function Get_ufTrans1: WideString; safecall;
    function Get_ufTrans2: WideString; safecall;
    function Get_ufTrans3: WideString; safecall;
    function Get_ufTrans4: WideString; safecall;
    function Get_ufStock1: WideString; safecall;
    function Get_ufStock2: WideString; safecall;
    function Get_ufStock3: WideString; safecall;
    function Get_ufStock4: WideString; safecall;
    function Get_ufLine1: WideString; safecall;
    function Get_ufLine2: WideString; safecall;
    function Get_ufLine3: WideString; safecall;
    function Get_ufLine4: WideString; safecall;
    function Get_ufJob1: WideString; safecall;
    function Get_ufJob2: WideString; safecall;
    function Get_ufTrans1Enabled: WordBool; safecall;
    function Get_ufTrans2Enabled: WordBool; safecall;
    function Get_ufTrans3Enabled: WordBool; safecall;
    function Get_ufTrans4Enabled: WordBool; safecall;
    function Get_ufLine1Enabled: WordBool; safecall;
    function Get_ufLine2Enabled: WordBool; safecall;
    function Get_ufLine3Enabled: WordBool; safecall;
    function Get_ufLine4Enabled: WordBool; safecall;
    function Get_ufLineType1: WideString; safecall;
    function Get_ufLineType2: WideString; safecall;
    function Get_ufLineType3: WideString; safecall;
    function Get_ufLineType4: WideString; safecall;
    function Get_ufLineType1Enabled: WordBool; safecall;
    function Get_ufLineType2Enabled: WordBool; safecall;
    function Get_ufLineType3Enabled: WordBool; safecall;
    function Get_ufLineType4Enabled: WordBool; safecall;
    property ufAccount1: WideString read Get_ufAccount1;
    property ufAccount2: WideString read Get_ufAccount2;
    property ufAccount3: WideString read Get_ufAccount3;
    property ufAccount4: WideString read Get_ufAccount4;
    property ufTrans1: WideString read Get_ufTrans1;
    property ufTrans2: WideString read Get_ufTrans2;
    property ufTrans3: WideString read Get_ufTrans3;
    property ufTrans4: WideString read Get_ufTrans4;
    property ufStock1: WideString read Get_ufStock1;
    property ufStock2: WideString read Get_ufStock2;
    property ufStock3: WideString read Get_ufStock3;
    property ufStock4: WideString read Get_ufStock4;
    property ufLine1: WideString read Get_ufLine1;
    property ufLine2: WideString read Get_ufLine2;
    property ufLine3: WideString read Get_ufLine3;
    property ufLine4: WideString read Get_ufLine4;
    property ufJob1: WideString read Get_ufJob1;
    property ufJob2: WideString read Get_ufJob2;
    property ufTrans1Enabled: WordBool read Get_ufTrans1Enabled;
    property ufTrans2Enabled: WordBool read Get_ufTrans2Enabled;
    property ufTrans3Enabled: WordBool read Get_ufTrans3Enabled;
    property ufTrans4Enabled: WordBool read Get_ufTrans4Enabled;
    property ufLine1Enabled: WordBool read Get_ufLine1Enabled;
    property ufLine2Enabled: WordBool read Get_ufLine2Enabled;
    property ufLine3Enabled: WordBool read Get_ufLine3Enabled;
    property ufLine4Enabled: WordBool read Get_ufLine4Enabled;
    property ufLineType1: WideString read Get_ufLineType1;
    property ufLineType2: WideString read Get_ufLineType2;
    property ufLineType3: WideString read Get_ufLineType3;
    property ufLineType4: WideString read Get_ufLineType4;
    property ufLineType1Enabled: WordBool read Get_ufLineType1Enabled;
    property ufLineType2Enabled: WordBool read Get_ufLineType2Enabled;
    property ufLineType3Enabled: WordBool read Get_ufLineType3Enabled;
    property ufLineType4Enabled: WordBool read Get_ufLineType4Enabled;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupUserFieldsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66D25A8F-96C0-4765-AD3D-7B3C592D8472}
// *********************************************************************//
  ISystemSetupUserFieldsDisp = dispinterface
    ['{66D25A8F-96C0-4765-AD3D-7B3C592D8472}']
    property ufAccount1: WideString readonly dispid 1;
    property ufAccount2: WideString readonly dispid 2;
    property ufAccount3: WideString readonly dispid 3;
    property ufAccount4: WideString readonly dispid 4;
    property ufTrans1: WideString readonly dispid 5;
    property ufTrans2: WideString readonly dispid 6;
    property ufTrans3: WideString readonly dispid 7;
    property ufTrans4: WideString readonly dispid 8;
    property ufStock1: WideString readonly dispid 9;
    property ufStock2: WideString readonly dispid 10;
    property ufStock3: WideString readonly dispid 11;
    property ufStock4: WideString readonly dispid 12;
    property ufLine1: WideString readonly dispid 13;
    property ufLine2: WideString readonly dispid 14;
    property ufLine3: WideString readonly dispid 15;
    property ufLine4: WideString readonly dispid 16;
    property ufJob1: WideString readonly dispid 17;
    property ufJob2: WideString readonly dispid 18;
    property ufTrans1Enabled: WordBool readonly dispid 20;
    property ufTrans2Enabled: WordBool readonly dispid 21;
    property ufTrans3Enabled: WordBool readonly dispid 22;
    property ufTrans4Enabled: WordBool readonly dispid 23;
    property ufLine1Enabled: WordBool readonly dispid 24;
    property ufLine2Enabled: WordBool readonly dispid 25;
    property ufLine3Enabled: WordBool readonly dispid 26;
    property ufLine4Enabled: WordBool readonly dispid 27;
    property ufLineType1: WideString readonly dispid 28;
    property ufLineType2: WideString readonly dispid 29;
    property ufLineType3: WideString readonly dispid 30;
    property ufLineType4: WideString readonly dispid 31;
    property ufLineType1Enabled: WordBool readonly dispid 32;
    property ufLineType2Enabled: WordBool readonly dispid 33;
    property ufLineType3Enabled: WordBool readonly dispid 34;
    property ufLineType4Enabled: WordBool readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ISystemSetupVat
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3F7A8E59-C728-4E99-B075-8D60E767D1B4}
// *********************************************************************//
  ISystemSetupVat = interface(IDispatch)
    ['{3F7A8E59-C728-4E99-B075-8D60E767D1B4}']
    function Get_svCode: WideString; safecall;
    function Get_svDesc: WideString; safecall;
    function Get_svRate: Double; safecall;
    function Get_svInclude: WordBool; safecall;
    property svCode: WideString read Get_svCode;
    property svDesc: WideString read Get_svDesc;
    property svRate: Double read Get_svRate;
    property svInclude: WordBool read Get_svInclude;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupVatDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3F7A8E59-C728-4E99-B075-8D60E767D1B4}
// *********************************************************************//
  ISystemSetupVatDisp = dispinterface
    ['{3F7A8E59-C728-4E99-B075-8D60E767D1B4}']
    property svCode: WideString readonly dispid 1;
    property svDesc: WideString readonly dispid 2;
    property svRate: Double readonly dispid 3;
    property svInclude: WordBool readonly dispid 4;
  end;

// *********************************************************************//
// Interface: IStock
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77F12C49-19EB-459B-A982-B19EB53FF0F2}
// *********************************************************************//
  IStock = interface(IDispatch)
    ['{77F12C49-19EB-459B-A982-B19EB53FF0F2}']
    function Get_stCode: WideString; safecall;
    procedure Set_stCode(const Value: WideString); safecall;
    function Get_stDesc(Index: Integer): WideString; safecall;
    procedure Set_stDesc(Index: Integer; const Value: WideString); safecall;
    function Get_stAltCode: WideString; safecall;
    procedure Set_stAltCode(const Value: WideString); safecall;
    function Get_stType: TStockType; safecall;
    procedure Set_stType(Value: TStockType); safecall;
    function Get_stSalesGL: Integer; safecall;
    procedure Set_stSalesGL(Value: Integer); safecall;
    function Get_stCOSGL: Integer; safecall;
    procedure Set_stCOSGL(Value: Integer); safecall;
    function Get_stPandLGL: Integer; safecall;
    procedure Set_stPandLGL(Value: Integer); safecall;
    function Get_stBalSheetGL: Integer; safecall;
    procedure Set_stBalSheetGL(Value: Integer); safecall;
    function Get_stWIPGL: Integer; safecall;
    procedure Set_stWIPGL(Value: Integer); safecall;
    function Get_stBelowMinLevel: WordBool; safecall;
    procedure Set_stBelowMinLevel(Value: WordBool); safecall;
    function Get_stFolioNum: Integer; safecall;
    function Get_stParentCode: WideString; safecall;
    procedure Set_stParentCode(const Value: WideString); safecall;
    function Get_stSuppTemp: WideString; safecall;
    procedure Set_stSuppTemp(const Value: WideString); safecall;
    function Get_stUnitOfStock: WideString; safecall;
    procedure Set_stUnitOfStock(const Value: WideString); safecall;
    function Get_stUnitOfSale: WideString; safecall;
    procedure Set_stUnitOfSale(const Value: WideString); safecall;
    function Get_stUnitOfPurch: WideString; safecall;
    procedure Set_stUnitOfPurch(const Value: WideString); safecall;
    function Get_stCostPriceCur: Integer; safecall;
    procedure Set_stCostPriceCur(Value: Integer); safecall;
    function Get_stCostPrice: Double; safecall;
    procedure Set_stCostPrice(Value: Double); safecall;
    function Get_stSalesUnits: Double; safecall;
    procedure Set_stSalesUnits(Value: Double); safecall;
    function Get_stPurchUnits: Double; safecall;
    procedure Set_stPurchUnits(Value: Double); safecall;
    function Get_stVATCode: WideString; safecall;
    procedure Set_stVATCode(const Value: WideString); safecall;
    function Get_stCostCentre: WideString; safecall;
    procedure Set_stCostCentre(const Value: WideString); safecall;
    function Get_stDepartment: WideString; safecall;
    procedure Set_stDepartment(const Value: WideString); safecall;
    function Get_stQtyInStock: Double; safecall;
    function Get_stQtyPosted: Double; safecall;
    function Get_stQtyAllocated: Double; safecall;
    function Get_stQtyOnOrder: Double; safecall;
    function Get_stQtyMin: Double; safecall;
    procedure Set_stQtyMin(Value: Double); safecall;
    function Get_stQtyMax: Double; safecall;
    procedure Set_stQtyMax(Value: Double); safecall;
    function Get_stBinLocation: WideString; safecall;
    procedure Set_stBinLocation(const Value: WideString); safecall;
    function Get_stCover: IStockCover; safecall;
    function Get_stIntrastat: IStockIntrastat; safecall;
    function Get_stReorder: IStockReorder; safecall;
    function Get_stAnalysisCode: WideString; safecall;
    procedure Set_stAnalysisCode(const Value: WideString); safecall;
    function Get_stSalesBands(const Band: WideString): IStockSalesBand; safecall;
    function Get_stTimeChange: WideString; safecall;
    function Get_stInclusiveVATCode: WideString; safecall;
    procedure Set_stInclusiveVATCode(const Value: WideString); safecall;
    function Get_stOperator: WideString; safecall;
    procedure Set_stOperator(const Value: WideString); safecall;
    function Get_stSupplier: WideString; safecall;
    procedure Set_stSupplier(const Value: WideString); safecall;
    function Get_stSupplierI: IAccount; safecall;
    function Get_stDefaultLineType: TTransactionLineType; safecall;
    procedure Set_stDefaultLineType(Value: TTransactionLineType); safecall;
    function Get_stValuationMethod: TStockValuationType; safecall;
    procedure Set_stValuationMethod(Value: TStockValuationType); safecall;
    function Get_stQtyPicked: Double; safecall;
    function Get_stLastUsed: WideString; safecall;
    function Get_stBarCode: WideString; safecall;
    procedure Set_stBarCode(const Value: WideString); safecall;
    function Get_stLocation: WideString; safecall;
    procedure Set_stLocation(const Value: WideString); safecall;
    function Get_stPricingMethod: TStockPricingMethod; safecall;
    procedure Set_stPricingMethod(Value: TStockPricingMethod); safecall;
    function Get_stShowQtyAsPacks: WordBool; safecall;
    procedure Set_stShowQtyAsPacks(Value: WordBool); safecall;
    function Get_stUseKitPrice: WordBool; safecall;
    procedure Set_stUseKitPrice(Value: WordBool); safecall;
    function Get_stUserField1: WideString; safecall;
    procedure Set_stUserField1(const Value: WideString); safecall;
    function Get_stUserField2: WideString; safecall;
    procedure Set_stUserField2(const Value: WideString); safecall;
    function Get_stUserField3: WideString; safecall;
    procedure Set_stUserField3(const Value: WideString); safecall;
    function Get_stUserField4: WideString; safecall;
    procedure Set_stUserField4(const Value: WideString); safecall;
    function Get_stShowKitOnPurchase: WordBool; safecall;
    procedure Set_stShowKitOnPurchase(Value: WordBool); safecall;
    function Get_stImageFile: WideString; safecall;
    procedure Set_stImageFile(const Value: WideString); safecall;
    function Get_stWebLiveCatalog: WideString; safecall;
    procedure Set_stWebLiveCatalog(const Value: WideString); safecall;
    function Get_stWebPrevCatalog: WideString; safecall;
    procedure Set_stWebPrevCatalog(const Value: WideString); safecall;
    function Get_stUseForEbus: WordBool; safecall;
    procedure Set_stUseForEbus(Value: WordBool); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Index: TStockIndex; safecall;
    procedure Set_Index(Value: TStockIndex); safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function StepFirst: Integer; safecall;
    function StepPrevious: Integer; safecall;
    function StepNext: Integer; safecall;
    function StepLast: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Add: IStock; safecall;
    function Update: IStock; safecall;
    function Clone: IStock; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function BuildCodeIndex(const StockCode: WideString): WideString; safecall;
    function BuildFolioIndex(Folio: Integer): WideString; safecall;
    function BuildParentIndex(const ParentCode: WideString; const ChildCode: WideString): WideString; safecall;
    function BuildDescIndex(const Desc: WideString): WideString; safecall;
    function Get_stLocationList: IStockLocation; safecall;
    function BuildSupplierIndex(const AccountCode: WideString; CostCurrency: Integer; 
                                const StockCode: WideString): WideString; safecall;
    function BuildPandLIndex(PandLGL: Integer; const StockCode: WideString): WideString; safecall;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; safecall;
    function BuildBinLocIndex(const BinLocation: WideString): WideString; safecall;
    function BuildBarCodeIndex(const BarCode: WideString): WideString; safecall;
    function Get_stNotes: INotes; safecall;
    function Get_stQtyFree: Double; safecall;
    function Get_stQtyBreaks: IQuantityBreak; safecall;
    function Get_stAnalysisCodeI: IJobAnalysis; safecall;
    function Get_stWhereUsed: IStockWhereUsed; safecall;
    function Get_stBillOfMaterials: IStockBOMList; safecall;
    function Get_stSerialBatch: ISerialBatch; safecall;
    property stCode: WideString read Get_stCode write Set_stCode;
    property stDesc[Index: Integer]: WideString read Get_stDesc write Set_stDesc;
    property stAltCode: WideString read Get_stAltCode write Set_stAltCode;
    property stType: TStockType read Get_stType write Set_stType;
    property stSalesGL: Integer read Get_stSalesGL write Set_stSalesGL;
    property stCOSGL: Integer read Get_stCOSGL write Set_stCOSGL;
    property stPandLGL: Integer read Get_stPandLGL write Set_stPandLGL;
    property stBalSheetGL: Integer read Get_stBalSheetGL write Set_stBalSheetGL;
    property stWIPGL: Integer read Get_stWIPGL write Set_stWIPGL;
    property stBelowMinLevel: WordBool read Get_stBelowMinLevel write Set_stBelowMinLevel;
    property stFolioNum: Integer read Get_stFolioNum;
    property stParentCode: WideString read Get_stParentCode write Set_stParentCode;
    property stSuppTemp: WideString read Get_stSuppTemp write Set_stSuppTemp;
    property stUnitOfStock: WideString read Get_stUnitOfStock write Set_stUnitOfStock;
    property stUnitOfSale: WideString read Get_stUnitOfSale write Set_stUnitOfSale;
    property stUnitOfPurch: WideString read Get_stUnitOfPurch write Set_stUnitOfPurch;
    property stCostPriceCur: Integer read Get_stCostPriceCur write Set_stCostPriceCur;
    property stCostPrice: Double read Get_stCostPrice write Set_stCostPrice;
    property stSalesUnits: Double read Get_stSalesUnits write Set_stSalesUnits;
    property stPurchUnits: Double read Get_stPurchUnits write Set_stPurchUnits;
    property stVATCode: WideString read Get_stVATCode write Set_stVATCode;
    property stCostCentre: WideString read Get_stCostCentre write Set_stCostCentre;
    property stDepartment: WideString read Get_stDepartment write Set_stDepartment;
    property stQtyInStock: Double read Get_stQtyInStock;
    property stQtyPosted: Double read Get_stQtyPosted;
    property stQtyAllocated: Double read Get_stQtyAllocated;
    property stQtyOnOrder: Double read Get_stQtyOnOrder;
    property stQtyMin: Double read Get_stQtyMin write Set_stQtyMin;
    property stQtyMax: Double read Get_stQtyMax write Set_stQtyMax;
    property stBinLocation: WideString read Get_stBinLocation write Set_stBinLocation;
    property stCover: IStockCover read Get_stCover;
    property stIntrastat: IStockIntrastat read Get_stIntrastat;
    property stReorder: IStockReorder read Get_stReorder;
    property stAnalysisCode: WideString read Get_stAnalysisCode write Set_stAnalysisCode;
    property stSalesBands[const Band: WideString]: IStockSalesBand read Get_stSalesBands;
    property stTimeChange: WideString read Get_stTimeChange;
    property stInclusiveVATCode: WideString read Get_stInclusiveVATCode write Set_stInclusiveVATCode;
    property stOperator: WideString read Get_stOperator write Set_stOperator;
    property stSupplier: WideString read Get_stSupplier write Set_stSupplier;
    property stSupplierI: IAccount read Get_stSupplierI;
    property stDefaultLineType: TTransactionLineType read Get_stDefaultLineType write Set_stDefaultLineType;
    property stValuationMethod: TStockValuationType read Get_stValuationMethod write Set_stValuationMethod;
    property stQtyPicked: Double read Get_stQtyPicked;
    property stLastUsed: WideString read Get_stLastUsed;
    property stBarCode: WideString read Get_stBarCode write Set_stBarCode;
    property stLocation: WideString read Get_stLocation write Set_stLocation;
    property stPricingMethod: TStockPricingMethod read Get_stPricingMethod write Set_stPricingMethod;
    property stShowQtyAsPacks: WordBool read Get_stShowQtyAsPacks write Set_stShowQtyAsPacks;
    property stUseKitPrice: WordBool read Get_stUseKitPrice write Set_stUseKitPrice;
    property stUserField1: WideString read Get_stUserField1 write Set_stUserField1;
    property stUserField2: WideString read Get_stUserField2 write Set_stUserField2;
    property stUserField3: WideString read Get_stUserField3 write Set_stUserField3;
    property stUserField4: WideString read Get_stUserField4 write Set_stUserField4;
    property stShowKitOnPurchase: WordBool read Get_stShowKitOnPurchase write Set_stShowKitOnPurchase;
    property stImageFile: WideString read Get_stImageFile write Set_stImageFile;
    property stWebLiveCatalog: WideString read Get_stWebLiveCatalog write Set_stWebLiveCatalog;
    property stWebPrevCatalog: WideString read Get_stWebPrevCatalog write Set_stWebPrevCatalog;
    property stUseForEbus: WordBool read Get_stUseForEbus write Set_stUseForEbus;
    property Index: TStockIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property stLocationList: IStockLocation read Get_stLocationList;
    property stNotes: INotes read Get_stNotes;
    property stQtyFree: Double read Get_stQtyFree;
    property stQtyBreaks: IQuantityBreak read Get_stQtyBreaks;
    property stAnalysisCodeI: IJobAnalysis read Get_stAnalysisCodeI;
    property stWhereUsed: IStockWhereUsed read Get_stWhereUsed;
    property stBillOfMaterials: IStockBOMList read Get_stBillOfMaterials;
    property stSerialBatch: ISerialBatch read Get_stSerialBatch;
  end;

// *********************************************************************//
// DispIntf:  IStockDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77F12C49-19EB-459B-A982-B19EB53FF0F2}
// *********************************************************************//
  IStockDisp = dispinterface
    ['{77F12C49-19EB-459B-A982-B19EB53FF0F2}']
    property stCode: WideString dispid 1;
    property stDesc[Index: Integer]: WideString dispid 2;
    property stAltCode: WideString dispid 3;
    property stType: TStockType dispid 4;
    property stSalesGL: Integer dispid 5;
    property stCOSGL: Integer dispid 6;
    property stPandLGL: Integer dispid 7;
    property stBalSheetGL: Integer dispid 8;
    property stWIPGL: Integer dispid 9;
    property stBelowMinLevel: WordBool dispid 10;
    property stFolioNum: Integer readonly dispid 11;
    property stParentCode: WideString dispid 12;
    property stSuppTemp: WideString dispid 13;
    property stUnitOfStock: WideString dispid 14;
    property stUnitOfSale: WideString dispid 15;
    property stUnitOfPurch: WideString dispid 16;
    property stCostPriceCur: Integer dispid 17;
    property stCostPrice: Double dispid 18;
    property stSalesUnits: Double dispid 19;
    property stPurchUnits: Double dispid 20;
    property stVATCode: WideString dispid 21;
    property stCostCentre: WideString dispid 22;
    property stDepartment: WideString dispid 23;
    property stQtyInStock: Double readonly dispid 24;
    property stQtyPosted: Double readonly dispid 25;
    property stQtyAllocated: Double readonly dispid 26;
    property stQtyOnOrder: Double readonly dispid 27;
    property stQtyMin: Double dispid 28;
    property stQtyMax: Double dispid 29;
    property stBinLocation: WideString dispid 36;
    property stCover: IStockCover readonly dispid 37;
    property stIntrastat: IStockIntrastat readonly dispid 38;
    property stReorder: IStockReorder readonly dispid 39;
    property stAnalysisCode: WideString dispid 40;
    property stSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 41;
    property stTimeChange: WideString readonly dispid 42;
    property stInclusiveVATCode: WideString dispid 43;
    property stOperator: WideString dispid 44;
    property stSupplier: WideString dispid 45;
    property stSupplierI: IAccount readonly dispid 46;
    property stDefaultLineType: TTransactionLineType dispid 47;
    property stValuationMethod: TStockValuationType dispid 52;
    property stQtyPicked: Double readonly dispid 53;
    property stLastUsed: WideString readonly dispid 54;
    property stBarCode: WideString dispid 55;
    property stLocation: WideString dispid 56;
    property stPricingMethod: TStockPricingMethod dispid 57;
    property stShowQtyAsPacks: WordBool dispid 58;
    property stUseKitPrice: WordBool dispid 59;
    property stUserField1: WideString dispid 60;
    property stUserField2: WideString dispid 61;
    property stUserField3: WideString dispid 62;
    property stUserField4: WideString dispid 63;
    property stShowKitOnPurchase: WordBool dispid 64;
    property stImageFile: WideString dispid 65;
    property stWebLiveCatalog: WideString dispid 66;
    property stWebPrevCatalog: WideString dispid 67;
    property stUseForEbus: WordBool dispid 68;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TStockIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IStock; dispid 30;
    function Update: IStock; dispid 31;
    function Clone: IStock; dispid 32;
    function Save: Integer; dispid 33;
    procedure Cancel; dispid 34;
    function BuildCodeIndex(const StockCode: WideString): WideString; dispid 35;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 48;
    function BuildParentIndex(const ParentCode: WideString; const ChildCode: WideString): WideString; dispid 49;
    function BuildDescIndex(const Desc: WideString): WideString; dispid 50;
    property stLocationList: IStockLocation readonly dispid 51;
    function BuildSupplierIndex(const AccountCode: WideString; CostCurrency: Integer; 
                                const StockCode: WideString): WideString; dispid 69;
    function BuildPandLIndex(PandLGL: Integer; const StockCode: WideString): WideString; dispid 70;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 71;
    function BuildBinLocIndex(const BinLocation: WideString): WideString; dispid 72;
    function BuildBarCodeIndex(const BarCode: WideString): WideString; dispid 73;
    property stNotes: INotes readonly dispid 74;
    property stQtyFree: Double readonly dispid 75;
    property stQtyBreaks: IQuantityBreak readonly dispid 76;
    property stAnalysisCodeI: IJobAnalysis readonly dispid 77;
    property stWhereUsed: IStockWhereUsed readonly dispid 78;
    property stBillOfMaterials: IStockBOMList readonly dispid 79;
    property stSerialBatch: ISerialBatch readonly dispid 80;
  end;

// *********************************************************************//
// Interface: IStockCover
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5EB42C0-B08B-4A23-96AE-B6A132811542}
// *********************************************************************//
  IStockCover = interface(IDispatch)
    ['{A5EB42C0-B08B-4A23-96AE-B6A132811542}']
    function Get_stUseCover: WordBool; safecall;
    procedure Set_stUseCover(Value: WordBool); safecall;
    function Get_stCoverPeriods: Smallint; safecall;
    procedure Set_stCoverPeriods(Value: Smallint); safecall;
    function Get_stCoverPeriodUnits: WideString; safecall;
    procedure Set_stCoverPeriodUnits(const Value: WideString); safecall;
    function Get_stCoverMinPeriods: Smallint; safecall;
    procedure Set_stCoverMinPeriods(Value: Smallint); safecall;
    function Get_stCoverMinPeriodUnits: WideString; safecall;
    procedure Set_stCoverMinPeriodUnits(const Value: WideString); safecall;
    function Get_stCoverQtySold: Double; safecall;
    procedure Set_stCoverQtySold(Value: Double); safecall;
    function Get_stCoverMaxPeriods: Smallint; safecall;
    procedure Set_stCoverMaxPeriods(Value: Smallint); safecall;
    function Get_stCoverMaxPeriodUnits: WideString; safecall;
    procedure Set_stCoverMaxPeriodUnits(const Value: WideString); safecall;
    property stUseCover: WordBool read Get_stUseCover write Set_stUseCover;
    property stCoverPeriods: Smallint read Get_stCoverPeriods write Set_stCoverPeriods;
    property stCoverPeriodUnits: WideString read Get_stCoverPeriodUnits write Set_stCoverPeriodUnits;
    property stCoverMinPeriods: Smallint read Get_stCoverMinPeriods write Set_stCoverMinPeriods;
    property stCoverMinPeriodUnits: WideString read Get_stCoverMinPeriodUnits write Set_stCoverMinPeriodUnits;
    property stCoverQtySold: Double read Get_stCoverQtySold write Set_stCoverQtySold;
    property stCoverMaxPeriods: Smallint read Get_stCoverMaxPeriods write Set_stCoverMaxPeriods;
    property stCoverMaxPeriodUnits: WideString read Get_stCoverMaxPeriodUnits write Set_stCoverMaxPeriodUnits;
  end;

// *********************************************************************//
// DispIntf:  IStockCoverDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5EB42C0-B08B-4A23-96AE-B6A132811542}
// *********************************************************************//
  IStockCoverDisp = dispinterface
    ['{A5EB42C0-B08B-4A23-96AE-B6A132811542}']
    property stUseCover: WordBool dispid 1;
    property stCoverPeriods: Smallint dispid 2;
    property stCoverPeriodUnits: WideString dispid 3;
    property stCoverMinPeriods: Smallint dispid 4;
    property stCoverMinPeriodUnits: WideString dispid 5;
    property stCoverQtySold: Double dispid 6;
    property stCoverMaxPeriods: Smallint dispid 7;
    property stCoverMaxPeriodUnits: WideString dispid 8;
  end;

// *********************************************************************//
// Interface: IStockIntrastat
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53747A2E-15FD-450B-9158-BF024D8D4AC3}
// *********************************************************************//
  IStockIntrastat = interface(IDispatch)
    ['{53747A2E-15FD-450B-9158-BF024D8D4AC3}']
    function Get_stSSDCommodityCode: WideString; safecall;
    procedure Set_stSSDCommodityCode(const Value: WideString); safecall;
    function Get_stSSDSalesUnitWeight: Double; safecall;
    procedure Set_stSSDSalesUnitWeight(Value: Double); safecall;
    function Get_stSSDPurchaseUnitWeight: Double; safecall;
    procedure Set_stSSDPurchaseUnitWeight(Value: Double); safecall;
    function Get_stSSDUnitDesc: WideString; safecall;
    procedure Set_stSSDUnitDesc(const Value: WideString); safecall;
    function Get_stSSDStockUnits: Double; safecall;
    procedure Set_stSSDStockUnits(Value: Double); safecall;
    function Get_stSSDDespatchUplift: Double; safecall;
    procedure Set_stSSDDespatchUplift(Value: Double); safecall;
    function Get_stSSDCountry: WideString; safecall;
    procedure Set_stSSDCountry(const Value: WideString); safecall;
    property stSSDCommodityCode: WideString read Get_stSSDCommodityCode write Set_stSSDCommodityCode;
    property stSSDSalesUnitWeight: Double read Get_stSSDSalesUnitWeight write Set_stSSDSalesUnitWeight;
    property stSSDPurchaseUnitWeight: Double read Get_stSSDPurchaseUnitWeight write Set_stSSDPurchaseUnitWeight;
    property stSSDUnitDesc: WideString read Get_stSSDUnitDesc write Set_stSSDUnitDesc;
    property stSSDStockUnits: Double read Get_stSSDStockUnits write Set_stSSDStockUnits;
    property stSSDDespatchUplift: Double read Get_stSSDDespatchUplift write Set_stSSDDespatchUplift;
    property stSSDCountry: WideString read Get_stSSDCountry write Set_stSSDCountry;
  end;

// *********************************************************************//
// DispIntf:  IStockIntrastatDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53747A2E-15FD-450B-9158-BF024D8D4AC3}
// *********************************************************************//
  IStockIntrastatDisp = dispinterface
    ['{53747A2E-15FD-450B-9158-BF024D8D4AC3}']
    property stSSDCommodityCode: WideString dispid 1;
    property stSSDSalesUnitWeight: Double dispid 2;
    property stSSDPurchaseUnitWeight: Double dispid 3;
    property stSSDUnitDesc: WideString dispid 4;
    property stSSDStockUnits: Double dispid 5;
    property stSSDDespatchUplift: Double dispid 6;
    property stSSDCountry: WideString dispid 7;
  end;

// *********************************************************************//
// Interface: IStockReorder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D77BF3E9-202A-4DC6-AB68-41BF27383445}
// *********************************************************************//
  IStockReorder = interface(IDispatch)
    ['{D77BF3E9-202A-4DC6-AB68-41BF27383445}']
    function Get_stReorderQty: Double; safecall;
    procedure Set_stReorderQty(Value: Double); safecall;
    function Get_stReorderCur: Smallint; safecall;
    procedure Set_stReorderCur(Value: Smallint); safecall;
    function Get_stReorderPrice: Double; safecall;
    procedure Set_stReorderPrice(Value: Double); safecall;
    function Get_stReorderDate: WideString; safecall;
    procedure Set_stReorderDate(const Value: WideString); safecall;
    function Get_stReorderCostCentre: WideString; safecall;
    procedure Set_stReorderCostCentre(const Value: WideString); safecall;
    function Get_stReorderDepartment: WideString; safecall;
    procedure Set_stReorderDepartment(const Value: WideString); safecall;
    property stReorderQty: Double read Get_stReorderQty write Set_stReorderQty;
    property stReorderCur: Smallint read Get_stReorderCur write Set_stReorderCur;
    property stReorderPrice: Double read Get_stReorderPrice write Set_stReorderPrice;
    property stReorderDate: WideString read Get_stReorderDate write Set_stReorderDate;
    property stReorderCostCentre: WideString read Get_stReorderCostCentre write Set_stReorderCostCentre;
    property stReorderDepartment: WideString read Get_stReorderDepartment write Set_stReorderDepartment;
  end;

// *********************************************************************//
// DispIntf:  IStockReorderDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D77BF3E9-202A-4DC6-AB68-41BF27383445}
// *********************************************************************//
  IStockReorderDisp = dispinterface
    ['{D77BF3E9-202A-4DC6-AB68-41BF27383445}']
    property stReorderQty: Double dispid 1;
    property stReorderCur: Smallint dispid 2;
    property stReorderPrice: Double dispid 3;
    property stReorderDate: WideString dispid 4;
    property stReorderCostCentre: WideString dispid 5;
    property stReorderDepartment: WideString dispid 6;
  end;

// *********************************************************************//
// Interface: IStockSalesBand
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {363FE707-C471-43F2-8FD0-87C2A8BB37D8}
// *********************************************************************//
  IStockSalesBand = interface(IDispatch)
    ['{363FE707-C471-43F2-8FD0-87C2A8BB37D8}']
    function Get_stPrice: Double; safecall;
    procedure Set_stPrice(Value: Double); safecall;
    function Get_stCurrency: Integer; safecall;
    procedure Set_stCurrency(Value: Integer); safecall;
    property stPrice: Double read Get_stPrice write Set_stPrice;
    property stCurrency: Integer read Get_stCurrency write Set_stCurrency;
  end;

// *********************************************************************//
// DispIntf:  IStockSalesBandDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {363FE707-C471-43F2-8FD0-87C2A8BB37D8}
// *********************************************************************//
  IStockSalesBandDisp = dispinterface
    ['{363FE707-C471-43F2-8FD0-87C2A8BB37D8}']
    property stPrice: Double dispid 1;
    property stCurrency: Integer dispid 2;
  end;

// *********************************************************************//
// Interface: IConfiguration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B751883E-C515-4843-B86F-8414DD4C40E1}
// *********************************************************************//
  IConfiguration = interface(IDispatch)
    ['{B751883E-C515-4843-B86F-8414DD4C40E1}']
    function Get_AllowTransactionEditing: WordBool; safecall;
    procedure Set_AllowTransactionEditing(Value: WordBool); safecall;
    function Get_AutoSetPeriod: WordBool; safecall;
    procedure Set_AutoSetPeriod(Value: WordBool); safecall;
    function Get_AutoSetStockCost: WordBool; safecall;
    procedure Set_AutoSetStockCost(Value: WordBool); safecall;
    function Get_AutoSetTransCurrencyRates: WordBool; safecall;
    procedure Set_AutoSetTransCurrencyRates(Value: WordBool); safecall;
    function Get_DataDirectory: WideString; safecall;
    procedure Set_DataDirectory(const Value: WideString); safecall;
    function Get_DeductBOMStock: WordBool; safecall;
    procedure Set_DeductBOMStock(Value: WordBool); safecall;
    function Get_DeductMultiLocationStock: WordBool; safecall;
    procedure Set_DeductMultiLocationStock(Value: WordBool); safecall;
    function Get_DefaultCostCentre: WideString; safecall;
    procedure Set_DefaultCostCentre(const Value: WideString); safecall;
    function Get_DefaultCurrency: Integer; safecall;
    procedure Set_DefaultCurrency(Value: Integer); safecall;
    function Get_DefaultDepartment: WideString; safecall;
    procedure Set_DefaultDepartment(const Value: WideString); safecall;
    function Get_DefaultNominalCode: Integer; safecall;
    procedure Set_DefaultNominalCode(Value: Integer); safecall;
    function Get_DefaultVATCode: WideString; safecall;
    procedure Set_DefaultVATCode(const Value: WideString); safecall;
    function Get_EnterpriseDirectory: WideString; safecall;
    procedure Set_EnterpriseDirectory(const Value: WideString); safecall;
    function Get_OverwriteNotepad: WordBool; safecall;
    procedure Set_OverwriteNotepad(Value: WordBool); safecall;
    function Get_OverwriteTransactionNumbers: WordBool; safecall;
    procedure Set_OverwriteTransactionNumbers(Value: WordBool); safecall;
    function Get_UpdateAccountBalances: WordBool; safecall;
    procedure Set_UpdateAccountBalances(Value: WordBool); safecall;
    function Get_UpdateStockLevels: WordBool; safecall;
    procedure Set_UpdateStockLevels(Value: WordBool); safecall;
    function Get_ValidateJobCostingFields: WordBool; safecall;
    procedure Set_ValidateJobCostingFields(Value: WordBool); safecall;
    function SetDebugMode(Param1: Integer; Param2: Integer; Param3: Integer): OleVariant; safecall;
    function Get_ToolkitPath: WideString; safecall;
    property AllowTransactionEditing: WordBool read Get_AllowTransactionEditing write Set_AllowTransactionEditing;
    property AutoSetPeriod: WordBool read Get_AutoSetPeriod write Set_AutoSetPeriod;
    property AutoSetStockCost: WordBool read Get_AutoSetStockCost write Set_AutoSetStockCost;
    property AutoSetTransCurrencyRates: WordBool read Get_AutoSetTransCurrencyRates write Set_AutoSetTransCurrencyRates;
    property DataDirectory: WideString read Get_DataDirectory write Set_DataDirectory;
    property DeductBOMStock: WordBool read Get_DeductBOMStock write Set_DeductBOMStock;
    property DeductMultiLocationStock: WordBool read Get_DeductMultiLocationStock write Set_DeductMultiLocationStock;
    property DefaultCostCentre: WideString read Get_DefaultCostCentre write Set_DefaultCostCentre;
    property DefaultCurrency: Integer read Get_DefaultCurrency write Set_DefaultCurrency;
    property DefaultDepartment: WideString read Get_DefaultDepartment write Set_DefaultDepartment;
    property DefaultNominalCode: Integer read Get_DefaultNominalCode write Set_DefaultNominalCode;
    property DefaultVATCode: WideString read Get_DefaultVATCode write Set_DefaultVATCode;
    property EnterpriseDirectory: WideString read Get_EnterpriseDirectory write Set_EnterpriseDirectory;
    property OverwriteNotepad: WordBool read Get_OverwriteNotepad write Set_OverwriteNotepad;
    property OverwriteTransactionNumbers: WordBool read Get_OverwriteTransactionNumbers write Set_OverwriteTransactionNumbers;
    property UpdateAccountBalances: WordBool read Get_UpdateAccountBalances write Set_UpdateAccountBalances;
    property UpdateStockLevels: WordBool read Get_UpdateStockLevels write Set_UpdateStockLevels;
    property ValidateJobCostingFields: WordBool read Get_ValidateJobCostingFields write Set_ValidateJobCostingFields;
    property ToolkitPath: WideString read Get_ToolkitPath;
  end;

// *********************************************************************//
// DispIntf:  IConfigurationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B751883E-C515-4843-B86F-8414DD4C40E1}
// *********************************************************************//
  IConfigurationDisp = dispinterface
    ['{B751883E-C515-4843-B86F-8414DD4C40E1}']
    property AllowTransactionEditing: WordBool dispid 14;
    property AutoSetPeriod: WordBool dispid 3;
    property AutoSetStockCost: WordBool dispid 8;
    property AutoSetTransCurrencyRates: WordBool dispid 13;
    property DataDirectory: WideString dispid 2;
    property DeductBOMStock: WordBool dispid 9;
    property DeductMultiLocationStock: WordBool dispid 10;
    property DefaultCostCentre: WideString dispid 5;
    property DefaultCurrency: Integer dispid 16;
    property DefaultDepartment: WideString dispid 6;
    property DefaultNominalCode: Integer dispid 4;
    property DefaultVATCode: WideString dispid 7;
    property EnterpriseDirectory: WideString dispid 1;
    property OverwriteNotepad: WordBool dispid 12;
    property OverwriteTransactionNumbers: WordBool dispid 11;
    property UpdateAccountBalances: WordBool dispid 17;
    property UpdateStockLevels: WordBool dispid 18;
    property ValidateJobCostingFields: WordBool dispid 19;
    function SetDebugMode(Param1: Integer; Param2: Integer; Param3: Integer): OleVariant; dispid 20;
    property ToolkitPath: WideString readonly dispid 15;
  end;

// *********************************************************************//
// Interface: IEnterprise
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {334E16EC-798E-4106-BF97-63770670EE41}
// *********************************************************************//
  IEnterprise = interface(IDispatch)
    ['{334E16EC-798E-4106-BF97-63770670EE41}']
    function Get_enRunning: WordBool; safecall;
    function Get_enEnterpriseVersion: WideString; safecall;
    function Get_enAppPath: WideString; safecall;
    function Get_enCompanyPath: WideString; safecall;
    function Get_enUserName: WideString; safecall;
    function Get_enCurrencyVersion: TEnterpriseCurrencyVersion; safecall;
    function Get_enModuleVersion: TEnterpriseModuleVersion; safecall;
    function Get_enClientServer: WordBool; safecall;
    property enRunning: WordBool read Get_enRunning;
    property enEnterpriseVersion: WideString read Get_enEnterpriseVersion;
    property enAppPath: WideString read Get_enAppPath;
    property enCompanyPath: WideString read Get_enCompanyPath;
    property enUserName: WideString read Get_enUserName;
    property enCurrencyVersion: TEnterpriseCurrencyVersion read Get_enCurrencyVersion;
    property enModuleVersion: TEnterpriseModuleVersion read Get_enModuleVersion;
    property enClientServer: WordBool read Get_enClientServer;
  end;

// *********************************************************************//
// DispIntf:  IEnterpriseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {334E16EC-798E-4106-BF97-63770670EE41}
// *********************************************************************//
  IEnterpriseDisp = dispinterface
    ['{334E16EC-798E-4106-BF97-63770670EE41}']
    property enRunning: WordBool readonly dispid 1;
    property enEnterpriseVersion: WideString readonly dispid 2;
    property enAppPath: WideString readonly dispid 3;
    property enCompanyPath: WideString readonly dispid 4;
    property enUserName: WideString readonly dispid 5;
    property enCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 6;
    property enModuleVersion: TEnterpriseModuleVersion readonly dispid 7;
    property enClientServer: WordBool readonly dispid 8;
  end;

// *********************************************************************//
// Interface: IGeneralLedger
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C464ED71-41BC-49A3-ABCB-35DCC36A6462}
// *********************************************************************//
  IGeneralLedger = interface(IDispatch)
    ['{C464ED71-41BC-49A3-ABCB-35DCC36A6462}']
    function Get_glCode: Integer; safecall;
    procedure Set_glCode(Value: Integer); safecall;
    function Get_glName: WideString; safecall;
    procedure Set_glName(const Value: WideString); safecall;
    function Get_glParent: Integer; safecall;
    procedure Set_glParent(Value: Integer); safecall;
    function Get_glType: TGeneralLedgerType; safecall;
    procedure Set_glType(Value: TGeneralLedgerType); safecall;
    function Get_glAltCode: WideString; safecall;
    procedure Set_glAltCode(const Value: WideString); safecall;
    function Get_glPage: WordBool; safecall;
    procedure Set_glPage(Value: WordBool); safecall;
    function Get_glSubtotal: WordBool; safecall;
    procedure Set_glSubtotal(Value: WordBool); safecall;
    function Get_glTotal: WordBool; safecall;
    procedure Set_glTotal(Value: WordBool); safecall;
    function Get_glCarryFwd: Integer; safecall;
    procedure Set_glCarryFwd(Value: Integer); safecall;
    function Get_glRevalue: WordBool; safecall;
    procedure Set_glRevalue(Value: WordBool); safecall;
    function Get_glCurrency: Smallint; safecall;
    procedure Set_glCurrency(Value: Smallint); safecall;
    function Add: IGeneralLedger; safecall;
    function Update: IGeneralLedger; safecall;
    function Clone: IGeneralLedger; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function Get_glParentI: IGeneralLedger; safecall;
    function BuildCodeIndex(glCode: Integer): WideString; safecall;
    function BuildNameIndex(const Name: WideString): WideString; safecall;
    function BuildParentIndex(ParentCode: Integer; ChildCode: Integer): WideString; safecall;
    function BuildAltCodeIndex(const AltCode: WideString): WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Index: TGeneralLedgerIndex; safecall;
    procedure Set_Index(Value: TGeneralLedgerIndex); safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function StepFirst: Integer; safecall;
    function StepPrevious: Integer; safecall;
    function StepNext: Integer; safecall;
    function StepLast: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    property glCode: Integer read Get_glCode write Set_glCode;
    property glName: WideString read Get_glName write Set_glName;
    property glParent: Integer read Get_glParent write Set_glParent;
    property glType: TGeneralLedgerType read Get_glType write Set_glType;
    property glAltCode: WideString read Get_glAltCode write Set_glAltCode;
    property glPage: WordBool read Get_glPage write Set_glPage;
    property glSubtotal: WordBool read Get_glSubtotal write Set_glSubtotal;
    property glTotal: WordBool read Get_glTotal write Set_glTotal;
    property glCarryFwd: Integer read Get_glCarryFwd write Set_glCarryFwd;
    property glRevalue: WordBool read Get_glRevalue write Set_glRevalue;
    property glCurrency: Smallint read Get_glCurrency write Set_glCurrency;
    property glParentI: IGeneralLedger read Get_glParentI;
    property Index: TGeneralLedgerIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  IGeneralLedgerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C464ED71-41BC-49A3-ABCB-35DCC36A6462}
// *********************************************************************//
  IGeneralLedgerDisp = dispinterface
    ['{C464ED71-41BC-49A3-ABCB-35DCC36A6462}']
    property glCode: Integer dispid 1;
    property glName: WideString dispid 2;
    property glParent: Integer dispid 3;
    property glType: TGeneralLedgerType dispid 4;
    property glAltCode: WideString dispid 5;
    property glPage: WordBool dispid 6;
    property glSubtotal: WordBool dispid 7;
    property glTotal: WordBool dispid 8;
    property glCarryFwd: Integer dispid 9;
    property glRevalue: WordBool dispid 10;
    property glCurrency: Smallint dispid 11;
    function Add: IGeneralLedger; dispid 12;
    function Update: IGeneralLedger; dispid 13;
    function Clone: IGeneralLedger; dispid 14;
    function Save: Integer; dispid 15;
    procedure Cancel; dispid 16;
    property glParentI: IGeneralLedger readonly dispid 18;
    function BuildCodeIndex(glCode: Integer): WideString; dispid 17;
    function BuildNameIndex(const Name: WideString): WideString; dispid 19;
    function BuildParentIndex(ParentCode: Integer; ChildCode: Integer): WideString; dispid 20;
    function BuildAltCodeIndex(const AltCode: WideString): WideString; dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TGeneralLedgerIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: ILocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {529357BA-34F9-4558-ADA7-F05437FDFBBD}
// *********************************************************************//
  ILocation = interface(IDispatch)
    ['{529357BA-34F9-4558-ADA7-F05437FDFBBD}']
    function Get_loCode: WideString; safecall;
    procedure Set_loCode(const Value: WideString); safecall;
    function Get_loName: WideString; safecall;
    procedure Set_loName(const Value: WideString); safecall;
    function Get_loAddress: IAddress; safecall;
    function Get_loPhone: WideString; safecall;
    procedure Set_loPhone(const Value: WideString); safecall;
    function Get_loFax: WideString; safecall;
    procedure Set_loFax(const Value: WideString); safecall;
    function Get_loEmailAddr: WideString; safecall;
    procedure Set_loEmailAddr(const Value: WideString); safecall;
    function Get_loModem: WideString; safecall;
    procedure Set_loModem(const Value: WideString); safecall;
    function Get_loContact: WideString; safecall;
    procedure Set_loContact(const Value: WideString); safecall;
    function Get_loCurrency: Smallint; safecall;
    procedure Set_loCurrency(Value: Smallint); safecall;
    function Get_loArea: WideString; safecall;
    procedure Set_loArea(const Value: WideString); safecall;
    function Get_loRep: WideString; safecall;
    procedure Set_loRep(const Value: WideString); safecall;
    function Get_loTagged: WordBool; safecall;
    procedure Set_loTagged(Value: WordBool); safecall;
    function Get_loCostCentre: WideString; safecall;
    procedure Set_loCostCentre(const Value: WideString); safecall;
    function Get_loDepartment: WideString; safecall;
    procedure Set_loDepartment(const Value: WideString); safecall;
    function Get_loOverrideSalesPrice: WordBool; safecall;
    procedure Set_loOverrideSalesPrice(Value: WordBool); safecall;
    function Get_loOverrideGLCodes: WordBool; safecall;
    procedure Set_loOverrideGLCodes(Value: WordBool); safecall;
    function Get_loOverrideCCDept: WordBool; safecall;
    procedure Set_loOverrideCCDept(Value: WordBool); safecall;
    function Get_loOverrideSupplier: WordBool; safecall;
    procedure Set_loOverrideSupplier(Value: WordBool); safecall;
    function Get_loOverrideBinLocation: WordBool; safecall;
    procedure Set_loOverrideBinLocation(Value: WordBool); safecall;
    function Get_loSalesGL: Integer; safecall;
    procedure Set_loSalesGL(Value: Integer); safecall;
    function Get_loCostOfSalesGL: Integer; safecall;
    procedure Set_loCostOfSalesGL(Value: Integer); safecall;
    function Get_loPandLGL: Integer; safecall;
    procedure Set_loPandLGL(Value: Integer); safecall;
    function Get_loBalSheetGL: Integer; safecall;
    procedure Set_loBalSheetGL(Value: Integer); safecall;
    function Get_loWIPGL: Integer; safecall;
    procedure Set_loWIPGL(Value: Integer); safecall;
    function BuildCodeIndex(const Code: WideString): WideString; safecall;
    function BuildNameIndex(const Name: WideString): WideString; safecall;
    function Add: ILocation; safecall;
    function Update: ILocation; safecall;
    function Clone: ILocation; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Index: TLocationIndex; safecall;
    procedure Set_Index(Value: TLocationIndex); safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_loStockList: IStockLocation; safecall;
    property loCode: WideString read Get_loCode write Set_loCode;
    property loName: WideString read Get_loName write Set_loName;
    property loAddress: IAddress read Get_loAddress;
    property loPhone: WideString read Get_loPhone write Set_loPhone;
    property loFax: WideString read Get_loFax write Set_loFax;
    property loEmailAddr: WideString read Get_loEmailAddr write Set_loEmailAddr;
    property loModem: WideString read Get_loModem write Set_loModem;
    property loContact: WideString read Get_loContact write Set_loContact;
    property loCurrency: Smallint read Get_loCurrency write Set_loCurrency;
    property loArea: WideString read Get_loArea write Set_loArea;
    property loRep: WideString read Get_loRep write Set_loRep;
    property loTagged: WordBool read Get_loTagged write Set_loTagged;
    property loCostCentre: WideString read Get_loCostCentre write Set_loCostCentre;
    property loDepartment: WideString read Get_loDepartment write Set_loDepartment;
    property loOverrideSalesPrice: WordBool read Get_loOverrideSalesPrice write Set_loOverrideSalesPrice;
    property loOverrideGLCodes: WordBool read Get_loOverrideGLCodes write Set_loOverrideGLCodes;
    property loOverrideCCDept: WordBool read Get_loOverrideCCDept write Set_loOverrideCCDept;
    property loOverrideSupplier: WordBool read Get_loOverrideSupplier write Set_loOverrideSupplier;
    property loOverrideBinLocation: WordBool read Get_loOverrideBinLocation write Set_loOverrideBinLocation;
    property loSalesGL: Integer read Get_loSalesGL write Set_loSalesGL;
    property loCostOfSalesGL: Integer read Get_loCostOfSalesGL write Set_loCostOfSalesGL;
    property loPandLGL: Integer read Get_loPandLGL write Set_loPandLGL;
    property loBalSheetGL: Integer read Get_loBalSheetGL write Set_loBalSheetGL;
    property loWIPGL: Integer read Get_loWIPGL write Set_loWIPGL;
    property Index: TLocationIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property loStockList: IStockLocation read Get_loStockList;
  end;

// *********************************************************************//
// DispIntf:  ILocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {529357BA-34F9-4558-ADA7-F05437FDFBBD}
// *********************************************************************//
  ILocationDisp = dispinterface
    ['{529357BA-34F9-4558-ADA7-F05437FDFBBD}']
    property loCode: WideString dispid 1;
    property loName: WideString dispid 2;
    property loAddress: IAddress readonly dispid 3;
    property loPhone: WideString dispid 4;
    property loFax: WideString dispid 5;
    property loEmailAddr: WideString dispid 6;
    property loModem: WideString dispid 7;
    property loContact: WideString dispid 8;
    property loCurrency: Smallint dispid 9;
    property loArea: WideString dispid 10;
    property loRep: WideString dispid 11;
    property loTagged: WordBool dispid 12;
    property loCostCentre: WideString dispid 13;
    property loDepartment: WideString dispid 14;
    property loOverrideSalesPrice: WordBool dispid 15;
    property loOverrideGLCodes: WordBool dispid 16;
    property loOverrideCCDept: WordBool dispid 17;
    property loOverrideSupplier: WordBool dispid 18;
    property loOverrideBinLocation: WordBool dispid 19;
    property loSalesGL: Integer dispid 20;
    property loCostOfSalesGL: Integer dispid 21;
    property loPandLGL: Integer dispid 22;
    property loBalSheetGL: Integer dispid 23;
    property loWIPGL: Integer dispid 24;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 25;
    function BuildNameIndex(const Name: WideString): WideString; dispid 26;
    function Add: ILocation; dispid 27;
    function Update: ILocation; dispid 28;
    function Clone: ILocation; dispid 29;
    function Save: Integer; dispid 30;
    procedure Cancel; dispid 31;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TLocationIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property loStockList: IStockLocation readonly dispid 32;
  end;

// *********************************************************************//
// Interface: ICCDept
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54202F43-5F21-4EFF-B338-10CC3C76C444}
// *********************************************************************//
  ICCDept = interface(IDispatch)
    ['{54202F43-5F21-4EFF-B338-10CC3C76C444}']
    function Get_cdCode: WideString; safecall;
    function Get_cdName: WideString; safecall;
    function BuildCodeIndex(const Code: WideString): WideString; safecall;
    function BuildNameIndex(const Name: WideString): WideString; safecall;
    function Clone: ICCDept; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Index: TCCDeptIndex; safecall;
    procedure Set_Index(Value: TCCDeptIndex); safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    property cdCode: WideString read Get_cdCode;
    property cdName: WideString read Get_cdName;
    property Index: TCCDeptIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  ICCDeptDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54202F43-5F21-4EFF-B338-10CC3C76C444}
// *********************************************************************//
  ICCDeptDisp = dispinterface
    ['{54202F43-5F21-4EFF-B338-10CC3C76C444}']
    property cdCode: WideString readonly dispid 1;
    property cdName: WideString readonly dispid 2;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 3;
    function BuildNameIndex(const Name: WideString): WideString; dispid 4;
    function Clone: ICCDept; dispid 5;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TCCDeptIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: ICompanyManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8223E69-F6EC-4AF6-81D0-4F36FC70ED8C}
// *********************************************************************//
  ICompanyManager = interface(IDispatch)
    ['{E8223E69-F6EC-4AF6-81D0-4F36FC70ED8C}']
    function Get_cmCount: Integer; safecall;
    function Get_cmCompany(Index: Integer): ICompanyDetail; safecall;
    property cmCount: Integer read Get_cmCount;
    property cmCompany[Index: Integer]: ICompanyDetail read Get_cmCompany;
  end;

// *********************************************************************//
// DispIntf:  ICompanyManagerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8223E69-F6EC-4AF6-81D0-4F36FC70ED8C}
// *********************************************************************//
  ICompanyManagerDisp = dispinterface
    ['{E8223E69-F6EC-4AF6-81D0-4F36FC70ED8C}']
    property cmCount: Integer readonly dispid 1;
    property cmCompany[Index: Integer]: ICompanyDetail readonly dispid 2;
  end;

// *********************************************************************//
// Interface: ICompanyDetail
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16606080-1F86-4D5B-9F82-A599B9B5D4CA}
// *********************************************************************//
  ICompanyDetail = interface(IDispatch)
    ['{16606080-1F86-4D5B-9F82-A599B9B5D4CA}']
    function Get_coCode: WideString; safecall;
    function Get_coName: WideString; safecall;
    function Get_coPath: WideString; safecall;
    property coCode: WideString read Get_coCode;
    property coName: WideString read Get_coName;
    property coPath: WideString read Get_coPath;
  end;

// *********************************************************************//
// DispIntf:  ICompanyDetailDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16606080-1F86-4D5B-9F82-A599B9B5D4CA}
// *********************************************************************//
  ICompanyDetailDisp = dispinterface
    ['{16606080-1F86-4D5B-9F82-A599B9B5D4CA}']
    property coCode: WideString readonly dispid 1;
    property coName: WideString readonly dispid 2;
    property coPath: WideString readonly dispid 3;
  end;

// *********************************************************************//
// Interface: IStockLocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2B5CFA4-0FB2-45DA-8413-49C84982D647}
// *********************************************************************//
  IStockLocation = interface(IDispatch)
    ['{B2B5CFA4-0FB2-45DA-8413-49C84982D647}']
    function Get_slStockCode: WideString; safecall;
    procedure Set_slStockCode(const Value: WideString); safecall;
    function Get_slLocationCode: WideString; safecall;
    procedure Set_slLocationCode(const Value: WideString); safecall;
    function Get_slStockCodeI: IStock; safecall;
    function Get_slLocationCodeI: ILocation; safecall;
    function Get_slQtyInStock: Double; safecall;
    function Get_slQtyOnOrder: Double; safecall;
    function Get_slQtyAllocated: Double; safecall;
    function Get_slQtyPicked: Double; safecall;
    function Get_slQtyMin: Double; safecall;
    procedure Set_slQtyMin(Value: Double); safecall;
    function Get_slQtyMax: Double; safecall;
    procedure Set_slQtyMax(Value: Double); safecall;
    function Get_slQtyFreeze: Double; safecall;
    function Get_slReorderQty: Double; safecall;
    procedure Set_slReorderQty(Value: Double); safecall;
    function Get_slReorderCur: Smallint; safecall;
    procedure Set_slReorderCur(Value: Smallint); safecall;
    function Get_slReorderPrice: Double; safecall;
    procedure Set_slReorderPrice(Value: Double); safecall;
    function Get_slReorderDate: WideString; safecall;
    procedure Set_slReorderDate(const Value: WideString); safecall;
    function Get_slReorderCostCentre: WideString; safecall;
    procedure Set_slReorderCostCentre(const Value: WideString); safecall;
    function Get_slReorderDepartment: WideString; safecall;
    procedure Set_slReorderDepartment(const Value: WideString); safecall;
    function Get_slCostCentre: WideString; safecall;
    procedure Set_slCostCentre(const Value: WideString); safecall;
    function Get_slDepartment: WideString; safecall;
    procedure Set_slDepartment(const Value: WideString); safecall;
    function Get_slBinLocation: WideString; safecall;
    procedure Set_slBinLocation(const Value: WideString); safecall;
    function Get_slCostPriceCur: Integer; safecall;
    procedure Set_slCostPriceCur(Value: Integer); safecall;
    function Get_slCostPrice: Double; safecall;
    procedure Set_slCostPrice(Value: Double); safecall;
    function Get_slBelowMinLevel: WordBool; safecall;
    procedure Set_slBelowMinLevel(Value: WordBool); safecall;
    function Get_slSuppTemp: WideString; safecall;
    procedure Set_slSuppTemp(const Value: WideString); safecall;
    function Get_slSupplier: WideString; safecall;
    procedure Set_slSupplier(const Value: WideString); safecall;
    function Get_slSupplierI: IAccount; safecall;
    function Get_slLastUsed: WideString; safecall;
    function Get_slQtyPosted: Double; safecall;
    function Get_slQtyStockTake: Double; safecall;
    procedure Set_slQtyStockTake(Value: Double); safecall;
    function Get_slTimeChange: WideString; safecall;
    function Get_slSalesGL: Integer; safecall;
    procedure Set_slSalesGL(Value: Integer); safecall;
    function Get_slCostOfSalesGL: Integer; safecall;
    procedure Set_slCostOfSalesGL(Value: Integer); safecall;
    function Get_slPandLGL: Integer; safecall;
    procedure Set_slPandLGL(Value: Integer); safecall;
    function Get_slBalSheetGL: Integer; safecall;
    procedure Set_slBalSheetGL(Value: Integer); safecall;
    function Get_slWIPGL: Integer; safecall;
    procedure Set_slWIPGL(Value: Integer); safecall;
    function Get_slSalesBands(const Band: WideString): IStockSalesBand; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_slQtyFree: Double; safecall;
    function BuildCodeIndex(const Code: WideString): WideString; safecall;
    function Add: IStockLocation; safecall;
    function Update: IStockLocation; safecall;
    function Clone: IStockLocation; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    property slStockCode: WideString read Get_slStockCode write Set_slStockCode;
    property slLocationCode: WideString read Get_slLocationCode write Set_slLocationCode;
    property slStockCodeI: IStock read Get_slStockCodeI;
    property slLocationCodeI: ILocation read Get_slLocationCodeI;
    property slQtyInStock: Double read Get_slQtyInStock;
    property slQtyOnOrder: Double read Get_slQtyOnOrder;
    property slQtyAllocated: Double read Get_slQtyAllocated;
    property slQtyPicked: Double read Get_slQtyPicked;
    property slQtyMin: Double read Get_slQtyMin write Set_slQtyMin;
    property slQtyMax: Double read Get_slQtyMax write Set_slQtyMax;
    property slQtyFreeze: Double read Get_slQtyFreeze;
    property slReorderQty: Double read Get_slReorderQty write Set_slReorderQty;
    property slReorderCur: Smallint read Get_slReorderCur write Set_slReorderCur;
    property slReorderPrice: Double read Get_slReorderPrice write Set_slReorderPrice;
    property slReorderDate: WideString read Get_slReorderDate write Set_slReorderDate;
    property slReorderCostCentre: WideString read Get_slReorderCostCentre write Set_slReorderCostCentre;
    property slReorderDepartment: WideString read Get_slReorderDepartment write Set_slReorderDepartment;
    property slCostCentre: WideString read Get_slCostCentre write Set_slCostCentre;
    property slDepartment: WideString read Get_slDepartment write Set_slDepartment;
    property slBinLocation: WideString read Get_slBinLocation write Set_slBinLocation;
    property slCostPriceCur: Integer read Get_slCostPriceCur write Set_slCostPriceCur;
    property slCostPrice: Double read Get_slCostPrice write Set_slCostPrice;
    property slBelowMinLevel: WordBool read Get_slBelowMinLevel write Set_slBelowMinLevel;
    property slSuppTemp: WideString read Get_slSuppTemp write Set_slSuppTemp;
    property slSupplier: WideString read Get_slSupplier write Set_slSupplier;
    property slSupplierI: IAccount read Get_slSupplierI;
    property slLastUsed: WideString read Get_slLastUsed;
    property slQtyPosted: Double read Get_slQtyPosted;
    property slQtyStockTake: Double read Get_slQtyStockTake write Set_slQtyStockTake;
    property slTimeChange: WideString read Get_slTimeChange;
    property slSalesGL: Integer read Get_slSalesGL write Set_slSalesGL;
    property slCostOfSalesGL: Integer read Get_slCostOfSalesGL write Set_slCostOfSalesGL;
    property slPandLGL: Integer read Get_slPandLGL write Set_slPandLGL;
    property slBalSheetGL: Integer read Get_slBalSheetGL write Set_slBalSheetGL;
    property slWIPGL: Integer read Get_slWIPGL write Set_slWIPGL;
    property slSalesBands[const Band: WideString]: IStockSalesBand read Get_slSalesBands;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property slQtyFree: Double read Get_slQtyFree;
  end;

// *********************************************************************//
// DispIntf:  IStockLocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2B5CFA4-0FB2-45DA-8413-49C84982D647}
// *********************************************************************//
  IStockLocationDisp = dispinterface
    ['{B2B5CFA4-0FB2-45DA-8413-49C84982D647}']
    property slStockCode: WideString dispid 1;
    property slLocationCode: WideString dispid 2;
    property slStockCodeI: IStock readonly dispid 3;
    property slLocationCodeI: ILocation readonly dispid 4;
    property slQtyInStock: Double readonly dispid 5;
    property slQtyOnOrder: Double readonly dispid 6;
    property slQtyAllocated: Double readonly dispid 7;
    property slQtyPicked: Double readonly dispid 8;
    property slQtyMin: Double dispid 9;
    property slQtyMax: Double dispid 10;
    property slQtyFreeze: Double readonly dispid 11;
    property slReorderQty: Double dispid 12;
    property slReorderCur: Smallint dispid 13;
    property slReorderPrice: Double dispid 14;
    property slReorderDate: WideString dispid 15;
    property slReorderCostCentre: WideString dispid 16;
    property slReorderDepartment: WideString dispid 17;
    property slCostCentre: WideString dispid 18;
    property slDepartment: WideString dispid 19;
    property slBinLocation: WideString dispid 20;
    property slCostPriceCur: Integer dispid 21;
    property slCostPrice: Double dispid 22;
    property slBelowMinLevel: WordBool dispid 23;
    property slSuppTemp: WideString dispid 24;
    property slSupplier: WideString dispid 25;
    property slSupplierI: IAccount readonly dispid 26;
    property slLastUsed: WideString readonly dispid 27;
    property slQtyPosted: Double readonly dispid 28;
    property slQtyStockTake: Double dispid 29;
    property slTimeChange: WideString readonly dispid 30;
    property slSalesGL: Integer dispid 31;
    property slCostOfSalesGL: Integer dispid 32;
    property slPandLGL: Integer dispid 33;
    property slBalSheetGL: Integer dispid 34;
    property slWIPGL: Integer dispid 35;
    property slSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 36;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property slQtyFree: Double readonly dispid 37;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 38;
    function Add: IStockLocation; dispid 39;
    function Update: IStockLocation; dispid 40;
    function Clone: IStockLocation; dispid 41;
    function Save: Integer; dispid 42;
    procedure Cancel; dispid 43;
  end;

// *********************************************************************//
// Interface: INotes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F11DB710-08A7-42CB-B8F6-0D94822D2846}
// *********************************************************************//
  INotes = interface(IDispatch)
    ['{F11DB710-08A7-42CB-B8F6-0D94822D2846}']
    function Get_ntDate: WideString; safecall;
    procedure Set_ntDate(const Value: WideString); safecall;
    function Get_ntText: WideString; safecall;
    procedure Set_ntText(const Value: WideString); safecall;
    function Get_ntType: TNotesType; safecall;
    procedure Set_ntType(Value: TNotesType); safecall;
    function Get_ntAlarmDate: WideString; safecall;
    procedure Set_ntAlarmDate(const Value: WideString); safecall;
    function Get_ntAlarmSet: WordBool; safecall;
    procedure Set_ntAlarmSet(Value: WordBool); safecall;
    function Get_ntLineNo: Integer; safecall;
    procedure Set_ntLineNo(Value: Integer); safecall;
    function Get_ntOperator: WideString; safecall;
    procedure Set_ntOperator(const Value: WideString); safecall;
    function Get_ntAlarmDays: Integer; safecall;
    procedure Set_ntAlarmDays(Value: Integer); safecall;
    function Get_ntAlarmUser: WideString; safecall;
    procedure Set_ntAlarmUser(const Value: WideString); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function BuildIndex(LineNo: Integer): WideString; safecall;
    function Get_KeyString: WideString; safecall;
    function Add: INotes; safecall;
    function Update: INotes; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    property ntDate: WideString read Get_ntDate write Set_ntDate;
    property ntText: WideString read Get_ntText write Set_ntText;
    property ntType: TNotesType read Get_ntType write Set_ntType;
    property ntAlarmDate: WideString read Get_ntAlarmDate write Set_ntAlarmDate;
    property ntAlarmSet: WordBool read Get_ntAlarmSet write Set_ntAlarmSet;
    property ntLineNo: Integer read Get_ntLineNo write Set_ntLineNo;
    property ntOperator: WideString read Get_ntOperator write Set_ntOperator;
    property ntAlarmDays: Integer read Get_ntAlarmDays write Set_ntAlarmDays;
    property ntAlarmUser: WideString read Get_ntAlarmUser write Set_ntAlarmUser;
    property Position: Integer read Get_Position write Set_Position;
    property KeyString: WideString read Get_KeyString;
  end;

// *********************************************************************//
// DispIntf:  INotesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F11DB710-08A7-42CB-B8F6-0D94822D2846}
// *********************************************************************//
  INotesDisp = dispinterface
    ['{F11DB710-08A7-42CB-B8F6-0D94822D2846}']
    property ntDate: WideString dispid 1;
    property ntText: WideString dispid 2;
    property ntType: TNotesType dispid 3;
    property ntAlarmDate: WideString dispid 4;
    property ntAlarmSet: WordBool dispid 5;
    property ntLineNo: Integer dispid 6;
    property ntOperator: WideString dispid 7;
    property ntAlarmDays: Integer dispid 8;
    property ntAlarmUser: WideString dispid 9;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildIndex(LineNo: Integer): WideString; dispid 33554439;
    property KeyString: WideString readonly dispid 16777222;
    function Add: INotes; dispid 27;
    function Update: INotes; dispid 28;
    function Save: Integer; dispid 30;
    procedure Cancel; dispid 31;
  end;

// *********************************************************************//
// Interface: IJobCosting
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9B74EAF-E165-4BF8-9E65-8A13E7DFCF48}
// *********************************************************************//
  IJobCosting = interface(IDispatch)
    ['{E9B74EAF-E165-4BF8-9E65-8A13E7DFCF48}']
    function Get_Job: IJob; safecall;
    function Get_JobType: IJobType; safecall;
    function Get_JobAnalysis: IJobAnalysis; safecall;
    function Get_Employee: IEmployee; safecall;
    function Get_TimeRates: ITimeRates; safecall;
    property Job: IJob read Get_Job;
    property JobType: IJobType read Get_JobType;
    property JobAnalysis: IJobAnalysis read Get_JobAnalysis;
    property Employee: IEmployee read Get_Employee;
    property TimeRates: ITimeRates read Get_TimeRates;
  end;

// *********************************************************************//
// DispIntf:  IJobCostingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9B74EAF-E165-4BF8-9E65-8A13E7DFCF48}
// *********************************************************************//
  IJobCostingDisp = dispinterface
    ['{E9B74EAF-E165-4BF8-9E65-8A13E7DFCF48}']
    property Job: IJob readonly dispid 1;
    property JobType: IJobType readonly dispid 2;
    property JobAnalysis: IJobAnalysis readonly dispid 3;
    property Employee: IEmployee readonly dispid 4;
    property TimeRates: ITimeRates readonly dispid 5;
  end;

// *********************************************************************//
// Interface: IJob
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC750828-6032-4D5F-9B89-6161ED126E76}
// *********************************************************************//
  IJob = interface(IDispatch)
    ['{CC750828-6032-4D5F-9B89-6161ED126E76}']
    function Get_jrCode: WideString; safecall;
    procedure Set_jrCode(const Value: WideString); safecall;
    function Get_jrDesc: WideString; safecall;
    procedure Set_jrDesc(const Value: WideString); safecall;
    function Get_jrFolio: Integer; safecall;
    function Get_jrAcCode: WideString; safecall;
    procedure Set_jrAcCode(const Value: WideString); safecall;
    function Get_jrParent: WideString; safecall;
    procedure Set_jrParent(const Value: WideString); safecall;
    function Get_jrAltCode: WideString; safecall;
    procedure Set_jrAltCode(const Value: WideString); safecall;
    function Get_jrCompleted: WordBool; safecall;
    procedure Set_jrCompleted(Value: WordBool); safecall;
    function Get_jrContact: WideString; safecall;
    procedure Set_jrContact(const Value: WideString); safecall;
    function Get_jrManager: WideString; safecall;
    procedure Set_jrManager(const Value: WideString); safecall;
    function Get_jrChargeType: TJobChargeType; safecall;
    procedure Set_jrChargeType(Value: TJobChargeType); safecall;
    function Get_jrQuotePrice: Double; safecall;
    procedure Set_jrQuotePrice(Value: Double); safecall;
    function Get_jrQuotePriceCurr: Smallint; safecall;
    procedure Set_jrQuotePriceCurr(Value: Smallint); safecall;
    function Get_jrStartDate: WideString; safecall;
    procedure Set_jrStartDate(const Value: WideString); safecall;
    function Get_jrEndDate: WideString; safecall;
    procedure Set_jrEndDate(const Value: WideString); safecall;
    function Get_jrRevisedEndDate: WideString; safecall;
    procedure Set_jrRevisedEndDate(const Value: WideString); safecall;
    function Get_jrSORNumber: WideString; safecall;
    procedure Set_jrSORNumber(const Value: WideString); safecall;
    function Get_jrVATCode: WideString; safecall;
    procedure Set_jrVATCode(const Value: WideString); safecall;
    function Get_jrJobType: WideString; safecall;
    procedure Set_jrJobType(const Value: WideString); safecall;
    function Get_jrType: TJobTypeType; safecall;
    procedure Set_jrType(Value: TJobTypeType); safecall;
    function Get_jrStatus: TJobStatusType; safecall;
    procedure Set_jrStatus(Value: TJobStatusType); safecall;
    function Get_jrUserField1: WideString; safecall;
    procedure Set_jrUserField1(const Value: WideString); safecall;
    function Get_jrUserField2: WideString; safecall;
    procedure Set_jrUserField2(const Value: WideString); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Index: TJobIndex; safecall;
    procedure Set_Index(Value: TJobIndex); safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function StepFirst: Integer; safecall;
    function StepPrevious: Integer; safecall;
    function StepNext: Integer; safecall;
    function StepLast: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function BuildCodeIndex(const JobCode: WideString): WideString; safecall;
    function BuildFolioIndex(Folio: Integer): WideString; safecall;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; safecall;
    function Add: IJob; safecall;
    function Update: IJob; safecall;
    function Clone: IJob; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function BuildDescIndex(const Description: WideString): WideString; safecall;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; safecall;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; safecall;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; safecall;
    function BuildAccountIndex(const AccountCode: WideString): WideString; safecall;
    function Get_jrNotes: INotes; safecall;
    function Get_jrJobTypeI: IJobType; safecall;
    property jrCode: WideString read Get_jrCode write Set_jrCode;
    property jrDesc: WideString read Get_jrDesc write Set_jrDesc;
    property jrFolio: Integer read Get_jrFolio;
    property jrAcCode: WideString read Get_jrAcCode write Set_jrAcCode;
    property jrParent: WideString read Get_jrParent write Set_jrParent;
    property jrAltCode: WideString read Get_jrAltCode write Set_jrAltCode;
    property jrCompleted: WordBool read Get_jrCompleted write Set_jrCompleted;
    property jrContact: WideString read Get_jrContact write Set_jrContact;
    property jrManager: WideString read Get_jrManager write Set_jrManager;
    property jrChargeType: TJobChargeType read Get_jrChargeType write Set_jrChargeType;
    property jrQuotePrice: Double read Get_jrQuotePrice write Set_jrQuotePrice;
    property jrQuotePriceCurr: Smallint read Get_jrQuotePriceCurr write Set_jrQuotePriceCurr;
    property jrStartDate: WideString read Get_jrStartDate write Set_jrStartDate;
    property jrEndDate: WideString read Get_jrEndDate write Set_jrEndDate;
    property jrRevisedEndDate: WideString read Get_jrRevisedEndDate write Set_jrRevisedEndDate;
    property jrSORNumber: WideString read Get_jrSORNumber write Set_jrSORNumber;
    property jrVATCode: WideString read Get_jrVATCode write Set_jrVATCode;
    property jrJobType: WideString read Get_jrJobType write Set_jrJobType;
    property jrType: TJobTypeType read Get_jrType write Set_jrType;
    property jrStatus: TJobStatusType read Get_jrStatus write Set_jrStatus;
    property jrUserField1: WideString read Get_jrUserField1 write Set_jrUserField1;
    property jrUserField2: WideString read Get_jrUserField2 write Set_jrUserField2;
    property Index: TJobIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property jrNotes: INotes read Get_jrNotes;
    property jrJobTypeI: IJobType read Get_jrJobTypeI;
  end;

// *********************************************************************//
// DispIntf:  IJobDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC750828-6032-4D5F-9B89-6161ED126E76}
// *********************************************************************//
  IJobDisp = dispinterface
    ['{CC750828-6032-4D5F-9B89-6161ED126E76}']
    property jrCode: WideString dispid 1;
    property jrDesc: WideString dispid 2;
    property jrFolio: Integer readonly dispid 3;
    property jrAcCode: WideString dispid 4;
    property jrParent: WideString dispid 5;
    property jrAltCode: WideString dispid 6;
    property jrCompleted: WordBool dispid 7;
    property jrContact: WideString dispid 8;
    property jrManager: WideString dispid 9;
    property jrChargeType: TJobChargeType dispid 10;
    property jrQuotePrice: Double dispid 11;
    property jrQuotePriceCurr: Smallint dispid 12;
    property jrStartDate: WideString dispid 13;
    property jrEndDate: WideString dispid 14;
    property jrRevisedEndDate: WideString dispid 15;
    property jrSORNumber: WideString dispid 16;
    property jrVATCode: WideString dispid 17;
    property jrJobType: WideString dispid 20;
    property jrType: TJobTypeType dispid 21;
    property jrStatus: TJobStatusType dispid 22;
    property jrUserField1: WideString dispid 23;
    property jrUserField2: WideString dispid 24;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TJobIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const JobCode: WideString): WideString; dispid 18;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 19;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; dispid 25;
    function Add: IJob; dispid 26;
    function Update: IJob; dispid 27;
    function Clone: IJob; dispid 28;
    function Save: Integer; dispid 29;
    procedure Cancel; dispid 30;
    function BuildDescIndex(const Description: WideString): WideString; dispid 31;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; dispid 32;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; dispid 33;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 34;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 35;
    property jrNotes: INotes readonly dispid 36;
    property jrJobTypeI: IJobType readonly dispid 37;
  end;

// *********************************************************************//
// Interface: IMatching
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9044999A-6B51-4758-BEDD-CCFF34C47FC2}
// *********************************************************************//
  IMatching = interface(IDispatch)
    ['{9044999A-6B51-4758-BEDD-CCFF34C47FC2}']
    function Get_maDocRef: WideString; safecall;
    procedure Set_maDocRef(const Value: WideString); safecall;
    function Get_maPayRef: WideString; safecall;
    procedure Set_maPayRef(const Value: WideString); safecall;
    function Get_maType: TMatchingSubType; safecall;
    function Get_maDocCurrency: Smallint; safecall;
    procedure Set_maDocCurrency(Value: Smallint); safecall;
    function Get_maDocValue: Double; safecall;
    procedure Set_maDocValue(Value: Double); safecall;
    function Get_maPayCurrency: Smallint; safecall;
    procedure Set_maPayCurrency(Value: Smallint); safecall;
    function Get_maPayValue: Double; safecall;
    procedure Set_maPayValue(Value: Double); safecall;
    function Get_maBaseValue: Double; safecall;
    procedure Set_maBaseValue(Value: Double); safecall;
    function Get_maDocYourRef: WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Add: IMatching; safecall;
    function Save: Integer; safecall;
    property maDocRef: WideString read Get_maDocRef write Set_maDocRef;
    property maPayRef: WideString read Get_maPayRef write Set_maPayRef;
    property maType: TMatchingSubType read Get_maType;
    property maDocCurrency: Smallint read Get_maDocCurrency write Set_maDocCurrency;
    property maDocValue: Double read Get_maDocValue write Set_maDocValue;
    property maPayCurrency: Smallint read Get_maPayCurrency write Set_maPayCurrency;
    property maPayValue: Double read Get_maPayValue write Set_maPayValue;
    property maBaseValue: Double read Get_maBaseValue write Set_maBaseValue;
    property maDocYourRef: WideString read Get_maDocYourRef;
    property Position: Integer read Get_Position write Set_Position;
    property KeyString: WideString read Get_KeyString;
  end;

// *********************************************************************//
// DispIntf:  IMatchingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9044999A-6B51-4758-BEDD-CCFF34C47FC2}
// *********************************************************************//
  IMatchingDisp = dispinterface
    ['{9044999A-6B51-4758-BEDD-CCFF34C47FC2}']
    property maDocRef: WideString dispid 1;
    property maPayRef: WideString dispid 2;
    property maType: TMatchingSubType readonly dispid 3;
    property maDocCurrency: Smallint dispid 4;
    property maDocValue: Double dispid 5;
    property maPayCurrency: Smallint dispid 6;
    property maPayValue: Double dispid 7;
    property maBaseValue: Double dispid 8;
    property maDocYourRef: WideString readonly dispid 10;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    property KeyString: WideString readonly dispid 16777222;
    function Add: IMatching; dispid 9;
    function Save: Integer; dispid 11;
  end;

// *********************************************************************//
// Interface: IAccountDiscount
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {463F7605-51FB-402E-A1C8-F6A08D9AE038}
// *********************************************************************//
  IAccountDiscount = interface(IDispatch)
    ['{463F7605-51FB-402E-A1C8-F6A08D9AE038}']
    function Get_adStockCode: WideString; safecall;
    procedure Set_adStockCode(const Value: WideString); safecall;
    function Get_adType: TDiscountType; safecall;
    procedure Set_adType(Value: TDiscountType); safecall;
    function Get_adCurrency: Smallint; safecall;
    procedure Set_adCurrency(Value: Smallint); safecall;
    function Get_adPrice: Double; safecall;
    procedure Set_adPrice(Value: Double); safecall;
    function Get_adDiscPercent: Double; safecall;
    procedure Set_adDiscPercent(Value: Double); safecall;
    function Get_adDiscValue: Double; safecall;
    procedure Set_adDiscValue(Value: Double); safecall;
    function Get_adMarkupMarginPercent: Double; safecall;
    procedure Set_adMarkupMarginPercent(Value: Double); safecall;
    function Get_adStockCodeI: IStock; safecall;
    function BuildIndex(const StockCode: WideString; Currency: Smallint): WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_adPriceBand: WideString; safecall;
    procedure Set_adPriceBand(const Value: WideString); safecall;
    function Add: IAccountDiscount; safecall;
    function Update: IAccountDiscount; safecall;
    function Clone: IAccountDiscount; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function Get_adQtyBreaks: IQuantityBreak; safecall;
    property adStockCode: WideString read Get_adStockCode write Set_adStockCode;
    property adType: TDiscountType read Get_adType write Set_adType;
    property adCurrency: Smallint read Get_adCurrency write Set_adCurrency;
    property adPrice: Double read Get_adPrice write Set_adPrice;
    property adDiscPercent: Double read Get_adDiscPercent write Set_adDiscPercent;
    property adDiscValue: Double read Get_adDiscValue write Set_adDiscValue;
    property adMarkupMarginPercent: Double read Get_adMarkupMarginPercent write Set_adMarkupMarginPercent;
    property adStockCodeI: IStock read Get_adStockCodeI;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property adPriceBand: WideString read Get_adPriceBand write Set_adPriceBand;
    property adQtyBreaks: IQuantityBreak read Get_adQtyBreaks;
  end;

// *********************************************************************//
// DispIntf:  IAccountDiscountDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {463F7605-51FB-402E-A1C8-F6A08D9AE038}
// *********************************************************************//
  IAccountDiscountDisp = dispinterface
    ['{463F7605-51FB-402E-A1C8-F6A08D9AE038}']
    property adStockCode: WideString dispid 2;
    property adType: TDiscountType dispid 3;
    property adCurrency: Smallint dispid 4;
    property adPrice: Double dispid 5;
    property adDiscPercent: Double dispid 6;
    property adDiscValue: Double dispid 7;
    property adMarkupMarginPercent: Double dispid 8;
    property adStockCodeI: IStock readonly dispid 9;
    function BuildIndex(const StockCode: WideString; Currency: Smallint): WideString; dispid 10;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property adPriceBand: WideString dispid 11;
    function Add: IAccountDiscount; dispid 12;
    function Update: IAccountDiscount; dispid 13;
    function Clone: IAccountDiscount; dispid 14;
    function Save: Integer; dispid 15;
    procedure Cancel; dispid 16;
    property adQtyBreaks: IQuantityBreak readonly dispid 1;
  end;

// *********************************************************************//
// Interface: IEBusiness
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16CD7B55-6FC6-4B6D-A048-D84182FA60C2}
// *********************************************************************//
  IEBusiness = interface(IDispatch)
    ['{16CD7B55-6FC6-4B6D-A048-D84182FA60C2}']
  end;

// *********************************************************************//
// DispIntf:  IEBusinessDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16CD7B55-6FC6-4B6D-A048-D84182FA60C2}
// *********************************************************************//
  IEBusinessDisp = dispinterface
    ['{16CD7B55-6FC6-4B6D-A048-D84182FA60C2}']
  end;

// *********************************************************************//
// Interface: IQuantityBreak
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {277C5F20-B2B9-4E4C-8E40-B29E79E3A0CA}
// *********************************************************************//
  IQuantityBreak = interface(IDispatch)
    ['{277C5F20-B2B9-4E4C-8E40-B29E79E3A0CA}']
    function Get_qbQuantityFrom: Double; safecall;
    procedure Set_qbQuantityFrom(Value: Double); safecall;
    function Get_qbQuantityTo: Double; safecall;
    procedure Set_qbQuantityTo(Value: Double); safecall;
    function Get_qbType: TDiscountType; safecall;
    procedure Set_qbType(Value: TDiscountType); safecall;
    function Get_qbPrice: Double; safecall;
    procedure Set_qbPrice(Value: Double); safecall;
    function Get_qbDiscPercent: Double; safecall;
    procedure Set_qbDiscPercent(Value: Double); safecall;
    function Get_qbDiscValue: Double; safecall;
    procedure Set_qbDiscValue(Value: Double); safecall;
    function Get_qbMarkupMarginPercent: Double; safecall;
    procedure Set_qbMarkupMarginPercent(Value: Double); safecall;
    function Get_qbCurrency: Smallint; safecall;
    procedure Set_qbCurrency(Value: Smallint); safecall;
    function Get_qbPriceBand: WideString; safecall;
    procedure Set_qbPriceBand(const Value: WideString); safecall;
    function Add: IQuantityBreak; safecall;
    function Update: IQuantityBreak; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    property qbQuantityFrom: Double read Get_qbQuantityFrom write Set_qbQuantityFrom;
    property qbQuantityTo: Double read Get_qbQuantityTo write Set_qbQuantityTo;
    property qbType: TDiscountType read Get_qbType write Set_qbType;
    property qbPrice: Double read Get_qbPrice write Set_qbPrice;
    property qbDiscPercent: Double read Get_qbDiscPercent write Set_qbDiscPercent;
    property qbDiscValue: Double read Get_qbDiscValue write Set_qbDiscValue;
    property qbMarkupMarginPercent: Double read Get_qbMarkupMarginPercent write Set_qbMarkupMarginPercent;
    property qbCurrency: Smallint read Get_qbCurrency write Set_qbCurrency;
    property qbPriceBand: WideString read Get_qbPriceBand write Set_qbPriceBand;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  IQuantityBreakDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {277C5F20-B2B9-4E4C-8E40-B29E79E3A0CA}
// *********************************************************************//
  IQuantityBreakDisp = dispinterface
    ['{277C5F20-B2B9-4E4C-8E40-B29E79E3A0CA}']
    property qbQuantityFrom: Double dispid 1;
    property qbQuantityTo: Double dispid 2;
    property qbType: TDiscountType dispid 3;
    property qbPrice: Double dispid 5;
    property qbDiscPercent: Double dispid 6;
    property qbDiscValue: Double dispid 7;
    property qbMarkupMarginPercent: Double dispid 8;
    property qbCurrency: Smallint dispid 9;
    property qbPriceBand: WideString dispid 10;
    function Add: IQuantityBreak; dispid 11;
    function Update: IQuantityBreak; dispid 12;
    function Save: Integer; dispid 13;
    procedure Cancel; dispid 14;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
  end;

// *********************************************************************//
// Interface: ISystemSetupJob
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE599499-8EED-4E90-90C1-41C1FD75FE85}
// *********************************************************************//
  ISystemSetupJob = interface(IDispatch)
    ['{BE599499-8EED-4E90-90C1-41C1FD75FE85}']
    function Get_ssUsePPIsForTimeSheets: WordBool; safecall;
    function Get_ssSplitJobBudgetsByPeriod: WordBool; safecall;
    function Get_ssPPISupAccount: WideString; safecall;
    function Get_ssJobCategory(Index: TJobCategoryType): WideString; safecall;
    function Get_ssCheckJobBudget: WordBool; safecall;
    function Get_ssJobCostingGLCtrlCodes(Inde: TSystemSetupJobGLCtrlType): Integer; safecall;
    property ssUsePPIsForTimeSheets: WordBool read Get_ssUsePPIsForTimeSheets;
    property ssSplitJobBudgetsByPeriod: WordBool read Get_ssSplitJobBudgetsByPeriod;
    property ssPPISupAccount: WideString read Get_ssPPISupAccount;
    property ssJobCategory[Index: TJobCategoryType]: WideString read Get_ssJobCategory;
    property ssCheckJobBudget: WordBool read Get_ssCheckJobBudget;
    property ssJobCostingGLCtrlCodes[Inde: TSystemSetupJobGLCtrlType]: Integer read Get_ssJobCostingGLCtrlCodes;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupJobDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE599499-8EED-4E90-90C1-41C1FD75FE85}
// *********************************************************************//
  ISystemSetupJobDisp = dispinterface
    ['{BE599499-8EED-4E90-90C1-41C1FD75FE85}']
    property ssUsePPIsForTimeSheets: WordBool readonly dispid 109;
    property ssSplitJobBudgetsByPeriod: WordBool readonly dispid 110;
    property ssPPISupAccount: WideString readonly dispid 111;
    property ssJobCategory[Index: TJobCategoryType]: WideString readonly dispid 1;
    property ssCheckJobBudget: WordBool readonly dispid 82;
    property ssJobCostingGLCtrlCodes[Inde: TSystemSetupJobGLCtrlType]: Integer readonly dispid 2;
  end;

// *********************************************************************//
// Interface: ISystemSetupPaperless
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CF03F063-36B3-4597-A096-CF4BD270C621}
// *********************************************************************//
  ISystemSetupPaperless = interface(IDispatch)
    ['{CF03F063-36B3-4597-A096-CF4BD270C621}']
    function Get_ssYourEmailName: WideString; safecall;
    function Get_ssYourEmailAddress: WideString; safecall;
    function Get_ssSMTPServer: WideString; safecall;
    function Get_ssDefaultEmailPriority: TEmailPriority; safecall;
    function Get_ssEmailUseMAPI: WordBool; safecall;
    function Get_ssAttachMethod: TEmailAttachMethod; safecall;
    function Get_ssFaxFromName: WideString; safecall;
    function Get_ssFaxFromTelNo: WideString; safecall;
    function Get_ssFaxInterfacePath: WideString; safecall;
    function Get_ssFaxUsing: TFaxMethod; safecall;
    property ssYourEmailName: WideString read Get_ssYourEmailName;
    property ssYourEmailAddress: WideString read Get_ssYourEmailAddress;
    property ssSMTPServer: WideString read Get_ssSMTPServer;
    property ssDefaultEmailPriority: TEmailPriority read Get_ssDefaultEmailPriority;
    property ssEmailUseMAPI: WordBool read Get_ssEmailUseMAPI;
    property ssAttachMethod: TEmailAttachMethod read Get_ssAttachMethod;
    property ssFaxFromName: WideString read Get_ssFaxFromName;
    property ssFaxFromTelNo: WideString read Get_ssFaxFromTelNo;
    property ssFaxInterfacePath: WideString read Get_ssFaxInterfacePath;
    property ssFaxUsing: TFaxMethod read Get_ssFaxUsing;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupPaperlessDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CF03F063-36B3-4597-A096-CF4BD270C621}
// *********************************************************************//
  ISystemSetupPaperlessDisp = dispinterface
    ['{CF03F063-36B3-4597-A096-CF4BD270C621}']
    property ssYourEmailName: WideString readonly dispid 1;
    property ssYourEmailAddress: WideString readonly dispid 2;
    property ssSMTPServer: WideString readonly dispid 3;
    property ssDefaultEmailPriority: TEmailPriority readonly dispid 4;
    property ssEmailUseMAPI: WordBool readonly dispid 5;
    property ssAttachMethod: TEmailAttachMethod readonly dispid 6;
    property ssFaxFromName: WideString readonly dispid 7;
    property ssFaxFromTelNo: WideString readonly dispid 8;
    property ssFaxInterfacePath: WideString readonly dispid 9;
    property ssFaxUsing: TFaxMethod readonly dispid 10;
  end;

// *********************************************************************//
// Interface: IJobType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01F1A7A1-2CEB-4477-B806-6DCDEE371752}
// *********************************************************************//
  IJobType = interface(IDispatch)
    ['{01F1A7A1-2CEB-4477-B806-6DCDEE371752}']
    function Get_jtCode: WideString; safecall;
    procedure Set_jtCode(const Value: WideString); safecall;
    function Get_jtName: WideString; safecall;
    procedure Set_jtName(const Value: WideString); safecall;
    function Get_Index: TJobTypeIndex; safecall;
    procedure Set_Index(Value: TJobTypeIndex); safecall;
    function Clone: IJobType; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function BuildCodeIndex(const Code: WideString): WideString; safecall;
    function BuildNameIndex(const Name: WideString): WideString; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function RestorePosition: Integer; safecall;
    property jtCode: WideString read Get_jtCode write Set_jtCode;
    property jtName: WideString read Get_jtName write Set_jtName;
    property Index: TJobTypeIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  IJobTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01F1A7A1-2CEB-4477-B806-6DCDEE371752}
// *********************************************************************//
  IJobTypeDisp = dispinterface
    ['{01F1A7A1-2CEB-4477-B806-6DCDEE371752}']
    property jtCode: WideString dispid 1;
    property jtName: WideString dispid 2;
    property Index: TJobTypeIndex dispid 3;
    function Clone: IJobType; dispid 4;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 5;
    function BuildNameIndex(const Name: WideString): WideString; dispid 6;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function RestorePosition: Integer; dispid 16777225;
  end;

// *********************************************************************//
// Interface: IJobAnalysis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7B224B8-9631-487B-9950-EBF3D3C5779A}
// *********************************************************************//
  IJobAnalysis = interface(IDispatch)
    ['{E7B224B8-9631-487B-9950-EBF3D3C5779A}']
    function Get_anCode: WideString; safecall;
    procedure Set_anCode(const Value: WideString); safecall;
    function Get_anDescription: WideString; safecall;
    procedure Set_anDescription(const Value: WideString); safecall;
    function Get_anType: TAnalysisType; safecall;
    procedure Set_anType(Value: TAnalysisType); safecall;
    function Get_anCategory: TAnalysisCategory; safecall;
    procedure Set_anCategory(Value: TAnalysisCategory); safecall;
    function Get_anWIPGL: Integer; safecall;
    procedure Set_anWIPGL(Value: Integer); safecall;
    function Get_anPandLGL: Integer; safecall;
    procedure Set_anPandLGL(Value: Integer); safecall;
    function Get_anLineType: TTransactionLineType; safecall;
    procedure Set_anLineType(Value: TTransactionLineType); safecall;
    function Get_Index: TJobAnalysisIndex; safecall;
    procedure Set_Index(Value: TJobAnalysisIndex); safecall;
    function Clone: IJobAnalysis; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function BuildCodeIndex(const Code: WideString): WideString; safecall;
    function BuildDescriptionIndex(const Description: WideString): WideString; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_anTypeString: WideString; safecall;
    function Get_anCategoryString: WideString; safecall;
    function Get_anLineTypeString: WideString; safecall;
    property anCode: WideString read Get_anCode write Set_anCode;
    property anDescription: WideString read Get_anDescription write Set_anDescription;
    property anType: TAnalysisType read Get_anType write Set_anType;
    property anCategory: TAnalysisCategory read Get_anCategory write Set_anCategory;
    property anWIPGL: Integer read Get_anWIPGL write Set_anWIPGL;
    property anPandLGL: Integer read Get_anPandLGL write Set_anPandLGL;
    property anLineType: TTransactionLineType read Get_anLineType write Set_anLineType;
    property Index: TJobAnalysisIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property anTypeString: WideString read Get_anTypeString;
    property anCategoryString: WideString read Get_anCategoryString;
    property anLineTypeString: WideString read Get_anLineTypeString;
  end;

// *********************************************************************//
// DispIntf:  IJobAnalysisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7B224B8-9631-487B-9950-EBF3D3C5779A}
// *********************************************************************//
  IJobAnalysisDisp = dispinterface
    ['{E7B224B8-9631-487B-9950-EBF3D3C5779A}']
    property anCode: WideString dispid 1;
    property anDescription: WideString dispid 2;
    property anType: TAnalysisType dispid 3;
    property anCategory: TAnalysisCategory dispid 4;
    property anWIPGL: Integer dispid 5;
    property anPandLGL: Integer dispid 6;
    property anLineType: TTransactionLineType dispid 7;
    property Index: TJobAnalysisIndex dispid 8;
    function Clone: IJobAnalysis; dispid 9;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 10;
    function BuildDescriptionIndex(const Description: WideString): WideString; dispid 11;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property anTypeString: WideString readonly dispid 12;
    property anCategoryString: WideString readonly dispid 13;
    property anLineTypeString: WideString readonly dispid 14;
  end;

// *********************************************************************//
// Interface: IStockBOMComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB1C0CD3-C7D7-4068-81DA-99ACC73234F3}
// *********************************************************************//
  IStockBOMComponent = interface(IDispatch)
    ['{DB1C0CD3-C7D7-4068-81DA-99ACC73234F3}']
    function Get_bmStockCode: WideString; safecall;
    function Get_bmStockCodeI: IStock; safecall;
    function Get_bmQuantityUsed: Double; safecall;
    function Get_bmUnitCost: Double; safecall;
    function Get_bmUnitCostCurrency: Smallint; safecall;
    property bmStockCode: WideString read Get_bmStockCode;
    property bmStockCodeI: IStock read Get_bmStockCodeI;
    property bmQuantityUsed: Double read Get_bmQuantityUsed;
    property bmUnitCost: Double read Get_bmUnitCost;
    property bmUnitCostCurrency: Smallint read Get_bmUnitCostCurrency;
  end;

// *********************************************************************//
// DispIntf:  IStockBOMComponentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB1C0CD3-C7D7-4068-81DA-99ACC73234F3}
// *********************************************************************//
  IStockBOMComponentDisp = dispinterface
    ['{DB1C0CD3-C7D7-4068-81DA-99ACC73234F3}']
    property bmStockCode: WideString readonly dispid 1;
    property bmStockCodeI: IStock readonly dispid 2;
    property bmQuantityUsed: Double readonly dispid 3;
    property bmUnitCost: Double readonly dispid 4;
    property bmUnitCostCurrency: Smallint readonly dispid 5;
  end;

// *********************************************************************//
// Interface: IStockBOMList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23C532DC-E126-4029-8765-F26343634962}
// *********************************************************************//
  IStockBOMList = interface(IDispatch)
    ['{23C532DC-E126-4029-8765-F26343634962}']
    function Get_blComponentCount: Integer; safecall;
    function Get_blComponent(Index: Integer): IStockBOMComponent; safecall;
    procedure AddComponent(const StockCode: WideString; QuantityUsed: Double); safecall;
    procedure EditComponent(Index: Integer; const StockCode: WideString; QuantityUsed: Double); safecall;
    procedure InsertComponent(Index: Integer; const StockCode: WideString; QuantityUsed: Double); safecall;
    procedure DeleteComponent(Index: Integer); safecall;
    procedure SwitchComponents(Index1: Integer; Index2: Integer); safecall;
    procedure CheckComponentCosts; safecall;
    property blComponentCount: Integer read Get_blComponentCount;
    property blComponent[Index: Integer]: IStockBOMComponent read Get_blComponent;
  end;

// *********************************************************************//
// DispIntf:  IStockBOMListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23C532DC-E126-4029-8765-F26343634962}
// *********************************************************************//
  IStockBOMListDisp = dispinterface
    ['{23C532DC-E126-4029-8765-F26343634962}']
    property blComponentCount: Integer readonly dispid 1;
    property blComponent[Index: Integer]: IStockBOMComponent readonly dispid 2;
    procedure AddComponent(const StockCode: WideString; QuantityUsed: Double); dispid 3;
    procedure EditComponent(Index: Integer; const StockCode: WideString; QuantityUsed: Double); dispid 4;
    procedure InsertComponent(Index: Integer; const StockCode: WideString; QuantityUsed: Double); dispid 5;
    procedure DeleteComponent(Index: Integer); dispid 6;
    procedure SwitchComponents(Index1: Integer; Index2: Integer); dispid 7;
    procedure CheckComponentCosts; dispid 8;
  end;

// *********************************************************************//
// Interface: IStockWhereUsed
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9B7239B-E3F3-4198-A5FE-DFEB22F911B4}
// *********************************************************************//
  IStockWhereUsed = interface(IStockBOMComponent)
    ['{E9B7239B-E3F3-4198-A5FE-DFEB22F911B4}']
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  IStockWhereUsedDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9B7239B-E3F3-4198-A5FE-DFEB22F911B4}
// *********************************************************************//
  IStockWhereUsedDisp = dispinterface
    ['{E9B7239B-E3F3-4198-A5FE-DFEB22F911B4}']
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    property bmStockCode: WideString readonly dispid 1;
    property bmStockCodeI: IStock readonly dispid 2;
    property bmQuantityUsed: Double readonly dispid 3;
    property bmUnitCost: Double readonly dispid 4;
    property bmUnitCostCurrency: Smallint readonly dispid 5;
  end;

// *********************************************************************//
// Interface: IEmployee
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12563BD3-8614-499E-A169-D4585CEB98D7}
// *********************************************************************//
  IEmployee = interface(IDispatch)
    ['{12563BD3-8614-499E-A169-D4585CEB98D7}']
    function Get_emCode: WideString; safecall;
    procedure Set_emCode(const Value: WideString); safecall;
    function Get_emSupplier: WideString; safecall;
    procedure Set_emSupplier(const Value: WideString); safecall;
    function Get_emName: WideString; safecall;
    procedure Set_emName(const Value: WideString); safecall;
    function Get_emAddress: IAddress; safecall;
    function Get_emPhone: WideString; safecall;
    procedure Set_emPhone(const Value: WideString); safecall;
    function Get_emFax: WideString; safecall;
    procedure Set_emFax(const Value: WideString); safecall;
    function Get_emMobile: WideString; safecall;
    procedure Set_emMobile(const Value: WideString); safecall;
    function Get_emType: TEmployeeType; safecall;
    procedure Set_emType(Value: TEmployeeType); safecall;
    function Get_emPayrollNumber: WideString; safecall;
    procedure Set_emPayrollNumber(const Value: WideString); safecall;
    function Get_emCertificateNumber: WideString; safecall;
    procedure Set_emCertificateNumber(const Value: WideString); safecall;
    function Get_emCertificateExpiry: WideString; safecall;
    procedure Set_emCertificateExpiry(const Value: WideString); safecall;
    function Get_emUserField1: WideString; safecall;
    procedure Set_emUserField1(const Value: WideString); safecall;
    function Get_emUserField2: WideString; safecall;
    procedure Set_emUserField2(const Value: WideString); safecall;
    function Get_emTimeRates: ITimeRates; safecall;
    function Get_emCostCentre: WideString; safecall;
    procedure Set_emCostCentre(const Value: WideString); safecall;
    function Get_emDepartment: WideString; safecall;
    procedure Set_emDepartment(const Value: WideString); safecall;
    function Get_emOwnTimeRatesOnly: WordBool; safecall;
    procedure Set_emOwnTimeRatesOnly(Value: WordBool); safecall;
    function Clone: IEmployee; safecall;
    function BuildCodeIndex(const Code: WideString): WideString; safecall;
    function BuildSupplierIndex(const Supplier: WideString): WideString; safecall;
    function Get_Index: TEmployeeIndex; safecall;
    procedure Set_Index(Value: TEmployeeIndex); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_Position: Integer; safecall;
    function Get_emNotes: INotes; safecall;
    property emCode: WideString read Get_emCode write Set_emCode;
    property emSupplier: WideString read Get_emSupplier write Set_emSupplier;
    property emName: WideString read Get_emName write Set_emName;
    property emAddress: IAddress read Get_emAddress;
    property emPhone: WideString read Get_emPhone write Set_emPhone;
    property emFax: WideString read Get_emFax write Set_emFax;
    property emMobile: WideString read Get_emMobile write Set_emMobile;
    property emType: TEmployeeType read Get_emType write Set_emType;
    property emPayrollNumber: WideString read Get_emPayrollNumber write Set_emPayrollNumber;
    property emCertificateNumber: WideString read Get_emCertificateNumber write Set_emCertificateNumber;
    property emCertificateExpiry: WideString read Get_emCertificateExpiry write Set_emCertificateExpiry;
    property emUserField1: WideString read Get_emUserField1 write Set_emUserField1;
    property emUserField2: WideString read Get_emUserField2 write Set_emUserField2;
    property emTimeRates: ITimeRates read Get_emTimeRates;
    property emCostCentre: WideString read Get_emCostCentre write Set_emCostCentre;
    property emDepartment: WideString read Get_emDepartment write Set_emDepartment;
    property emOwnTimeRatesOnly: WordBool read Get_emOwnTimeRatesOnly write Set_emOwnTimeRatesOnly;
    property Index: TEmployeeIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property emNotes: INotes read Get_emNotes;
  end;

// *********************************************************************//
// DispIntf:  IEmployeeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12563BD3-8614-499E-A169-D4585CEB98D7}
// *********************************************************************//
  IEmployeeDisp = dispinterface
    ['{12563BD3-8614-499E-A169-D4585CEB98D7}']
    property emCode: WideString dispid 1;
    property emSupplier: WideString dispid 2;
    property emName: WideString dispid 3;
    property emAddress: IAddress readonly dispid 4;
    property emPhone: WideString dispid 5;
    property emFax: WideString dispid 6;
    property emMobile: WideString dispid 7;
    property emType: TEmployeeType dispid 8;
    property emPayrollNumber: WideString dispid 9;
    property emCertificateNumber: WideString dispid 10;
    property emCertificateExpiry: WideString dispid 11;
    property emUserField1: WideString dispid 12;
    property emUserField2: WideString dispid 13;
    property emTimeRates: ITimeRates readonly dispid 14;
    property emCostCentre: WideString dispid 15;
    property emDepartment: WideString dispid 16;
    property emOwnTimeRatesOnly: WordBool dispid 17;
    function Clone: IEmployee; dispid 18;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 19;
    function BuildSupplierIndex(const Supplier: WideString): WideString; dispid 20;
    property Index: TEmployeeIndex dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property emNotes: INotes readonly dispid 22;
  end;

// *********************************************************************//
// Interface: ITimeRates
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {522FC7A9-545B-43CB-B972-4AC6F10FC890}
// *********************************************************************//
  ITimeRates = interface(IDispatch)
    ['{522FC7A9-545B-43CB-B972-4AC6F10FC890}']
    function Get_trRateCode: WideString; safecall;
    procedure Set_trRateCode(const Value: WideString); safecall;
    function Get_trEmployeeCode: WideString; safecall;
    procedure Set_trEmployeeCode(const Value: WideString); safecall;
    function Get_trCostCurrency: Smallint; safecall;
    procedure Set_trCostCurrency(Value: Smallint); safecall;
    function Get_trTimeCost: Double; safecall;
    procedure Set_trTimeCost(Value: Double); safecall;
    function Get_trChargeCurrency: Smallint; safecall;
    procedure Set_trChargeCurrency(Value: Smallint); safecall;
    function Get_trTimeCharge: Double; safecall;
    procedure Set_trTimeCharge(Value: Double); safecall;
    function Get_trAnalysisCode: WideString; safecall;
    procedure Set_trAnalysisCode(const Value: WideString); safecall;
    function Get_trPayrollCode: Integer; safecall;
    procedure Set_trPayrollCode(Value: Integer); safecall;
    function Get_trDescription: WideString; safecall;
    procedure Set_trDescription(const Value: WideString); safecall;
    function Clone: ITimeRates; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_trPayFactor: Smallint; safecall;
    procedure Set_trPayFactor(Value: Smallint); safecall;
    function Get_trPayRate: Smallint; safecall;
    procedure Set_trPayRate(Value: Smallint); safecall;
    property trRateCode: WideString read Get_trRateCode write Set_trRateCode;
    property trEmployeeCode: WideString read Get_trEmployeeCode write Set_trEmployeeCode;
    property trCostCurrency: Smallint read Get_trCostCurrency write Set_trCostCurrency;
    property trTimeCost: Double read Get_trTimeCost write Set_trTimeCost;
    property trChargeCurrency: Smallint read Get_trChargeCurrency write Set_trChargeCurrency;
    property trTimeCharge: Double read Get_trTimeCharge write Set_trTimeCharge;
    property trAnalysisCode: WideString read Get_trAnalysisCode write Set_trAnalysisCode;
    property trPayrollCode: Integer read Get_trPayrollCode write Set_trPayrollCode;
    property trDescription: WideString read Get_trDescription write Set_trDescription;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property trPayFactor: Smallint read Get_trPayFactor write Set_trPayFactor;
    property trPayRate: Smallint read Get_trPayRate write Set_trPayRate;
  end;

// *********************************************************************//
// DispIntf:  ITimeRatesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {522FC7A9-545B-43CB-B972-4AC6F10FC890}
// *********************************************************************//
  ITimeRatesDisp = dispinterface
    ['{522FC7A9-545B-43CB-B972-4AC6F10FC890}']
    property trRateCode: WideString dispid 7;
    property trEmployeeCode: WideString dispid 6;
    property trCostCurrency: Smallint dispid 9;
    property trTimeCost: Double dispid 2;
    property trChargeCurrency: Smallint dispid 10;
    property trTimeCharge: Double dispid 3;
    property trAnalysisCode: WideString dispid 4;
    property trPayrollCode: Integer dispid 5;
    property trDescription: WideString dispid 8;
    function Clone: ITimeRates; dispid 11;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property trPayFactor: Smallint dispid 14;
    property trPayRate: Smallint dispid 15;
  end;

// *********************************************************************//
// Interface: ISerialBatchDetails
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11104531-9C20-489B-9C26-C0FB0BD3E842}
// *********************************************************************//
  ISerialBatchDetails = interface(IDispatch)
    ['{11104531-9C20-489B-9C26-C0FB0BD3E842}']
    function Get_snSerialNo: WideString; safecall;
    procedure Set_snSerialNo(const Value: WideString); safecall;
    function Get_snBatchNo: WideString; safecall;
    procedure Set_snBatchNo(const Value: WideString); safecall;
    function Get_snType: TSerialBatchType; safecall;
    procedure Set_snSold(Value: WordBool); safecall;
    function Get_snSold: WordBool; safecall;
    function Get_snUseByDate: WideString; safecall;
    procedure Set_snUseByDate(const Value: WideString); safecall;
    procedure Set_snInDate(const Value: WideString); safecall;
    function Get_snInDate: WideString; safecall;
    function Get_snInOrderRef: WideString; safecall;
    procedure Set_snInOrderRef(const Value: WideString); safecall;
    function Get_snInOrderLine: Integer; safecall;
    procedure Set_snInOrderLine(Value: Integer); safecall;
    function Get_snInDocRef: WideString; safecall;
    procedure Set_snInDocRef(const Value: WideString); safecall;
    function Get_snInDocLine: Integer; safecall;
    procedure Set_snInDocLine(Value: Integer); safecall;
    function Get_snInLocation: WideString; safecall;
    procedure Set_snInLocation(const Value: WideString); safecall;
    procedure Set_snOutDate(const Value: WideString); safecall;
    function Get_snOutDate: WideString; safecall;
    function Get_snOutOrderRef: WideString; safecall;
    procedure Set_snOutOrderRef(const Value: WideString); safecall;
    function Get_snOutOrderLine: Integer; safecall;
    procedure Set_snOutOrderLine(Value: Integer); safecall;
    function Get_snOutDocRef: WideString; safecall;
    procedure Set_snOutDocRef(const Value: WideString); safecall;
    function Get_snOutDocLine: Integer; safecall;
    procedure Set_snOutDocLine(Value: Integer); safecall;
    function Get_snOutLocation: WideString; safecall;
    procedure Set_snOutLocation(const Value: WideString); safecall;
    function Get_snCostPrice: Double; safecall;
    procedure Set_snCostPrice(Value: Double); safecall;
    function Get_snCostPriceCurrency: Smallint; safecall;
    procedure Set_snCostPriceCurrency(Value: Smallint); safecall;
    function Get_snSalesPrice: Double; safecall;
    procedure Set_snSalesPrice(Value: Double); safecall;
    function Get_snSalesPriceCurrency: Smallint; safecall;
    procedure Set_snSalesPriceCurrency(Value: Smallint); safecall;
    function Get_snBatchQuantity: Double; safecall;
    procedure Set_snBatchQuantity(Value: Double); safecall;
    function Get_snBatchQuantitySold: Double; safecall;
    procedure Set_snBatchQuantitySold(Value: Double); safecall;
    function Get_snDailyRate: Double; safecall;
    procedure Set_snDailyRate(Value: Double); safecall;
    function Get_snCompanyRate: Double; safecall;
    procedure Set_snCompanyRate(Value: Double); safecall;
    function Get_snNotes: INotes; safecall;
    property snSerialNo: WideString read Get_snSerialNo write Set_snSerialNo;
    property snBatchNo: WideString read Get_snBatchNo write Set_snBatchNo;
    property snType: TSerialBatchType read Get_snType;
    property snSold: WordBool read Get_snSold write Set_snSold;
    property snUseByDate: WideString read Get_snUseByDate write Set_snUseByDate;
    property snInDate: WideString read Get_snInDate write Set_snInDate;
    property snInOrderRef: WideString read Get_snInOrderRef write Set_snInOrderRef;
    property snInOrderLine: Integer read Get_snInOrderLine write Set_snInOrderLine;
    property snInDocRef: WideString read Get_snInDocRef write Set_snInDocRef;
    property snInDocLine: Integer read Get_snInDocLine write Set_snInDocLine;
    property snInLocation: WideString read Get_snInLocation write Set_snInLocation;
    property snOutDate: WideString read Get_snOutDate write Set_snOutDate;
    property snOutOrderRef: WideString read Get_snOutOrderRef write Set_snOutOrderRef;
    property snOutOrderLine: Integer read Get_snOutOrderLine write Set_snOutOrderLine;
    property snOutDocRef: WideString read Get_snOutDocRef write Set_snOutDocRef;
    property snOutDocLine: Integer read Get_snOutDocLine write Set_snOutDocLine;
    property snOutLocation: WideString read Get_snOutLocation write Set_snOutLocation;
    property snCostPrice: Double read Get_snCostPrice write Set_snCostPrice;
    property snCostPriceCurrency: Smallint read Get_snCostPriceCurrency write Set_snCostPriceCurrency;
    property snSalesPrice: Double read Get_snSalesPrice write Set_snSalesPrice;
    property snSalesPriceCurrency: Smallint read Get_snSalesPriceCurrency write Set_snSalesPriceCurrency;
    property snBatchQuantity: Double read Get_snBatchQuantity write Set_snBatchQuantity;
    property snBatchQuantitySold: Double read Get_snBatchQuantitySold write Set_snBatchQuantitySold;
    property snDailyRate: Double read Get_snDailyRate write Set_snDailyRate;
    property snCompanyRate: Double read Get_snCompanyRate write Set_snCompanyRate;
    property snNotes: INotes read Get_snNotes;
  end;

// *********************************************************************//
// DispIntf:  ISerialBatchDetailsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11104531-9C20-489B-9C26-C0FB0BD3E842}
// *********************************************************************//
  ISerialBatchDetailsDisp = dispinterface
    ['{11104531-9C20-489B-9C26-C0FB0BD3E842}']
    property snSerialNo: WideString dispid 1;
    property snBatchNo: WideString dispid 2;
    property snType: TSerialBatchType readonly dispid 3;
    property snSold: WordBool dispid 4;
    property snUseByDate: WideString dispid 5;
    property snInDate: WideString dispid 9;
    property snInOrderRef: WideString dispid 10;
    property snInOrderLine: Integer dispid 11;
    property snInDocRef: WideString dispid 12;
    property snInDocLine: Integer dispid 13;
    property snInLocation: WideString dispid 14;
    property snOutDate: WideString dispid 21;
    property snOutOrderRef: WideString dispid 22;
    property snOutOrderLine: Integer dispid 23;
    property snOutDocRef: WideString dispid 24;
    property snOutDocLine: Integer dispid 25;
    property snOutLocation: WideString dispid 26;
    property snCostPrice: Double dispid 27;
    property snCostPriceCurrency: Smallint dispid 28;
    property snSalesPrice: Double dispid 29;
    property snSalesPriceCurrency: Smallint dispid 30;
    property snBatchQuantity: Double dispid 31;
    property snBatchQuantitySold: Double dispid 32;
    property snDailyRate: Double dispid 33;
    property snCompanyRate: Double dispid 34;
    property snNotes: INotes readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ISerialBatch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44C60D73-2561-41C6-98B2-AE059CA01706}
// *********************************************************************//
  ISerialBatch = interface(ISerialBatchDetails)
    ['{44C60D73-2561-41C6-98B2-AE059CA01706}']
    function BuildUsedSerialIndex(Sold: WordBool; const SerialNo: WideString): WideString; safecall;
    function Add: ISerialBatch; safecall;
    function Clone: ISerialBatch; safecall;
    function Save: Integer; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function BuildSerialIndex(const SerialNo: WideString): WideString; safecall;
    function BuildBatchIndex(const BatchNo: WideString): WideString; safecall;
    function Get_Index: TSerialBatchIndex; safecall;
    procedure Set_Index(Value: TSerialBatchIndex); safecall;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property Index: TSerialBatchIndex read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  ISerialBatchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44C60D73-2561-41C6-98B2-AE059CA01706}
// *********************************************************************//
  ISerialBatchDisp = dispinterface
    ['{44C60D73-2561-41C6-98B2-AE059CA01706}']
    function BuildUsedSerialIndex(Sold: WordBool; const SerialNo: WideString): WideString; dispid 257;
    function Add: ISerialBatch; dispid 258;
    function Clone: ISerialBatch; dispid 260;
    function Save: Integer; dispid 261;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildSerialIndex(const SerialNo: WideString): WideString; dispid 6;
    function BuildBatchIndex(const BatchNo: WideString): WideString; dispid 7;
    property Index: TSerialBatchIndex dispid 8;
    property snSerialNo: WideString dispid 1;
    property snBatchNo: WideString dispid 2;
    property snType: TSerialBatchType readonly dispid 3;
    property snSold: WordBool dispid 4;
    property snUseByDate: WideString dispid 5;
    property snInDate: WideString dispid 9;
    property snInOrderRef: WideString dispid 10;
    property snInOrderLine: Integer dispid 11;
    property snInDocRef: WideString dispid 12;
    property snInDocLine: Integer dispid 13;
    property snInLocation: WideString dispid 14;
    property snOutDate: WideString dispid 21;
    property snOutOrderRef: WideString dispid 22;
    property snOutOrderLine: Integer dispid 23;
    property snOutDocRef: WideString dispid 24;
    property snOutDocLine: Integer dispid 25;
    property snOutLocation: WideString dispid 26;
    property snCostPrice: Double dispid 27;
    property snCostPriceCurrency: Smallint dispid 28;
    property snSalesPrice: Double dispid 29;
    property snSalesPriceCurrency: Smallint dispid 30;
    property snBatchQuantity: Double dispid 31;
    property snBatchQuantitySold: Double dispid 32;
    property snDailyRate: Double dispid 33;
    property snCompanyRate: Double dispid 34;
    property snNotes: INotes readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ITransactionLineSerialBatch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB085D2B-E65B-4F4F-8ABC-D21EA001665C}
// *********************************************************************//
  ITransactionLineSerialBatch = interface(IDispatch)
    ['{BB085D2B-E65B-4F4F-8ABC-D21EA001665C}']
    function Get_tlCount: Integer; safecall;
    function Get_tlUsedSerialBatch(Index: Integer): ISerialBatchDetails; safecall;
    function Get_tlUsesSerialBatchNo: WordBool; safecall;
    function Add: ISerialBatch; safecall;
    procedure Refresh; safecall;
    function UseSerialBatch(const SerialBatch: ISerialBatchDetails): Integer; safecall;
    property tlCount: Integer read Get_tlCount;
    property tlUsedSerialBatch[Index: Integer]: ISerialBatchDetails read Get_tlUsedSerialBatch;
    property tlUsesSerialBatchNo: WordBool read Get_tlUsesSerialBatchNo;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineSerialBatchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB085D2B-E65B-4F4F-8ABC-D21EA001665C}
// *********************************************************************//
  ITransactionLineSerialBatchDisp = dispinterface
    ['{BB085D2B-E65B-4F4F-8ABC-D21EA001665C}']
    property tlCount: Integer readonly dispid 1;
    property tlUsedSerialBatch[Index: Integer]: ISerialBatchDetails readonly dispid 2;
    property tlUsesSerialBatchNo: WordBool readonly dispid 3;
    function Add: ISerialBatch; dispid 4;
    procedure Refresh; dispid 6;
    function UseSerialBatch(const SerialBatch: ISerialBatchDetails): Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: IInternalDebug
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D80E6678-58E8-497C-BE9C-C43F51683966}
// *********************************************************************//
  IInternalDebug = interface(IDispatch)
    ['{D80E6678-58E8-497C-BE9C-C43F51683966}']
    function SetDebugMode(Param1: Integer; Param2: Integer; Param3: Integer): OleVariant; safecall;
  end;

// *********************************************************************//
// DispIntf:  IInternalDebugDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D80E6678-58E8-497C-BE9C-C43F51683966}
// *********************************************************************//
  IInternalDebugDisp = dispinterface
    ['{D80E6678-58E8-497C-BE9C-C43F51683966}']
    function SetDebugMode(Param1: Integer; Param2: Integer; Param3: Integer): OleVariant; dispid 1;
  end;

// *********************************************************************//
// Interface: IUserProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6985BD33-BF1C-4D90-859E-BFD054D33A10}
// *********************************************************************//
  IUserProfile = interface(IDispatch)
    ['{6985BD33-BF1C-4D90-859E-BFD054D33A10}']
    function Get_Index: TUserIndexType; safecall;
    procedure Set_Index(Value: TUserIndexType); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function BuildUserIDIndex(const UserID: WideString): WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_upUserID: WideString; safecall;
    function Get_upName: WideString; safecall;
    function Get_upPWordExpiryMode: TPasswordExpiryType; safecall;
    function Get_upPWordExpiryDays: Integer; safecall;
    function Get_upPWordExpiryDate: WideString; safecall;
    function Get_upLockOutMins: Integer; safecall;
    function Get_upEmail: WideString; safecall;
    function Get_upDefSRICust: WideString; safecall;
    function Get_upDefPPISupp: WideString; safecall;
    function Get_upMaxSalesAuth: Double; safecall;
    function Get_upMaxPurchAuth: Double; safecall;
    function Get_upDefSalesBankGL: Integer; safecall;
    function Get_upDefPurchBankGL: Integer; safecall;
    function Get_upReportPrinter: WideString; safecall;
    function Get_upFormPrinter: WideString; safecall;
    function Get_upEmailSignature: WideString; safecall;
    function Get_upFaxSignature: WideString; safecall;
    function Get_upCCDeptRule: TPriorityRuleType; safecall;
    function Get_upDefCostCentre: WideString; safecall;
    function Get_upDefDepartment: WideString; safecall;
    function Get_upDefLocation: WideString; safecall;
    function Get_upDefLocRule: TPriorityRuleType; safecall;
    function Get_upSecurityFlags(Index: Integer): TSecurityResultType; safecall;
    function Clone: IUserProfile; safecall;
    property Index: TUserIndexType read Get_Index write Set_Index;
    property Position: Integer read Get_Position write Set_Position;
    property KeyString: WideString read Get_KeyString;
    property upUserID: WideString read Get_upUserID;
    property upName: WideString read Get_upName;
    property upPWordExpiryMode: TPasswordExpiryType read Get_upPWordExpiryMode;
    property upPWordExpiryDays: Integer read Get_upPWordExpiryDays;
    property upPWordExpiryDate: WideString read Get_upPWordExpiryDate;
    property upLockOutMins: Integer read Get_upLockOutMins;
    property upEmail: WideString read Get_upEmail;
    property upDefSRICust: WideString read Get_upDefSRICust;
    property upDefPPISupp: WideString read Get_upDefPPISupp;
    property upMaxSalesAuth: Double read Get_upMaxSalesAuth;
    property upMaxPurchAuth: Double read Get_upMaxPurchAuth;
    property upDefSalesBankGL: Integer read Get_upDefSalesBankGL;
    property upDefPurchBankGL: Integer read Get_upDefPurchBankGL;
    property upReportPrinter: WideString read Get_upReportPrinter;
    property upFormPrinter: WideString read Get_upFormPrinter;
    property upEmailSignature: WideString read Get_upEmailSignature;
    property upFaxSignature: WideString read Get_upFaxSignature;
    property upCCDeptRule: TPriorityRuleType read Get_upCCDeptRule;
    property upDefCostCentre: WideString read Get_upDefCostCentre;
    property upDefDepartment: WideString read Get_upDefDepartment;
    property upDefLocation: WideString read Get_upDefLocation;
    property upDefLocRule: TPriorityRuleType read Get_upDefLocRule;
    property upSecurityFlags[Index: Integer]: TSecurityResultType read Get_upSecurityFlags;
  end;

// *********************************************************************//
// DispIntf:  IUserProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6985BD33-BF1C-4D90-859E-BFD054D33A10}
// *********************************************************************//
  IUserProfileDisp = dispinterface
    ['{6985BD33-BF1C-4D90-859E-BFD054D33A10}']
    property Index: TUserIndexType dispid 20;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildUserIDIndex(const UserID: WideString): WideString; dispid 21;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    property KeyString: WideString readonly dispid 16777222;
    property upUserID: WideString readonly dispid 1;
    property upName: WideString readonly dispid 2;
    property upPWordExpiryMode: TPasswordExpiryType readonly dispid 4;
    property upPWordExpiryDays: Integer readonly dispid 5;
    property upPWordExpiryDate: WideString readonly dispid 6;
    property upLockOutMins: Integer readonly dispid 7;
    property upEmail: WideString readonly dispid 8;
    property upDefSRICust: WideString readonly dispid 26;
    property upDefPPISupp: WideString readonly dispid 27;
    property upMaxSalesAuth: Double readonly dispid 28;
    property upMaxPurchAuth: Double readonly dispid 29;
    property upDefSalesBankGL: Integer readonly dispid 30;
    property upDefPurchBankGL: Integer readonly dispid 31;
    property upReportPrinter: WideString readonly dispid 32;
    property upFormPrinter: WideString readonly dispid 33;
    property upEmailSignature: WideString readonly dispid 34;
    property upFaxSignature: WideString readonly dispid 35;
    property upCCDeptRule: TPriorityRuleType readonly dispid 36;
    property upDefCostCentre: WideString readonly dispid 37;
    property upDefDepartment: WideString readonly dispid 38;
    property upDefLocation: WideString readonly dispid 39;
    property upDefLocRule: TPriorityRuleType readonly dispid 40;
    property upSecurityFlags[Index: Integer]: TSecurityResultType readonly dispid 41;
    function Clone: IUserProfile; dispid 3;
  end;

// *********************************************************************//
// Interface: IToolkit3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F238C12-DBB7-4580-9C58-BCF5B25BDA5F}
// *********************************************************************//
  IToolkit3 = interface(IToolkit2)
    ['{6F238C12-DBB7-4580-9C58-BCF5B25BDA5F}']
    function Get_Banking: IBanking; safecall;
    property Banking: IBanking read Get_Banking;
  end;

// *********************************************************************//
// DispIntf:  IToolkit3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F238C12-DBB7-4580-9C58-BCF5B25BDA5F}
// *********************************************************************//
  IToolkit3Disp = dispinterface
    ['{6F238C12-DBB7-4580-9C58-BCF5B25BDA5F}']
    property Banking: IBanking readonly dispid 24;
    property UserProfile: IUserProfile readonly dispid 21;
    property TransactionDetails: ITransactionDetails readonly dispid 22;
    property SystemProcesses: ISystemProcesses readonly dispid 23;
    function CloseToolkit: Integer; dispid 1;
    property Company: ICompanyManager readonly dispid 2;
    property Configuration: IConfiguration readonly dispid 3;
    property CostCentre: ICCDept readonly dispid 4;
    property Customer: IAccount readonly dispid 5;
    property Department: ICCDept readonly dispid 6;
    property eBusiness: IEBusiness readonly dispid 7;
    property Enterprise: IEnterprise readonly dispid 8;
    property Functions: IFunctions readonly dispid 9;
    property GeneralLedger: IGeneralLedger readonly dispid 10;
    property JobCosting: IJobCosting readonly dispid 11;
    property LastErrorString: WideString readonly dispid 12;
    property Location: ILocation readonly dispid 13;
    function OpenToolkit: Integer; dispid 14;
    property Status: TToolkitStatus readonly dispid 15;
    property Stock: IStock readonly dispid 16;
    property Supplier: IAccount readonly dispid 17;
    property SystemSetup: ISystemSetup readonly dispid 18;
    property Transaction: ITransaction readonly dispid 19;
    property Version: WideString readonly dispid 20;
  end;

// *********************************************************************//
// Interface: ISystemSetupUserFields2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2D6AA77-FBC5-417C-BECD-B9555CC5844A}
// *********************************************************************//
  ISystemSetupUserFields2 = interface(ISystemSetupUserFields)
    ['{B2D6AA77-FBC5-417C-BECD-B9555CC5844A}']
    function Get_ufADJDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufADJEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufADJLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufADJLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufCustDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufEmployeeDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJobDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufLineTypeDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufNOMDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufNOMEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufNOMLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufNOMLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPINDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPINEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPINLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPINLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPORDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPOREnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPORLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPORLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPPYDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPPYEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPPYLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPPYLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPQUDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPQUEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPQULineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPQULineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSINDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSINEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSINLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSINLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSORDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSOREnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSORLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSORLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSQUDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSQUEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSQULineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSQULineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSRCDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSRCEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSRCLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSRCLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufStockDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSuppDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufTSHDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufTSHEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufTSHLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufTSHLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufWORDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufWOREnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufWORLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufWORLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    property ufADJDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufADJDesc;
    property ufADJEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufADJEnabled;
    property ufADJLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufADJLineDesc;
    property ufADJLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufADJLineEnabled;
    property ufCustDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufCustDesc;
    property ufEmployeeDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufEmployeeDesc;
    property ufJobDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJobDesc;
    property ufLineTypeDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufLineTypeDesc;
    property ufNOMDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufNOMDesc;
    property ufNOMEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufNOMEnabled;
    property ufNOMLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufNOMLineDesc;
    property ufNOMLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufNOMLineEnabled;
    property ufPINDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPINDesc;
    property ufPINEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPINEnabled;
    property ufPINLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPINLineDesc;
    property ufPINLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPINLineEnabled;
    property ufPORDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPORDesc;
    property ufPOREnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPOREnabled;
    property ufPORLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPORLineDesc;
    property ufPORLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPORLineEnabled;
    property ufPPYDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPPYDesc;
    property ufPPYEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPPYEnabled;
    property ufPPYLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPPYLineDesc;
    property ufPPYLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPPYLineEnabled;
    property ufPQUDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPQUDesc;
    property ufPQUEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPQUEnabled;
    property ufPQULineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPQULineDesc;
    property ufPQULineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPQULineEnabled;
    property ufSINDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSINDesc;
    property ufSINEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSINEnabled;
    property ufSINLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSINLineDesc;
    property ufSINLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSINLineEnabled;
    property ufSORDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSORDesc;
    property ufSOREnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSOREnabled;
    property ufSORLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSORLineDesc;
    property ufSORLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSORLineEnabled;
    property ufSQUDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSQUDesc;
    property ufSQUEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSQUEnabled;
    property ufSQULineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSQULineDesc;
    property ufSQULineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSQULineEnabled;
    property ufSRCDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSRCDesc;
    property ufSRCEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSRCEnabled;
    property ufSRCLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSRCLineDesc;
    property ufSRCLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSRCLineEnabled;
    property ufStockDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufStockDesc;
    property ufSuppDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSuppDesc;
    property ufTSHDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufTSHDesc;
    property ufTSHEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufTSHEnabled;
    property ufTSHLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufTSHLineDesc;
    property ufTSHLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufTSHLineEnabled;
    property ufWORDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufWORDesc;
    property ufWOREnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufWOREnabled;
    property ufWORLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufWORLineDesc;
    property ufWORLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufWORLineEnabled;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupUserFields2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2D6AA77-FBC5-417C-BECD-B9555CC5844A}
// *********************************************************************//
  ISystemSetupUserFields2Disp = dispinterface
    ['{B2D6AA77-FBC5-417C-BECD-B9555CC5844A}']
    property ufADJDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 19;
    property ufADJEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 36;
    property ufADJLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 37;
    property ufADJLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 38;
    property ufCustDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 39;
    property ufEmployeeDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 40;
    property ufJobDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 41;
    property ufLineTypeDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 42;
    property ufNOMDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 43;
    property ufNOMEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 44;
    property ufNOMLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 45;
    property ufNOMLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 46;
    property ufPINDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 47;
    property ufPINEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 48;
    property ufPINLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 49;
    property ufPINLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 50;
    property ufPORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 51;
    property ufPOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 52;
    property ufPORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 53;
    property ufPORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 54;
    property ufPPYDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 55;
    property ufPPYEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 56;
    property ufPPYLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 57;
    property ufPPYLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 58;
    property ufPQUDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 59;
    property ufPQUEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 60;
    property ufPQULineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 61;
    property ufPQULineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 62;
    property ufSINDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 63;
    property ufSINEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 64;
    property ufSINLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 65;
    property ufSINLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 66;
    property ufSORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 67;
    property ufSOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 68;
    property ufSORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 69;
    property ufSORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 70;
    property ufSQUDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 71;
    property ufSQUEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 72;
    property ufSQULineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 73;
    property ufSQULineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 74;
    property ufSRCDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 75;
    property ufSRCEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 76;
    property ufSRCLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 77;
    property ufSRCLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 78;
    property ufStockDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 79;
    property ufSuppDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 80;
    property ufTSHDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 81;
    property ufTSHEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 82;
    property ufTSHLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 83;
    property ufTSHLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 84;
    property ufWORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 85;
    property ufWOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 86;
    property ufWORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 87;
    property ufWORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 88;
    property ufAccount1: WideString readonly dispid 1;
    property ufAccount2: WideString readonly dispid 2;
    property ufAccount3: WideString readonly dispid 3;
    property ufAccount4: WideString readonly dispid 4;
    property ufTrans1: WideString readonly dispid 5;
    property ufTrans2: WideString readonly dispid 6;
    property ufTrans3: WideString readonly dispid 7;
    property ufTrans4: WideString readonly dispid 8;
    property ufStock1: WideString readonly dispid 9;
    property ufStock2: WideString readonly dispid 10;
    property ufStock3: WideString readonly dispid 11;
    property ufStock4: WideString readonly dispid 12;
    property ufLine1: WideString readonly dispid 13;
    property ufLine2: WideString readonly dispid 14;
    property ufLine3: WideString readonly dispid 15;
    property ufLine4: WideString readonly dispid 16;
    property ufJob1: WideString readonly dispid 17;
    property ufJob2: WideString readonly dispid 18;
    property ufTrans1Enabled: WordBool readonly dispid 20;
    property ufTrans2Enabled: WordBool readonly dispid 21;
    property ufTrans3Enabled: WordBool readonly dispid 22;
    property ufTrans4Enabled: WordBool readonly dispid 23;
    property ufLine1Enabled: WordBool readonly dispid 24;
    property ufLine2Enabled: WordBool readonly dispid 25;
    property ufLine3Enabled: WordBool readonly dispid 26;
    property ufLine4Enabled: WordBool readonly dispid 27;
    property ufLineType1: WideString readonly dispid 28;
    property ufLineType2: WideString readonly dispid 29;
    property ufLineType3: WideString readonly dispid 30;
    property ufLineType4: WideString readonly dispid 31;
    property ufLineType1Enabled: WordBool readonly dispid 32;
    property ufLineType2Enabled: WordBool readonly dispid 33;
    property ufLineType3Enabled: WordBool readonly dispid 34;
    property ufLineType4Enabled: WordBool readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ISystemSetup2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {493F9B71-3AE3-4763-BA0C-F7FC46D336D6}
// *********************************************************************//
  ISystemSetup2 = interface(ISystemSetup)
    ['{493F9B71-3AE3-4763-BA0C-F7FC46D336D6}']
    function Get_ssWOPDisableWIP: WordBool; safecall;
    function Get_ssWORAllocStockOnPick: WordBool; safecall;
    function Get_ssWORCopyStkNotes: TWOPStockNotesType; safecall;
    function Get_ssFormDefinitionSet: ISystemSetupFormDefinitionSet; safecall;
    function Get_ssCISSetup: ISystemSetupCIS; safecall;
    property ssWOPDisableWIP: WordBool read Get_ssWOPDisableWIP;
    property ssWORAllocStockOnPick: WordBool read Get_ssWORAllocStockOnPick;
    property ssWORCopyStkNotes: TWOPStockNotesType read Get_ssWORCopyStkNotes;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet read Get_ssFormDefinitionSet;
    property ssCISSetup: ISystemSetupCIS read Get_ssCISSetup;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetup2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {493F9B71-3AE3-4763-BA0C-F7FC46D336D6}
// *********************************************************************//
  ISystemSetup2Disp = dispinterface
    ['{493F9B71-3AE3-4763-BA0C-F7FC46D336D6}']
    property ssWOPDisableWIP: WordBool readonly dispid 109;
    property ssWORAllocStockOnPick: WordBool readonly dispid 110;
    property ssWORCopyStkNotes: TWOPStockNotesType readonly dispid 111;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet readonly dispid 114;
    property ssCISSetup: ISystemSetupCIS readonly dispid 115;
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ISystemSetupPaperless2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18475C1F-5701-4ED2-87F8-6644493520F5}
// *********************************************************************//
  ISystemSetupPaperless2 = interface(ISystemSetupPaperless)
    ['{18475C1F-5701-4ED2-87F8-6644493520F5}']
    function Get_ssCompanyEmailSignature: WideString; safecall;
    function Get_ssCompanyFaxSignature: WideString; safecall;
    property ssCompanyEmailSignature: WideString read Get_ssCompanyEmailSignature;
    property ssCompanyFaxSignature: WideString read Get_ssCompanyFaxSignature;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupPaperless2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18475C1F-5701-4ED2-87F8-6644493520F5}
// *********************************************************************//
  ISystemSetupPaperless2Disp = dispinterface
    ['{18475C1F-5701-4ED2-87F8-6644493520F5}']
    property ssCompanyEmailSignature: WideString readonly dispid 11;
    property ssCompanyFaxSignature: WideString readonly dispid 12;
    property ssYourEmailName: WideString readonly dispid 1;
    property ssYourEmailAddress: WideString readonly dispid 2;
    property ssSMTPServer: WideString readonly dispid 3;
    property ssDefaultEmailPriority: TEmailPriority readonly dispid 4;
    property ssEmailUseMAPI: WordBool readonly dispid 5;
    property ssAttachMethod: TEmailAttachMethod readonly dispid 6;
    property ssFaxFromName: WideString readonly dispid 7;
    property ssFaxFromTelNo: WideString readonly dispid 8;
    property ssFaxInterfacePath: WideString readonly dispid 9;
    property ssFaxUsing: TFaxMethod readonly dispid 10;
  end;

// *********************************************************************//
// Interface: ISystemSetupFormDefinitionSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E49CB6F-18E6-4C7F-A31B-9F640E89A54A}
// *********************************************************************//
  ISystemSetupFormDefinitionSet = interface(IDispatch)
    ['{5E49CB6F-18E6-4C7F-A31B-9F640E89A54A}']
    function Get_fdNumber: Byte; safecall;
    function Get_fdDescription: WideString; safecall;
    function Get_fdForms(Index: TFormDefinitionType): WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function BuildNumberIndex(Number: Integer): WideString; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    property fdNumber: Byte read Get_fdNumber;
    property fdDescription: WideString read Get_fdDescription;
    property fdForms[Index: TFormDefinitionType]: WideString read Get_fdForms;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupFormDefinitionSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E49CB6F-18E6-4C7F-A31B-9F640E89A54A}
// *********************************************************************//
  ISystemSetupFormDefinitionSetDisp = dispinterface
    ['{5E49CB6F-18E6-4C7F-A31B-9F640E89A54A}']
    property fdNumber: Byte readonly dispid 1;
    property fdDescription: WideString readonly dispid 2;
    property fdForms[Index: TFormDefinitionType]: WideString readonly dispid 27;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function BuildNumberIndex(Number: Integer): WideString; dispid 3;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: ITransaction2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7365935-CB0C-42A2-A513-0968F696195C}
// *********************************************************************//
  ITransaction2 = interface(ITransaction)
    ['{F7365935-CB0C-42A2-A513-0968F696195C}']
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; safecall;
    function Get_thAsNOM: ITransactionAsNOM; safecall;
    function Get_thAsTSH: ITransactionAsTSH; safecall;
    function Get_thAsADJ: ITransactionAsADJ; safecall;
    function Get_thAsWOR: ITransactionAsWOR; safecall;
    function Get_thLinks: ILinks; safecall;
    function Get_thAutoSettings: IAutoTransactionSettings; safecall;
    function Copy: ITransaction2; safecall;
    function Reverse: ITransaction2; safecall;
    function Convert(DestDocType: TDocTypes): ISingleConvert; safecall;
    function Get_thAsBatch: ITransactionAsBatch; safecall;
    function BackToBackOrder: IBackToBackOrder; safecall;
    function Delete: Integer; safecall;
    function Get_thTagNo: Byte; safecall;
    procedure Set_thTagNo(Value: Byte); safecall;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; safecall;
    function Get_thCISTaxDue: Double; safecall;
    procedure Set_thCISTaxDue(Value: Double); safecall;
    function Get_thCISTaxDeclared: Double; safecall;
    function Get_thCISManualTax: WordBool; safecall;
    procedure Set_thCISManualTax(Value: WordBool); safecall;
    function Get_thCISDate: WideString; safecall;
    function Get_thCISTotalGross: Double; safecall;
    procedure Set_thCISTotalGross(Value: Double); safecall;
    function Get_thCISSource: Byte; safecall;
    function Get_thTotalCostApport: Double; safecall;
    procedure Set_thTotalCostApport(Value: Double); safecall;
    function Get_thCISEmployee: WideString; safecall;
    procedure Set_thCISEmployee(const Value: WideString); safecall;
    property thAsNOM: ITransactionAsNOM read Get_thAsNOM;
    property thAsTSH: ITransactionAsTSH read Get_thAsTSH;
    property thAsADJ: ITransactionAsADJ read Get_thAsADJ;
    property thAsWOR: ITransactionAsWOR read Get_thAsWOR;
    property thLinks: ILinks read Get_thLinks;
    property thAutoSettings: IAutoTransactionSettings read Get_thAutoSettings;
    property thAsBatch: ITransactionAsBatch read Get_thAsBatch;
    property thTagNo: Byte read Get_thTagNo write Set_thTagNo;
    property thCISTaxDue: Double read Get_thCISTaxDue write Set_thCISTaxDue;
    property thCISTaxDeclared: Double read Get_thCISTaxDeclared;
    property thCISManualTax: WordBool read Get_thCISManualTax write Set_thCISManualTax;
    property thCISDate: WideString read Get_thCISDate;
    property thCISTotalGross: Double read Get_thCISTotalGross write Set_thCISTotalGross;
    property thCISSource: Byte read Get_thCISSource;
    property thTotalCostApport: Double read Get_thTotalCostApport write Set_thTotalCostApport;
    property thCISEmployee: WideString read Get_thCISEmployee write Set_thCISEmployee;
  end;

// *********************************************************************//
// DispIntf:  ITransaction2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7365935-CB0C-42A2-A513-0968F696195C}
// *********************************************************************//
  ITransaction2Disp = dispinterface
    ['{F7365935-CB0C-42A2-A513-0968F696195C}']
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ITransactionAsNOM
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D76E5601-93AC-4D78-B61F-AE6A67C42D79}
// *********************************************************************//
  ITransactionAsNOM = interface(IDispatch)
    ['{D76E5601-93AC-4D78-B61F-AE6A67C42D79}']
    function Get_tnOurRef: WideString; safecall;
    procedure Set_tnOurRef(const Value: WideString); safecall;
    function Get_tnDescription: WideString; safecall;
    procedure Set_tnDescription(const Value: WideString); safecall;
    function Get_tnTransDate: WideString; safecall;
    procedure Set_tnTransDate(const Value: WideString); safecall;
    function Get_tnYear: Smallint; safecall;
    procedure Set_tnYear(Value: Smallint); safecall;
    function Get_tnPeriod: Integer; safecall;
    procedure Set_tnPeriod(Value: Integer); safecall;
    function Get_tnLastEditedBy: WideString; safecall;
    procedure Set_tnLastEditedBy(const Value: WideString); safecall;
    function Get_tnAutoReversing: WordBool; safecall;
    procedure Set_tnAutoReversing(Value: WordBool); safecall;
    function Get_tnYourRef: WideString; safecall;
    procedure Set_tnYourRef(const Value: WideString); safecall;
    function Get_tnUserField1: WideString; safecall;
    procedure Set_tnUserField1(const Value: WideString); safecall;
    function Get_tnUserField2: WideString; safecall;
    procedure Set_tnUserField2(const Value: WideString); safecall;
    function Get_tnUserField3: WideString; safecall;
    procedure Set_tnUserField3(const Value: WideString); safecall;
    function Get_tnUserField4: WideString; safecall;
    procedure Set_tnUserField4(const Value: WideString); safecall;
    property tnOurRef: WideString read Get_tnOurRef write Set_tnOurRef;
    property tnDescription: WideString read Get_tnDescription write Set_tnDescription;
    property tnTransDate: WideString read Get_tnTransDate write Set_tnTransDate;
    property tnYear: Smallint read Get_tnYear write Set_tnYear;
    property tnPeriod: Integer read Get_tnPeriod write Set_tnPeriod;
    property tnLastEditedBy: WideString read Get_tnLastEditedBy write Set_tnLastEditedBy;
    property tnAutoReversing: WordBool read Get_tnAutoReversing write Set_tnAutoReversing;
    property tnYourRef: WideString read Get_tnYourRef write Set_tnYourRef;
    property tnUserField1: WideString read Get_tnUserField1 write Set_tnUserField1;
    property tnUserField2: WideString read Get_tnUserField2 write Set_tnUserField2;
    property tnUserField3: WideString read Get_tnUserField3 write Set_tnUserField3;
    property tnUserField4: WideString read Get_tnUserField4 write Set_tnUserField4;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsNOMDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D76E5601-93AC-4D78-B61F-AE6A67C42D79}
// *********************************************************************//
  ITransactionAsNOMDisp = dispinterface
    ['{D76E5601-93AC-4D78-B61F-AE6A67C42D79}']
    property tnOurRef: WideString dispid 1;
    property tnDescription: WideString dispid 2;
    property tnTransDate: WideString dispid 3;
    property tnYear: Smallint dispid 4;
    property tnPeriod: Integer dispid 5;
    property tnLastEditedBy: WideString dispid 6;
    property tnAutoReversing: WordBool dispid 7;
    property tnYourRef: WideString dispid 8;
    property tnUserField1: WideString dispid 9;
    property tnUserField2: WideString dispid 10;
    property tnUserField3: WideString dispid 11;
    property tnUserField4: WideString dispid 12;
  end;

// *********************************************************************//
// Interface: ITransactionAsTSH
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41936116-1974-45CE-A28A-79529AE9FA40}
// *********************************************************************//
  ITransactionAsTSH = interface(IDispatch)
    ['{41936116-1974-45CE-A28A-79529AE9FA40}']
    function Get_ttEmployee: WideString; safecall;
    procedure Set_ttEmployee(const Value: WideString); safecall;
    function Get_ttTransDate: WideString; safecall;
    procedure Set_ttTransDate(const Value: WideString); safecall;
    function Get_ttPeriod: Integer; safecall;
    procedure Set_ttPeriod(Value: Integer); safecall;
    function Get_ttYear: Integer; safecall;
    procedure Set_ttYear(Value: Integer); safecall;
    function Get_ttDescription: WideString; safecall;
    procedure Set_ttDescription(const Value: WideString); safecall;
    function Get_ttWeekMonth: Integer; safecall;
    procedure Set_ttWeekMonth(Value: Integer); safecall;
    function Get_ttOurRef: WideString; safecall;
    procedure Set_ttOurRef(const Value: WideString); safecall;
    function Get_ttOperator: WideString; safecall;
    procedure Set_ttOperator(const Value: WideString); safecall;
    function Get_ttUserField1: WideString; safecall;
    procedure Set_ttUserField1(const Value: WideString); safecall;
    function Get_ttUserField2: WideString; safecall;
    procedure Set_ttUserField2(const Value: WideString); safecall;
    function Get_ttUserField3: WideString; safecall;
    procedure Set_ttUserField3(const Value: WideString); safecall;
    function Get_ttUserField4: WideString; safecall;
    procedure Set_ttUserField4(const Value: WideString); safecall;
    property ttEmployee: WideString read Get_ttEmployee write Set_ttEmployee;
    property ttTransDate: WideString read Get_ttTransDate write Set_ttTransDate;
    property ttPeriod: Integer read Get_ttPeriod write Set_ttPeriod;
    property ttYear: Integer read Get_ttYear write Set_ttYear;
    property ttDescription: WideString read Get_ttDescription write Set_ttDescription;
    property ttWeekMonth: Integer read Get_ttWeekMonth write Set_ttWeekMonth;
    property ttOurRef: WideString read Get_ttOurRef write Set_ttOurRef;
    property ttOperator: WideString read Get_ttOperator write Set_ttOperator;
    property ttUserField1: WideString read Get_ttUserField1 write Set_ttUserField1;
    property ttUserField2: WideString read Get_ttUserField2 write Set_ttUserField2;
    property ttUserField3: WideString read Get_ttUserField3 write Set_ttUserField3;
    property ttUserField4: WideString read Get_ttUserField4 write Set_ttUserField4;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsTSHDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41936116-1974-45CE-A28A-79529AE9FA40}
// *********************************************************************//
  ITransactionAsTSHDisp = dispinterface
    ['{41936116-1974-45CE-A28A-79529AE9FA40}']
    property ttEmployee: WideString dispid 1;
    property ttTransDate: WideString dispid 2;
    property ttPeriod: Integer dispid 3;
    property ttYear: Integer dispid 4;
    property ttDescription: WideString dispid 5;
    property ttWeekMonth: Integer dispid 6;
    property ttOurRef: WideString dispid 7;
    property ttOperator: WideString dispid 8;
    property ttUserField1: WideString dispid 9;
    property ttUserField2: WideString dispid 10;
    property ttUserField3: WideString dispid 11;
    property ttUserField4: WideString dispid 12;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsNOM
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A294E2C-9A46-4579-B974-35DC5CC3D31E}
// *********************************************************************//
  ITransactionLineAsNOM = interface(IDispatch)
    ['{3A294E2C-9A46-4579-B974-35DC5CC3D31E}']
    function Get_tlnDescription: WideString; safecall;
    procedure Set_tlnDescription(const Value: WideString); safecall;
    function Get_tlnGLCode: Integer; safecall;
    procedure Set_tlnGLCode(Value: Integer); safecall;
    function Get_tlnJobCode: WideString; safecall;
    procedure Set_tlnJobCode(const Value: WideString); safecall;
    function Get_tlnJobAnalysis: WideString; safecall;
    procedure Set_tlnJobAnalysis(const Value: WideString); safecall;
    function Get_tlnCurrency: Integer; safecall;
    procedure Set_tlnCurrency(Value: Integer); safecall;
    function Get_tlnExchangeRate: Double; safecall;
    procedure Set_tlnExchangeRate(Value: Double); safecall;
    function Get_tlnDebit: Double; safecall;
    procedure Set_tlnDebit(Value: Double); safecall;
    function Get_tlnCredit: Double; safecall;
    procedure Set_tlnCredit(Value: Double); safecall;
    function Get_tlnUserField1: WideString; safecall;
    procedure Set_tlnUserField1(const Value: WideString); safecall;
    function Get_tlnUserField2: WideString; safecall;
    procedure Set_tlnUserField2(const Value: WideString); safecall;
    function Get_tlnUserField3: WideString; safecall;
    procedure Set_tlnUserField3(const Value: WideString); safecall;
    function Get_tlnUserField4: WideString; safecall;
    procedure Set_tlnUserField4(const Value: WideString); safecall;
    function Get_tlnCostCentre: WideString; safecall;
    procedure Set_tlnCostCentre(const Value: WideString); safecall;
    function Get_tlnDepartment: WideString; safecall;
    procedure Set_tlnDepartment(const Value: WideString); safecall;
    property tlnDescription: WideString read Get_tlnDescription write Set_tlnDescription;
    property tlnGLCode: Integer read Get_tlnGLCode write Set_tlnGLCode;
    property tlnJobCode: WideString read Get_tlnJobCode write Set_tlnJobCode;
    property tlnJobAnalysis: WideString read Get_tlnJobAnalysis write Set_tlnJobAnalysis;
    property tlnCurrency: Integer read Get_tlnCurrency write Set_tlnCurrency;
    property tlnExchangeRate: Double read Get_tlnExchangeRate write Set_tlnExchangeRate;
    property tlnDebit: Double read Get_tlnDebit write Set_tlnDebit;
    property tlnCredit: Double read Get_tlnCredit write Set_tlnCredit;
    property tlnUserField1: WideString read Get_tlnUserField1 write Set_tlnUserField1;
    property tlnUserField2: WideString read Get_tlnUserField2 write Set_tlnUserField2;
    property tlnUserField3: WideString read Get_tlnUserField3 write Set_tlnUserField3;
    property tlnUserField4: WideString read Get_tlnUserField4 write Set_tlnUserField4;
    property tlnCostCentre: WideString read Get_tlnCostCentre write Set_tlnCostCentre;
    property tlnDepartment: WideString read Get_tlnDepartment write Set_tlnDepartment;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsNOMDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A294E2C-9A46-4579-B974-35DC5CC3D31E}
// *********************************************************************//
  ITransactionLineAsNOMDisp = dispinterface
    ['{3A294E2C-9A46-4579-B974-35DC5CC3D31E}']
    property tlnDescription: WideString dispid 1;
    property tlnGLCode: Integer dispid 2;
    property tlnJobCode: WideString dispid 3;
    property tlnJobAnalysis: WideString dispid 4;
    property tlnCurrency: Integer dispid 5;
    property tlnExchangeRate: Double dispid 6;
    property tlnDebit: Double dispid 7;
    property tlnCredit: Double dispid 8;
    property tlnUserField1: WideString dispid 9;
    property tlnUserField2: WideString dispid 10;
    property tlnUserField3: WideString dispid 11;
    property tlnUserField4: WideString dispid 12;
    property tlnCostCentre: WideString dispid 13;
    property tlnDepartment: WideString dispid 14;
  end;

// *********************************************************************//
// Interface: ITransactionLine2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06C486FD-9C45-4309-B879-A4864276BD8B}
// *********************************************************************//
  ITransactionLine2 = interface(ITransactionLine)
    ['{06C486FD-9C45-4309-B879-A4864276BD8B}']
    function Get_tlAsNOM: ITransactionLineAsNOM; safecall;
    function Get_tlAsTSH: ITransactionLineAsTSH; safecall;
    function Get_tlAsADJ: ITransactionLineAsADJ; safecall;
    function Get_tlAsWOR: ITransactionLineAsWOR; safecall;
    function Get_tlAsPayLine: ITransactionLineAsPayLine; safecall;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; safecall;
    function Get_tlYear: Smallint; safecall;
    procedure Set_tlYear(Value: Smallint); safecall;
    function Get_tlPeriod: Smallint; safecall;
    procedure Set_tlPeriod(Value: Smallint); safecall;
    function Get_tlNominalMode: TNominalModeType; safecall;
    function Get_tlDocType: TDocTypes; safecall;
    function UpdateUplift(NewAmount: Double): Integer; safecall;
    function Get_tlCostApport: Double; safecall;
    procedure Set_tlCostApport(Value: Double); safecall;
    function Get_tlCISRate: Double; safecall;
    procedure Set_tlCISRate(Value: Double); safecall;
    function Get_tlLineSource: Byte; safecall;
    function Get_tlCISRateCode: WideString; safecall;
    procedure Set_tlCISRateCode(const Value: WideString); safecall;
    function ImportDefaultsForUser(const UserID: WideString): Integer; safecall;
    property tlAsNOM: ITransactionLineAsNOM read Get_tlAsNOM;
    property tlAsTSH: ITransactionLineAsTSH read Get_tlAsTSH;
    property tlAsADJ: ITransactionLineAsADJ read Get_tlAsADJ;
    property tlAsWOR: ITransactionLineAsWOR read Get_tlAsWOR;
    property tlAsPayLine: ITransactionLineAsPayLine read Get_tlAsPayLine;
    property tlYear: Smallint read Get_tlYear write Set_tlYear;
    property tlPeriod: Smallint read Get_tlPeriod write Set_tlPeriod;
    property tlNominalMode: TNominalModeType read Get_tlNominalMode;
    property tlDocType: TDocTypes read Get_tlDocType;
    property tlCostApport: Double read Get_tlCostApport write Set_tlCostApport;
    property tlCISRate: Double read Get_tlCISRate write Set_tlCISRate;
    property tlLineSource: Byte read Get_tlLineSource;
    property tlCISRateCode: WideString read Get_tlCISRateCode write Set_tlCISRateCode;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06C486FD-9C45-4309-B879-A4864276BD8B}
// *********************************************************************//
  ITransactionLine2Disp = dispinterface
    ['{06C486FD-9C45-4309-B879-A4864276BD8B}']
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsTSH
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F59EC6C-E9A6-4ECE-9A54-9143ED5094F6}
// *********************************************************************//
  ITransactionLineAsTSH = interface(IDispatch)
    ['{0F59EC6C-E9A6-4ECE-9A54-9143ED5094F6}']
    function Get_tltJobCode: WideString; safecall;
    procedure Set_tltJobCode(const Value: WideString); safecall;
    function Get_tltRateCode: WideString; safecall;
    procedure Set_tltRateCode(const Value: WideString); safecall;
    function Get_tltAnalysisCode: WideString; safecall;
    procedure Set_tltAnalysisCode(const Value: WideString); safecall;
    function Get_tltHours: Double; safecall;
    procedure Set_tltHours(Value: Double); safecall;
    function Get_tltNarrative: WideString; safecall;
    procedure Set_tltNarrative(const Value: WideString); safecall;
    function Get_tltChargeOutRate: Double; safecall;
    procedure Set_tltChargeOutRate(Value: Double); safecall;
    function Get_tltCostPerHour: Double; safecall;
    procedure Set_tltCostPerHour(Value: Double); safecall;
    function Get_tltUserField1: WideString; safecall;
    procedure Set_tltUserField1(const Value: WideString); safecall;
    function Get_tltUserField2: WideString; safecall;
    procedure Set_tltUserField2(const Value: WideString); safecall;
    function Get_tltUserField3: WideString; safecall;
    procedure Set_tltUserField3(const Value: WideString); safecall;
    function Get_tltUserField4: WideString; safecall;
    procedure Set_tltUserField4(const Value: WideString); safecall;
    function Get_tltCurrency: Integer; safecall;
    procedure Set_tltCurrency(Value: Integer); safecall;
    function Get_tltCostCentre: WideString; safecall;
    procedure Set_tltCostCentre(const Value: WideString); safecall;
    function Get_tltDepartment: WideString; safecall;
    procedure Set_tltDepartment(const Value: WideString); safecall;
    property tltJobCode: WideString read Get_tltJobCode write Set_tltJobCode;
    property tltRateCode: WideString read Get_tltRateCode write Set_tltRateCode;
    property tltAnalysisCode: WideString read Get_tltAnalysisCode write Set_tltAnalysisCode;
    property tltHours: Double read Get_tltHours write Set_tltHours;
    property tltNarrative: WideString read Get_tltNarrative write Set_tltNarrative;
    property tltChargeOutRate: Double read Get_tltChargeOutRate write Set_tltChargeOutRate;
    property tltCostPerHour: Double read Get_tltCostPerHour write Set_tltCostPerHour;
    property tltUserField1: WideString read Get_tltUserField1 write Set_tltUserField1;
    property tltUserField2: WideString read Get_tltUserField2 write Set_tltUserField2;
    property tltUserField3: WideString read Get_tltUserField3 write Set_tltUserField3;
    property tltUserField4: WideString read Get_tltUserField4 write Set_tltUserField4;
    property tltCurrency: Integer read Get_tltCurrency write Set_tltCurrency;
    property tltCostCentre: WideString read Get_tltCostCentre write Set_tltCostCentre;
    property tltDepartment: WideString read Get_tltDepartment write Set_tltDepartment;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsTSHDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F59EC6C-E9A6-4ECE-9A54-9143ED5094F6}
// *********************************************************************//
  ITransactionLineAsTSHDisp = dispinterface
    ['{0F59EC6C-E9A6-4ECE-9A54-9143ED5094F6}']
    property tltJobCode: WideString dispid 1;
    property tltRateCode: WideString dispid 4;
    property tltAnalysisCode: WideString dispid 5;
    property tltHours: Double dispid 6;
    property tltNarrative: WideString dispid 7;
    property tltChargeOutRate: Double dispid 8;
    property tltCostPerHour: Double dispid 9;
    property tltUserField1: WideString dispid 10;
    property tltUserField2: WideString dispid 11;
    property tltUserField3: WideString dispid 12;
    property tltUserField4: WideString dispid 13;
    property tltCurrency: Integer dispid 2;
    property tltCostCentre: WideString dispid 3;
    property tltDepartment: WideString dispid 14;
  end;

// *********************************************************************//
// Interface: ITransactionAsADJ
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01D25446-1458-4E9E-ABED-B2F723391C14}
// *********************************************************************//
  ITransactionAsADJ = interface(IDispatch)
    ['{01D25446-1458-4E9E-ABED-B2F723391C14}']
    function Get_taOurRef: WideString; safecall;
    procedure Set_taOurRef(const Value: WideString); safecall;
    function Get_taDescription: WideString; safecall;
    procedure Set_taDescription(const Value: WideString); safecall;
    function Get_taDate: WideString; safecall;
    procedure Set_taDate(const Value: WideString); safecall;
    function Get_taYear: Integer; safecall;
    procedure Set_taYear(Value: Integer); safecall;
    function Get_taPeriod: Integer; safecall;
    procedure Set_taPeriod(Value: Integer); safecall;
    function Get_taYourRef: WideString; safecall;
    procedure Set_taYourRef(const Value: WideString); safecall;
    function Get_taLastEditedBy: WideString; safecall;
    procedure Set_taLastEditedBy(const Value: WideString); safecall;
    function Get_taUserField1: WideString; safecall;
    procedure Set_taUserField1(const Value: WideString); safecall;
    function Get_taUserField2: WideString; safecall;
    procedure Set_taUserField2(const Value: WideString); safecall;
    function Get_taUserField3: WideString; safecall;
    procedure Set_taUserField3(const Value: WideString); safecall;
    function Get_taUserField4: WideString; safecall;
    procedure Set_taUserField4(const Value: WideString); safecall;
    property taOurRef: WideString read Get_taOurRef write Set_taOurRef;
    property taDescription: WideString read Get_taDescription write Set_taDescription;
    property taDate: WideString read Get_taDate write Set_taDate;
    property taYear: Integer read Get_taYear write Set_taYear;
    property taPeriod: Integer read Get_taPeriod write Set_taPeriod;
    property taYourRef: WideString read Get_taYourRef write Set_taYourRef;
    property taLastEditedBy: WideString read Get_taLastEditedBy write Set_taLastEditedBy;
    property taUserField1: WideString read Get_taUserField1 write Set_taUserField1;
    property taUserField2: WideString read Get_taUserField2 write Set_taUserField2;
    property taUserField3: WideString read Get_taUserField3 write Set_taUserField3;
    property taUserField4: WideString read Get_taUserField4 write Set_taUserField4;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsADJDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01D25446-1458-4E9E-ABED-B2F723391C14}
// *********************************************************************//
  ITransactionAsADJDisp = dispinterface
    ['{01D25446-1458-4E9E-ABED-B2F723391C14}']
    property taOurRef: WideString dispid 1;
    property taDescription: WideString dispid 2;
    property taDate: WideString dispid 3;
    property taYear: Integer dispid 4;
    property taPeriod: Integer dispid 5;
    property taYourRef: WideString dispid 6;
    property taLastEditedBy: WideString dispid 7;
    property taUserField1: WideString dispid 8;
    property taUserField2: WideString dispid 9;
    property taUserField3: WideString dispid 10;
    property taUserField4: WideString dispid 11;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsADJ
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C527DD1-518C-45CD-979D-7E8C1D165DFC}
// *********************************************************************//
  ITransactionLineAsADJ = interface(IDispatch)
    ['{8C527DD1-518C-45CD-979D-7E8C1D165DFC}']
    function Get_tlaStockCode: WideString; safecall;
    procedure Set_tlaStockCode(const Value: WideString); safecall;
    function Get_tlaLocation: WideString; safecall;
    procedure Set_tlaLocation(const Value: WideString); safecall;
    function Get_tlaPackQty: Double; safecall;
    procedure Set_tlaPackQty(Value: Double); safecall;
    function Get_tlaQtyIn: Double; safecall;
    procedure Set_tlaQtyIn(Value: Double); safecall;
    function Get_tlaQtyOut: Double; safecall;
    procedure Set_tlaQtyOut(Value: Double); safecall;
    function Get_tlaBuild: WordBool; safecall;
    procedure Set_tlaBuild(Value: WordBool); safecall;
    function Get_tlaUnitCost: Double; safecall;
    procedure Set_tlaUnitCost(Value: Double); safecall;
    function Get_tlaGLCode: Integer; safecall;
    procedure Set_tlaGLCode(Value: Integer); safecall;
    function Get_tlaCostCentre: WideString; safecall;
    procedure Set_tlaCostCentre(const Value: WideString); safecall;
    function Get_tlaDepartment: WideString; safecall;
    procedure Set_tlaDepartment(const Value: WideString); safecall;
    function Get_tlaUserField1: WideString; safecall;
    procedure Set_tlaUserField1(const Value: WideString); safecall;
    function Get_tlaUserField2: WideString; safecall;
    procedure Set_tlaUserField2(const Value: WideString); safecall;
    function Get_tlaUserField3: WideString; safecall;
    procedure Set_tlaUserField3(const Value: WideString); safecall;
    function Get_tlaUserField4: WideString; safecall;
    procedure Set_tlaUserField4(const Value: WideString); safecall;
    property tlaStockCode: WideString read Get_tlaStockCode write Set_tlaStockCode;
    property tlaLocation: WideString read Get_tlaLocation write Set_tlaLocation;
    property tlaPackQty: Double read Get_tlaPackQty write Set_tlaPackQty;
    property tlaQtyIn: Double read Get_tlaQtyIn write Set_tlaQtyIn;
    property tlaQtyOut: Double read Get_tlaQtyOut write Set_tlaQtyOut;
    property tlaBuild: WordBool read Get_tlaBuild write Set_tlaBuild;
    property tlaUnitCost: Double read Get_tlaUnitCost write Set_tlaUnitCost;
    property tlaGLCode: Integer read Get_tlaGLCode write Set_tlaGLCode;
    property tlaCostCentre: WideString read Get_tlaCostCentre write Set_tlaCostCentre;
    property tlaDepartment: WideString read Get_tlaDepartment write Set_tlaDepartment;
    property tlaUserField1: WideString read Get_tlaUserField1 write Set_tlaUserField1;
    property tlaUserField2: WideString read Get_tlaUserField2 write Set_tlaUserField2;
    property tlaUserField3: WideString read Get_tlaUserField3 write Set_tlaUserField3;
    property tlaUserField4: WideString read Get_tlaUserField4 write Set_tlaUserField4;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsADJDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C527DD1-518C-45CD-979D-7E8C1D165DFC}
// *********************************************************************//
  ITransactionLineAsADJDisp = dispinterface
    ['{8C527DD1-518C-45CD-979D-7E8C1D165DFC}']
    property tlaStockCode: WideString dispid 1;
    property tlaLocation: WideString dispid 2;
    property tlaPackQty: Double dispid 3;
    property tlaQtyIn: Double dispid 4;
    property tlaQtyOut: Double dispid 5;
    property tlaBuild: WordBool dispid 6;
    property tlaUnitCost: Double dispid 7;
    property tlaGLCode: Integer dispid 8;
    property tlaCostCentre: WideString dispid 9;
    property tlaDepartment: WideString dispid 10;
    property tlaUserField1: WideString dispid 11;
    property tlaUserField2: WideString dispid 12;
    property tlaUserField3: WideString dispid 13;
    property tlaUserField4: WideString dispid 14;
  end;

// *********************************************************************//
// Interface: ITransactionAsWOR
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74ED7056-5746-4378-9CEA-3A35946BDECB}
// *********************************************************************//
  ITransactionAsWOR = interface(IDispatch)
    ['{74ED7056-5746-4378-9CEA-3A35946BDECB}']
    function Get_twOurRef: WideString; safecall;
    procedure Set_twOurRef(const Value: WideString); safecall;
    function Get_twAcCode: WideString; safecall;
    procedure Set_twAcCode(const Value: WideString); safecall;
    function Get_twStartDate: WideString; safecall;
    procedure Set_twStartDate(const Value: WideString); safecall;
    function Get_twCompleteDate: WideString; safecall;
    procedure Set_twCompleteDate(const Value: WideString); safecall;
    function Get_twYourRef: WideString; safecall;
    procedure Set_twYourRef(const Value: WideString); safecall;
    function Get_twAltRef: WideString; safecall;
    procedure Set_twAltRef(const Value: WideString); safecall;
    function Get_twOperator: WideString; safecall;
    procedure Set_twOperator(const Value: WideString); safecall;
    function Get_twPeriod: Integer; safecall;
    procedure Set_twPeriod(Value: Integer); safecall;
    function Get_twYear: Integer; safecall;
    procedure Set_twYear(Value: Integer); safecall;
    function Get_twLocation: WideString; safecall;
    procedure Set_twLocation(const Value: WideString); safecall;
    function Get_twUserField1: WideString; safecall;
    procedure Set_twUserField1(const Value: WideString); safecall;
    function Get_twUserField2: WideString; safecall;
    procedure Set_twUserField2(const Value: WideString); safecall;
    function Get_twUserField3: WideString; safecall;
    procedure Set_twUserField3(const Value: WideString); safecall;
    function Get_twUserField4: WideString; safecall;
    procedure Set_twUserField4(const Value: WideString); safecall;
    property twOurRef: WideString read Get_twOurRef write Set_twOurRef;
    property twAcCode: WideString read Get_twAcCode write Set_twAcCode;
    property twStartDate: WideString read Get_twStartDate write Set_twStartDate;
    property twCompleteDate: WideString read Get_twCompleteDate write Set_twCompleteDate;
    property twYourRef: WideString read Get_twYourRef write Set_twYourRef;
    property twAltRef: WideString read Get_twAltRef write Set_twAltRef;
    property twOperator: WideString read Get_twOperator write Set_twOperator;
    property twPeriod: Integer read Get_twPeriod write Set_twPeriod;
    property twYear: Integer read Get_twYear write Set_twYear;
    property twLocation: WideString read Get_twLocation write Set_twLocation;
    property twUserField1: WideString read Get_twUserField1 write Set_twUserField1;
    property twUserField2: WideString read Get_twUserField2 write Set_twUserField2;
    property twUserField3: WideString read Get_twUserField3 write Set_twUserField3;
    property twUserField4: WideString read Get_twUserField4 write Set_twUserField4;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsWORDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74ED7056-5746-4378-9CEA-3A35946BDECB}
// *********************************************************************//
  ITransactionAsWORDisp = dispinterface
    ['{74ED7056-5746-4378-9CEA-3A35946BDECB}']
    property twOurRef: WideString dispid 1;
    property twAcCode: WideString dispid 2;
    property twStartDate: WideString dispid 3;
    property twCompleteDate: WideString dispid 4;
    property twYourRef: WideString dispid 5;
    property twAltRef: WideString dispid 6;
    property twOperator: WideString dispid 7;
    property twPeriod: Integer dispid 8;
    property twYear: Integer dispid 9;
    property twLocation: WideString dispid 10;
    property twUserField1: WideString dispid 11;
    property twUserField2: WideString dispid 12;
    property twUserField3: WideString dispid 13;
    property twUserField4: WideString dispid 14;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsWOR
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1426D63-703E-4E9D-81B4-1ABB982FA107}
// *********************************************************************//
  ITransactionLineAsWOR = interface(IDispatch)
    ['{C1426D63-703E-4E9D-81B4-1ABB982FA107}']
    function Get_tlwStockCode: WideString; safecall;
    procedure Set_tlwStockCode(const Value: WideString); safecall;
    function Get_tlwLocation: WideString; safecall;
    procedure Set_tlwLocation(const Value: WideString); safecall;
    function Get_tlwQtyRequired: Double; safecall;
    procedure Set_tlwQtyRequired(Value: Double); safecall;
    function Get_tlwUndersOvers: Double; safecall;
    procedure Set_tlwUndersOvers(Value: Double); safecall;
    function Get_tlwBuildOrPickQty: Double; safecall;
    procedure Set_tlwBuildOrPickQty(Value: Double); safecall;
    function Get_tlwCostCentre: WideString; safecall;
    procedure Set_tlwCostCentre(const Value: WideString); safecall;
    function Get_tlwDepartment: WideString; safecall;
    procedure Set_tlwDepartment(const Value: WideString); safecall;
    function Get_tlwUserField1: WideString; safecall;
    procedure Set_tlwUserField1(const Value: WideString); safecall;
    function Get_tlwUserField2: WideString; safecall;
    procedure Set_tlwUserField2(const Value: WideString); safecall;
    function Get_tlwUserField3: WideString; safecall;
    procedure Set_tlwUserField3(const Value: WideString); safecall;
    function Get_tlwUserField4: WideString; safecall;
    procedure Set_tlwUserField4(const Value: WideString); safecall;
    function Get_tlwQtyPerBOM: Double; safecall;
    procedure Set_tlwQtyPerBOM(Value: Double); safecall;
    procedure ExplodeBOM; safecall;
    property tlwStockCode: WideString read Get_tlwStockCode write Set_tlwStockCode;
    property tlwLocation: WideString read Get_tlwLocation write Set_tlwLocation;
    property tlwQtyRequired: Double read Get_tlwQtyRequired write Set_tlwQtyRequired;
    property tlwUndersOvers: Double read Get_tlwUndersOvers write Set_tlwUndersOvers;
    property tlwBuildOrPickQty: Double read Get_tlwBuildOrPickQty write Set_tlwBuildOrPickQty;
    property tlwCostCentre: WideString read Get_tlwCostCentre write Set_tlwCostCentre;
    property tlwDepartment: WideString read Get_tlwDepartment write Set_tlwDepartment;
    property tlwUserField1: WideString read Get_tlwUserField1 write Set_tlwUserField1;
    property tlwUserField2: WideString read Get_tlwUserField2 write Set_tlwUserField2;
    property tlwUserField3: WideString read Get_tlwUserField3 write Set_tlwUserField3;
    property tlwUserField4: WideString read Get_tlwUserField4 write Set_tlwUserField4;
    property tlwQtyPerBOM: Double read Get_tlwQtyPerBOM write Set_tlwQtyPerBOM;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsWORDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1426D63-703E-4E9D-81B4-1ABB982FA107}
// *********************************************************************//
  ITransactionLineAsWORDisp = dispinterface
    ['{C1426D63-703E-4E9D-81B4-1ABB982FA107}']
    property tlwStockCode: WideString dispid 1;
    property tlwLocation: WideString dispid 2;
    property tlwQtyRequired: Double dispid 3;
    property tlwUndersOvers: Double dispid 4;
    property tlwBuildOrPickQty: Double dispid 5;
    property tlwCostCentre: WideString dispid 6;
    property tlwDepartment: WideString dispid 7;
    property tlwUserField1: WideString dispid 8;
    property tlwUserField2: WideString dispid 9;
    property tlwUserField3: WideString dispid 10;
    property tlwUserField4: WideString dispid 11;
    property tlwQtyPerBOM: Double dispid 12;
    procedure ExplodeBOM; dispid 13;
  end;

// *********************************************************************//
// Interface: ILinks
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7434222-13E6-48AC-898C-56E2847112FF}
// *********************************************************************//
  ILinks = interface(IDispatch)
    ['{B7434222-13E6-48AC-898C-56E2847112FF}']
    function Get_lkType: TLinkType; safecall;
    function Get_lkDate: WideString; safecall;
    procedure Set_lkDate(const Value: WideString); safecall;
    function Get_lkTime: WideString; safecall;
    procedure Set_lkTime(const Value: WideString); safecall;
    function Get_lkUser: WideString; safecall;
    procedure Set_lkUser(const Value: WideString); safecall;
    function Get_lkFileName: WideString; safecall;
    procedure Set_lkFileName(const Value: WideString); safecall;
    function Get_lkDescription: WideString; safecall;
    procedure Set_lkDescription(const Value: WideString); safecall;
    function Get_lkObjectType: TLinkObjectType; safecall;
    procedure Set_lkObjectType(Value: TLinkObjectType); safecall;
    function GetFirst: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function Add: ILinks; safecall;
    function Save: Integer; safecall;
    function Update: ILinks; safecall;
    procedure Cancel; safecall;
    function Delete: Integer; safecall;
    property lkType: TLinkType read Get_lkType;
    property lkDate: WideString read Get_lkDate write Set_lkDate;
    property lkTime: WideString read Get_lkTime write Set_lkTime;
    property lkUser: WideString read Get_lkUser write Set_lkUser;
    property lkFileName: WideString read Get_lkFileName write Set_lkFileName;
    property lkDescription: WideString read Get_lkDescription write Set_lkDescription;
    property lkObjectType: TLinkObjectType read Get_lkObjectType write Set_lkObjectType;
  end;

// *********************************************************************//
// DispIntf:  ILinksDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7434222-13E6-48AC-898C-56E2847112FF}
// *********************************************************************//
  ILinksDisp = dispinterface
    ['{B7434222-13E6-48AC-898C-56E2847112FF}']
    property lkType: TLinkType readonly dispid 3;
    property lkDate: WideString dispid 4;
    property lkTime: WideString dispid 5;
    property lkUser: WideString dispid 6;
    property lkFileName: WideString dispid 7;
    property lkDescription: WideString dispid 8;
    property lkObjectType: TLinkObjectType dispid 9;
    function GetFirst: Integer; dispid 10;
    function GetNext: Integer; dispid 11;
    function GetLast: Integer; dispid 12;
    function GetPrevious: Integer; dispid 13;
    function Add: ILinks; dispid 14;
    function Save: Integer; dispid 15;
    function Update: ILinks; dispid 17;
    procedure Cancel; dispid 18;
    function Delete: Integer; dispid 1;
  end;

// *********************************************************************//
// Interface: IJob2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B52CF222-2753-46B4-A1AE-E97AD047A92B}
// *********************************************************************//
  IJob2 = interface(IJob)
    ['{B52CF222-2753-46B4-A1AE-E97AD047A92B}']
    function Get_jrLinks: ILinks; safecall;
    function Get_jrJobActual: IJobActual; safecall;
    function Get_jrPurchaseRetention: IJobRetention; safecall;
    function Get_jrSalesRetention: IJobRetention; safecall;
    function Get_jrSummaryBudget: ISummaryJobBudget; safecall;
    function Get_jrAnalysisBudget: IAnalysisJobBudget; safecall;
    function Get_jrTimeAndStockBudget: ITimeAndStockJobBudget; safecall;
    function Invoice: IJobInvoice; safecall;
    function Print(PrintAs: TJobPrintMode): IPrintJob; safecall;
    property jrLinks: ILinks read Get_jrLinks;
    property jrJobActual: IJobActual read Get_jrJobActual;
    property jrPurchaseRetention: IJobRetention read Get_jrPurchaseRetention;
    property jrSalesRetention: IJobRetention read Get_jrSalesRetention;
    property jrSummaryBudget: ISummaryJobBudget read Get_jrSummaryBudget;
    property jrAnalysisBudget: IAnalysisJobBudget read Get_jrAnalysisBudget;
    property jrTimeAndStockBudget: ITimeAndStockJobBudget read Get_jrTimeAndStockBudget;
  end;

// *********************************************************************//
// DispIntf:  IJob2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B52CF222-2753-46B4-A1AE-E97AD047A92B}
// *********************************************************************//
  IJob2Disp = dispinterface
    ['{B52CF222-2753-46B4-A1AE-E97AD047A92B}']
    property jrLinks: ILinks readonly dispid 38;
    property jrJobActual: IJobActual readonly dispid 39;
    property jrPurchaseRetention: IJobRetention readonly dispid 40;
    property jrSalesRetention: IJobRetention readonly dispid 41;
    property jrSummaryBudget: ISummaryJobBudget readonly dispid 42;
    property jrAnalysisBudget: IAnalysisJobBudget readonly dispid 43;
    property jrTimeAndStockBudget: ITimeAndStockJobBudget readonly dispid 44;
    function Invoice: IJobInvoice; dispid 45;
    function Print(PrintAs: TJobPrintMode): IPrintJob; dispid 46;
    property jrCode: WideString dispid 1;
    property jrDesc: WideString dispid 2;
    property jrFolio: Integer readonly dispid 3;
    property jrAcCode: WideString dispid 4;
    property jrParent: WideString dispid 5;
    property jrAltCode: WideString dispid 6;
    property jrCompleted: WordBool dispid 7;
    property jrContact: WideString dispid 8;
    property jrManager: WideString dispid 9;
    property jrChargeType: TJobChargeType dispid 10;
    property jrQuotePrice: Double dispid 11;
    property jrQuotePriceCurr: Smallint dispid 12;
    property jrStartDate: WideString dispid 13;
    property jrEndDate: WideString dispid 14;
    property jrRevisedEndDate: WideString dispid 15;
    property jrSORNumber: WideString dispid 16;
    property jrVATCode: WideString dispid 17;
    property jrJobType: WideString dispid 20;
    property jrType: TJobTypeType dispid 21;
    property jrStatus: TJobStatusType dispid 22;
    property jrUserField1: WideString dispid 23;
    property jrUserField2: WideString dispid 24;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TJobIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const JobCode: WideString): WideString; dispid 18;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 19;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; dispid 25;
    function Add: IJob; dispid 26;
    function Update: IJob; dispid 27;
    function Clone: IJob; dispid 28;
    function Save: Integer; dispid 29;
    procedure Cancel; dispid 30;
    function BuildDescIndex(const Description: WideString): WideString; dispid 31;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; dispid 32;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; dispid 33;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 34;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 35;
    property jrNotes: INotes readonly dispid 36;
    property jrJobTypeI: IJobType readonly dispid 37;
  end;

// *********************************************************************//
// Interface: IAutoTransactionSettings
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79AB0D53-689A-4D34-A430-953C1CA3D3F5}
// *********************************************************************//
  IAutoTransactionSettings = interface(IDispatch)
    ['{79AB0D53-689A-4D34-A430-953C1CA3D3F5}']
    function Get_atIncrementType: TAutoIncrementType; safecall;
    procedure Set_atIncrementType(Value: TAutoIncrementType); safecall;
    function Get_atIncrement: Integer; safecall;
    procedure Set_atIncrement(Value: Integer); safecall;
    function Get_atAutoCreateOnPost: WordBool; safecall;
    procedure Set_atAutoCreateOnPost(Value: WordBool); safecall;
    function Get_atStartDate: WideString; safecall;
    procedure Set_atStartDate(const Value: WideString); safecall;
    function Get_atStartPeriod: Integer; safecall;
    procedure Set_atStartPeriod(Value: Integer); safecall;
    function Get_atStartYear: Integer; safecall;
    procedure Set_atStartYear(Value: Integer); safecall;
    function Get_atEndDate: WideString; safecall;
    procedure Set_atEndDate(const Value: WideString); safecall;
    function Get_atEndPeriod: Integer; safecall;
    procedure Set_atEndPeriod(Value: Integer); safecall;
    function Get_atEndYear: Integer; safecall;
    procedure Set_atEndYear(Value: Integer); safecall;
    function Get_atAutoTransaction: WordBool; safecall;
    procedure Set_atAutoTransaction(Value: WordBool); safecall;
    property atIncrementType: TAutoIncrementType read Get_atIncrementType write Set_atIncrementType;
    property atIncrement: Integer read Get_atIncrement write Set_atIncrement;
    property atAutoCreateOnPost: WordBool read Get_atAutoCreateOnPost write Set_atAutoCreateOnPost;
    property atStartDate: WideString read Get_atStartDate write Set_atStartDate;
    property atStartPeriod: Integer read Get_atStartPeriod write Set_atStartPeriod;
    property atStartYear: Integer read Get_atStartYear write Set_atStartYear;
    property atEndDate: WideString read Get_atEndDate write Set_atEndDate;
    property atEndPeriod: Integer read Get_atEndPeriod write Set_atEndPeriod;
    property atEndYear: Integer read Get_atEndYear write Set_atEndYear;
    property atAutoTransaction: WordBool read Get_atAutoTransaction write Set_atAutoTransaction;
  end;

// *********************************************************************//
// DispIntf:  IAutoTransactionSettingsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79AB0D53-689A-4D34-A430-953C1CA3D3F5}
// *********************************************************************//
  IAutoTransactionSettingsDisp = dispinterface
    ['{79AB0D53-689A-4D34-A430-953C1CA3D3F5}']
    property atIncrementType: TAutoIncrementType dispid 1;
    property atIncrement: Integer dispid 2;
    property atAutoCreateOnPost: WordBool dispid 3;
    property atStartDate: WideString dispid 4;
    property atStartPeriod: Integer dispid 5;
    property atStartYear: Integer dispid 6;
    property atEndDate: WideString dispid 7;
    property atEndPeriod: Integer dispid 8;
    property atEndYear: Integer dispid 9;
    property atAutoTransaction: WordBool dispid 10;
  end;

// *********************************************************************//
// Interface: IConvert
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D67A5ABC-0BCE-4AA3-BE53-626AF142D2E1}
// *********************************************************************//
  IConvert = interface(IDispatch)
    ['{D67A5ABC-0BCE-4AA3-BE53-626AF142D2E1}']
    function Get_cvStartTransaction: WideString; safecall;
    function Get_cvProcessed: Integer; safecall;
    function Get_cvEndTransaction: WideString; safecall;
    function Get_cvStartTransactionI: ITransaction; safecall;
    function Get_cvEndTransactionI: ITransaction; safecall;
    property cvStartTransaction: WideString read Get_cvStartTransaction;
    property cvProcessed: Integer read Get_cvProcessed;
    property cvEndTransaction: WideString read Get_cvEndTransaction;
    property cvStartTransactionI: ITransaction read Get_cvStartTransactionI;
    property cvEndTransactionI: ITransaction read Get_cvEndTransactionI;
  end;

// *********************************************************************//
// DispIntf:  IConvertDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D67A5ABC-0BCE-4AA3-BE53-626AF142D2E1}
// *********************************************************************//
  IConvertDisp = dispinterface
    ['{D67A5ABC-0BCE-4AA3-BE53-626AF142D2E1}']
    property cvStartTransaction: WideString readonly dispid 1;
    property cvProcessed: Integer readonly dispid 2;
    property cvEndTransaction: WideString readonly dispid 4;
    property cvStartTransactionI: ITransaction readonly dispid 5;
    property cvEndTransactionI: ITransaction readonly dispid 6;
  end;

// *********************************************************************//
// Interface: ISingleConvert
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7DD82AB-A993-4404-AEE4-2D58549F4180}
// *********************************************************************//
  ISingleConvert = interface(IConvert)
    ['{C7DD82AB-A993-4404-AEE4-2D58549F4180}']
    function Check: Integer; safecall;
    function Execute: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISingleConvertDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7DD82AB-A993-4404-AEE4-2D58549F4180}
// *********************************************************************//
  ISingleConvertDisp = dispinterface
    ['{C7DD82AB-A993-4404-AEE4-2D58549F4180}']
    function Check: Integer; dispid 3;
    function Execute: Integer; dispid 7;
    property cvStartTransaction: WideString readonly dispid 1;
    property cvProcessed: Integer readonly dispid 2;
    property cvEndTransaction: WideString readonly dispid 4;
    property cvStartTransactionI: ITransaction readonly dispid 5;
    property cvEndTransactionI: ITransaction readonly dispid 6;
  end;

// *********************************************************************//
// Interface: IConvertList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F9FFA65-8BEA-4A80-A436-C4D693983347}
// *********************************************************************//
  IConvertList = interface(IDispatch)
    ['{1F9FFA65-8BEA-4A80-A436-C4D693983347}']
    function Get_clConversions(Index: Integer): IConvert; safecall;
    function Get_clCount: Integer; safecall;
    procedure Add(const OurRef: WideString); safecall;
    procedure Delete(Index: Integer); safecall;
    procedure Clear; safecall;
    function Check(var ProblemIndex: Integer): Integer; safecall;
    function Execute: Integer; safecall;
    function Get_clConsolidate: WordBool; safecall;
    procedure Set_clConsolidate(Value: WordBool); safecall;
    property clConversions[Index: Integer]: IConvert read Get_clConversions;
    property clCount: Integer read Get_clCount;
    property clConsolidate: WordBool read Get_clConsolidate write Set_clConsolidate;
  end;

// *********************************************************************//
// DispIntf:  IConvertListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F9FFA65-8BEA-4A80-A436-C4D693983347}
// *********************************************************************//
  IConvertListDisp = dispinterface
    ['{1F9FFA65-8BEA-4A80-A436-C4D693983347}']
    property clConversions[Index: Integer]: IConvert readonly dispid 1;
    property clCount: Integer readonly dispid 2;
    procedure Add(const OurRef: WideString); dispid 3;
    procedure Delete(Index: Integer); dispid 4;
    procedure Clear; dispid 5;
    function Check(var ProblemIndex: Integer): Integer; dispid 6;
    function Execute: Integer; dispid 7;
    property clConsolidate: WordBool dispid 8;
  end;

// *********************************************************************//
// Interface: ISystemProcesses
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED57994C-F81E-430E-82AC-6754D5C96FBE}
// *********************************************************************//
  ISystemProcesses = interface(IDispatch)
    ['{ED57994C-F81E-430E-82AC-6754D5C96FBE}']
    function ConvertToPDN: IConvertList; safecall;
    function ConvertToPIN: IConvertList; safecall;
    function ConvertToPOR: IConvertList; safecall;
    function ConvertToSDN: IConvertList; safecall;
    function ConvertToSIN: IConvertList; safecall;
    function ConvertToSOR: IConvertList; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISystemProcessesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED57994C-F81E-430E-82AC-6754D5C96FBE}
// *********************************************************************//
  ISystemProcessesDisp = dispinterface
    ['{ED57994C-F81E-430E-82AC-6754D5C96FBE}']
    function ConvertToPDN: IConvertList; dispid 3;
    function ConvertToPIN: IConvertList; dispid 4;
    function ConvertToPOR: IConvertList; dispid 5;
    function ConvertToSDN: IConvertList; dispid 6;
    function ConvertToSIN: IConvertList; dispid 7;
    function ConvertToSOR: IConvertList; dispid 8;
  end;

// *********************************************************************//
// Interface: IBackToBackOrder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {91354B5D-AD8D-4709-9BF4-6067FEB6CDC5}
// *********************************************************************//
  IBackToBackOrder = interface(IDispatch)
    ['{91354B5D-AD8D-4709-9BF4-6067FEB6CDC5}']
    function Get_bbMultipleSuppliers: WordBool; safecall;
    procedure Set_bbMultipleSuppliers(Value: WordBool); safecall;
    function Get_bbIncludeNormalLines: WordBool; safecall;
    procedure Set_bbIncludeNormalLines(Value: WordBool); safecall;
    function Get_bbIncludeLabourLines: WordBool; safecall;
    procedure Set_bbIncludeLabourLines(Value: WordBool); safecall;
    function Get_bbIncludeMaterialLines: WordBool; safecall;
    procedure Set_bbIncludeMaterialLines(Value: WordBool); safecall;
    function Get_bbIncludeFreightLines: WordBool; safecall;
    procedure Set_bbIncludeFreightLines(Value: WordBool); safecall;
    function Get_bbIncludeDiscountLines: WordBool; safecall;
    procedure Set_bbIncludeDiscountLines(Value: WordBool); safecall;
    function Get_bbQtyMode: TB2BQtyModeType; safecall;
    procedure Set_bbQtyMode(Value: TB2BQtyModeType); safecall;
    function Get_bbDefaultSupplier: WideString; safecall;
    procedure Set_bbDefaultSupplier(const Value: WideString); safecall;
    function Get_bbAutoPick: WordBool; safecall;
    procedure Set_bbAutoPick(Value: WordBool); safecall;
    function Get_bbPORCount: Integer; safecall;
    function Get_bbPORs(Index: Integer): WideString; safecall;
    function Execute: Integer; safecall;
    property bbMultipleSuppliers: WordBool read Get_bbMultipleSuppliers write Set_bbMultipleSuppliers;
    property bbIncludeNormalLines: WordBool read Get_bbIncludeNormalLines write Set_bbIncludeNormalLines;
    property bbIncludeLabourLines: WordBool read Get_bbIncludeLabourLines write Set_bbIncludeLabourLines;
    property bbIncludeMaterialLines: WordBool read Get_bbIncludeMaterialLines write Set_bbIncludeMaterialLines;
    property bbIncludeFreightLines: WordBool read Get_bbIncludeFreightLines write Set_bbIncludeFreightLines;
    property bbIncludeDiscountLines: WordBool read Get_bbIncludeDiscountLines write Set_bbIncludeDiscountLines;
    property bbQtyMode: TB2BQtyModeType read Get_bbQtyMode write Set_bbQtyMode;
    property bbDefaultSupplier: WideString read Get_bbDefaultSupplier write Set_bbDefaultSupplier;
    property bbAutoPick: WordBool read Get_bbAutoPick write Set_bbAutoPick;
    property bbPORCount: Integer read Get_bbPORCount;
    property bbPORs[Index: Integer]: WideString read Get_bbPORs;
  end;

// *********************************************************************//
// DispIntf:  IBackToBackOrderDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {91354B5D-AD8D-4709-9BF4-6067FEB6CDC5}
// *********************************************************************//
  IBackToBackOrderDisp = dispinterface
    ['{91354B5D-AD8D-4709-9BF4-6067FEB6CDC5}']
    property bbMultipleSuppliers: WordBool dispid 1;
    property bbIncludeNormalLines: WordBool dispid 2;
    property bbIncludeLabourLines: WordBool dispid 3;
    property bbIncludeMaterialLines: WordBool dispid 4;
    property bbIncludeFreightLines: WordBool dispid 5;
    property bbIncludeDiscountLines: WordBool dispid 6;
    property bbQtyMode: TB2BQtyModeType dispid 7;
    property bbDefaultSupplier: WideString dispid 8;
    property bbAutoPick: WordBool dispid 9;
    property bbPORCount: Integer readonly dispid 11;
    property bbPORs[Index: Integer]: WideString readonly dispid 12;
    function Execute: Integer; dispid 13;
  end;

// *********************************************************************//
// Interface: ITransactionAsBatch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E129ADEB-97E4-4828-9C4F-1F9F7B2E31BD}
// *********************************************************************//
  ITransactionAsBatch = interface(IDispatch)
    ['{E129ADEB-97E4-4828-9C4F-1F9F7B2E31BD}']
    function Get_btTotal: Double; safecall;
    function Get_btBankGL: Integer; safecall;
    procedure Set_btBankGL(Value: Integer); safecall;
    function Get_btBatchCount: Integer; safecall;
    function Get_btBatchMembers(Index: Integer): ITransaction; safecall;
    function AddBatchMember(TransactionType: TDocTypes): ITransaction; safecall;
    function UpdateBatchMember(Index: Integer): ITransaction; safecall;
    function Get_btChequeNoStart: Integer; safecall;
    procedure Set_btChequeNoStart(Value: Integer); safecall;
    property btTotal: Double read Get_btTotal;
    property btBankGL: Integer read Get_btBankGL write Set_btBankGL;
    property btBatchCount: Integer read Get_btBatchCount;
    property btBatchMembers[Index: Integer]: ITransaction read Get_btBatchMembers;
    property btChequeNoStart: Integer read Get_btChequeNoStart write Set_btChequeNoStart;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsBatchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E129ADEB-97E4-4828-9C4F-1F9F7B2E31BD}
// *********************************************************************//
  ITransactionAsBatchDisp = dispinterface
    ['{E129ADEB-97E4-4828-9C4F-1F9F7B2E31BD}']
    property btTotal: Double readonly dispid 1;
    property btBankGL: Integer dispid 2;
    property btBatchCount: Integer readonly dispid 4;
    property btBatchMembers[Index: Integer]: ITransaction readonly dispid 5;
    function AddBatchMember(TransactionType: TDocTypes): ITransaction; dispid 7;
    function UpdateBatchMember(Index: Integer): ITransaction; dispid 8;
    property btChequeNoStart: Integer dispid 10;
  end;

// *********************************************************************//
// Interface: IPrintJob
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57F2323B-8A80-48E6-BE1A-5F4D0E159E83}
// *********************************************************************//
  IPrintJob = interface(IDispatch)
    ['{57F2323B-8A80-48E6-BE1A-5F4D0E159E83}']
    function Get_pjSystemPrinters: IPrinters; safecall;
    function Get_pjForms: IPrintFormList; safecall;
    function Get_pjPrinterIndex: Integer; safecall;
    procedure Set_pjPrinterIndex(Value: Integer); safecall;
    function Get_pjPaperIndex: Integer; safecall;
    procedure Set_pjPaperIndex(Value: Integer); safecall;
    function Get_pjBinIndex: Integer; safecall;
    procedure Set_pjBinIndex(Value: Integer); safecall;
    function Get_pjCopies: Integer; safecall;
    procedure Set_pjCopies(Value: Integer); safecall;
    function Get_pjTestMode: WordBool; safecall;
    procedure Set_pjTestMode(Value: WordBool); safecall;
    function Get_pjStartLabelNo: Integer; safecall;
    procedure Set_pjStartLabelNo(Value: Integer); safecall;
    function Get_pjUserId: WideString; safecall;
    procedure Set_pjUserId(const Value: WideString); safecall;
    function Get_pjEmailInfo: IPrintJobEmailInfo; safecall;
    function Get_pjFaxInfo: IPrintJobFaxInfo; safecall;
    function Get_pjFileInfo: IPrintJobFileInfo; safecall;
    procedure ImportDefaults; safecall;
    function PrintToPrinter: Integer; safecall;
    function PrintToTempFile(Destination: TPrintDestination): IPrintTempFile; safecall;
    function Get_pjType: TPrintJobType; safecall;
    function GetFormInfo(const FormName: WideString): IFormDetails; safecall;
    function PrinterSetupDialog: WordBool; safecall;
    function Get_pjCustomData: IPrintJobDataList; safecall;
    property pjSystemPrinters: IPrinters read Get_pjSystemPrinters;
    property pjForms: IPrintFormList read Get_pjForms;
    property pjPrinterIndex: Integer read Get_pjPrinterIndex write Set_pjPrinterIndex;
    property pjPaperIndex: Integer read Get_pjPaperIndex write Set_pjPaperIndex;
    property pjBinIndex: Integer read Get_pjBinIndex write Set_pjBinIndex;
    property pjCopies: Integer read Get_pjCopies write Set_pjCopies;
    property pjTestMode: WordBool read Get_pjTestMode write Set_pjTestMode;
    property pjStartLabelNo: Integer read Get_pjStartLabelNo write Set_pjStartLabelNo;
    property pjUserId: WideString read Get_pjUserId write Set_pjUserId;
    property pjEmailInfo: IPrintJobEmailInfo read Get_pjEmailInfo;
    property pjFaxInfo: IPrintJobFaxInfo read Get_pjFaxInfo;
    property pjFileInfo: IPrintJobFileInfo read Get_pjFileInfo;
    property pjType: TPrintJobType read Get_pjType;
    property pjCustomData: IPrintJobDataList read Get_pjCustomData;
  end;

// *********************************************************************//
// DispIntf:  IPrintJobDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57F2323B-8A80-48E6-BE1A-5F4D0E159E83}
// *********************************************************************//
  IPrintJobDisp = dispinterface
    ['{57F2323B-8A80-48E6-BE1A-5F4D0E159E83}']
    property pjSystemPrinters: IPrinters readonly dispid 1;
    property pjForms: IPrintFormList readonly dispid 2;
    property pjPrinterIndex: Integer dispid 3;
    property pjPaperIndex: Integer dispid 4;
    property pjBinIndex: Integer dispid 5;
    property pjCopies: Integer dispid 6;
    property pjTestMode: WordBool dispid 7;
    property pjStartLabelNo: Integer dispid 8;
    property pjUserId: WideString dispid 9;
    property pjEmailInfo: IPrintJobEmailInfo readonly dispid 10;
    property pjFaxInfo: IPrintJobFaxInfo readonly dispid 11;
    property pjFileInfo: IPrintJobFileInfo readonly dispid 12;
    procedure ImportDefaults; dispid 13;
    function PrintToPrinter: Integer; dispid 14;
    function PrintToTempFile(Destination: TPrintDestination): IPrintTempFile; dispid 15;
    property pjType: TPrintJobType readonly dispid 16;
    function GetFormInfo(const FormName: WideString): IFormDetails; dispid 17;
    function PrinterSetupDialog: WordBool; dispid 18;
    property pjCustomData: IPrintJobDataList readonly dispid 19;
  end;

// *********************************************************************//
// Interface: IPrinters
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56D1F045-A209-4FFB-833F-C4F8E827EDD0}
// *********************************************************************//
  IPrinters = interface(IDispatch)
    ['{56D1F045-A209-4FFB-833F-C4F8E827EDD0}']
    function Get_prPrinters(Index: Integer): IPrinterDetail; safecall;
    function Get_prCount: Integer; safecall;
    function Get_prDefaultPrinter: Integer; safecall;
    function IndexOf(const SearchText: WideString): Integer; safecall;
    property prPrinters[Index: Integer]: IPrinterDetail read Get_prPrinters; default;
    property prCount: Integer read Get_prCount;
    property prDefaultPrinter: Integer read Get_prDefaultPrinter;
  end;

// *********************************************************************//
// DispIntf:  IPrintersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56D1F045-A209-4FFB-833F-C4F8E827EDD0}
// *********************************************************************//
  IPrintersDisp = dispinterface
    ['{56D1F045-A209-4FFB-833F-C4F8E827EDD0}']
    property prPrinters[Index: Integer]: IPrinterDetail readonly dispid 0; default;
    property prCount: Integer readonly dispid 1;
    property prDefaultPrinter: Integer readonly dispid 2;
    function IndexOf(const SearchText: WideString): Integer; dispid 3;
  end;

// *********************************************************************//
// Interface: IPrinterDetail
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB7F9431-50B4-44F7-8174-33074C71ED2B}
// *********************************************************************//
  IPrinterDetail = interface(IDispatch)
    ['{BB7F9431-50B4-44F7-8174-33074C71ED2B}']
    function Get_pdName: WideString; safecall;
    function Get_pdPapers: IStringListReadOnly; safecall;
    function Get_pdBins: IStringListReadOnly; safecall;
    function Get_pdDefaultPaper: Integer; safecall;
    function Get_pdDefaultBin: Integer; safecall;
    function Get_pdSupportsPapers: WordBool; safecall;
    function Get_pdSupportsBins: WordBool; safecall;
    property pdName: WideString read Get_pdName;
    property pdPapers: IStringListReadOnly read Get_pdPapers;
    property pdBins: IStringListReadOnly read Get_pdBins;
    property pdDefaultPaper: Integer read Get_pdDefaultPaper;
    property pdDefaultBin: Integer read Get_pdDefaultBin;
    property pdSupportsPapers: WordBool read Get_pdSupportsPapers;
    property pdSupportsBins: WordBool read Get_pdSupportsBins;
  end;

// *********************************************************************//
// DispIntf:  IPrinterDetailDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB7F9431-50B4-44F7-8174-33074C71ED2B}
// *********************************************************************//
  IPrinterDetailDisp = dispinterface
    ['{BB7F9431-50B4-44F7-8174-33074C71ED2B}']
    property pdName: WideString readonly dispid 0;
    property pdPapers: IStringListReadOnly readonly dispid 1;
    property pdBins: IStringListReadOnly readonly dispid 2;
    property pdDefaultPaper: Integer readonly dispid 3;
    property pdDefaultBin: Integer readonly dispid 4;
    property pdSupportsPapers: WordBool readonly dispid 5;
    property pdSupportsBins: WordBool readonly dispid 6;
  end;

// *********************************************************************//
// Interface: IStringListReadOnly
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7F95B57-2894-4EE7-ACC1-A3434EF90805}
// *********************************************************************//
  IStringListReadOnly = interface(IDispatch)
    ['{A7F95B57-2894-4EE7-ACC1-A3434EF90805}']
    function Get_Strings(Index: Integer): WideString; safecall;
    function Get_Count: Integer; safecall;
    function IndexOf(const SearchText: WideString): Integer; safecall;
    property Strings[Index: Integer]: WideString read Get_Strings; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IStringListReadOnlyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7F95B57-2894-4EE7-ACC1-A3434EF90805}
// *********************************************************************//
  IStringListReadOnlyDisp = dispinterface
    ['{A7F95B57-2894-4EE7-ACC1-A3434EF90805}']
    property Strings[Index: Integer]: WideString readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
    function IndexOf(const SearchText: WideString): Integer; dispid 2;
  end;

// *********************************************************************//
// Interface: IPrintFormList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F6186123-29F6-4910-AE92-0A701CA31E97}
// *********************************************************************//
  IPrintFormList = interface(IDispatch)
    ['{F6186123-29F6-4910-AE92-0A701CA31E97}']
    function Get_pfForms(Index: Integer): IPrintFormDetail; safecall;
    function Get_pfCount: Integer; safecall;
    function Add: IPrintFormDetail; safecall;
    procedure Delete(Index: Integer); safecall;
    procedure Clear; safecall;
    property pfForms[Index: Integer]: IPrintFormDetail read Get_pfForms; default;
    property pfCount: Integer read Get_pfCount;
  end;

// *********************************************************************//
// DispIntf:  IPrintFormListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F6186123-29F6-4910-AE92-0A701CA31E97}
// *********************************************************************//
  IPrintFormListDisp = dispinterface
    ['{F6186123-29F6-4910-AE92-0A701CA31E97}']
    property pfForms[Index: Integer]: IPrintFormDetail readonly dispid 0; default;
    property pfCount: Integer readonly dispid 1;
    function Add: IPrintFormDetail; dispid 2;
    procedure Delete(Index: Integer); dispid 3;
    procedure Clear; dispid 4;
  end;

// *********************************************************************//
// Interface: IPrintFormDetail
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F445A95-D0BD-4113-90C9-D4234FD6207E}
// *********************************************************************//
  IPrintFormDetail = interface(IDispatch)
    ['{9F445A95-D0BD-4113-90C9-D4234FD6207E}']
    function Get_fdFormName: WideString; safecall;
    procedure Set_fdFormName(const Value: WideString); safecall;
    function Get_fdDescription: WideString; safecall;
    procedure Set_fdDescription(const Value: WideString); safecall;
    function Get_fdLabelCopies: Integer; safecall;
    procedure Set_fdLabelCopies(Value: Integer); safecall;
    function Save: Integer; safecall;
    property fdFormName: WideString read Get_fdFormName write Set_fdFormName;
    property fdDescription: WideString read Get_fdDescription write Set_fdDescription;
    property fdLabelCopies: Integer read Get_fdLabelCopies write Set_fdLabelCopies;
  end;

// *********************************************************************//
// DispIntf:  IPrintFormDetailDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F445A95-D0BD-4113-90C9-D4234FD6207E}
// *********************************************************************//
  IPrintFormDetailDisp = dispinterface
    ['{9F445A95-D0BD-4113-90C9-D4234FD6207E}']
    property fdFormName: WideString dispid 1;
    property fdDescription: WideString dispid 2;
    property fdLabelCopies: Integer dispid 3;
    function Save: Integer; dispid 4;
  end;

// *********************************************************************//
// Interface: IPrintTempFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44359A50-1F81-409A-8E54-27C8D8C73CF0}
// *********************************************************************//
  IPrintTempFile = interface(IDispatch)
    ['{44359A50-1F81-409A-8E54-27C8D8C73CF0}']
    function Get_pfType: TPrintDestination; safecall;
    function Get_pfFileName: WideString; safecall;
    function DisplayPreviewWindow(PreviewType: TPreviewType): Integer; safecall;
    function SendToDestination: Integer; safecall;
    function Get_pfPages: Integer; safecall;
    function Get_pfStartPage: Integer; safecall;
    procedure Set_pfStartPage(Value: Integer); safecall;
    function Get_pfFinishPage: Integer; safecall;
    procedure Set_pfFinishPage(Value: Integer); safecall;
    function Get_pfCopies: Integer; safecall;
    procedure Set_pfCopies(Value: Integer); safecall;
    function Get_pfStatus: Integer; safecall;
    function SaveAsFile(const FilePath: WideString; FileType: TSaveAsType): Integer; safecall;
    property pfType: TPrintDestination read Get_pfType;
    property pfFileName: WideString read Get_pfFileName;
    property pfPages: Integer read Get_pfPages;
    property pfStartPage: Integer read Get_pfStartPage write Set_pfStartPage;
    property pfFinishPage: Integer read Get_pfFinishPage write Set_pfFinishPage;
    property pfCopies: Integer read Get_pfCopies write Set_pfCopies;
    property pfStatus: Integer read Get_pfStatus;
  end;

// *********************************************************************//
// DispIntf:  IPrintTempFileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44359A50-1F81-409A-8E54-27C8D8C73CF0}
// *********************************************************************//
  IPrintTempFileDisp = dispinterface
    ['{44359A50-1F81-409A-8E54-27C8D8C73CF0}']
    property pfType: TPrintDestination readonly dispid 1;
    property pfFileName: WideString readonly dispid 2;
    function DisplayPreviewWindow(PreviewType: TPreviewType): Integer; dispid 3;
    function SendToDestination: Integer; dispid 4;
    property pfPages: Integer readonly dispid 7;
    property pfStartPage: Integer dispid 8;
    property pfFinishPage: Integer dispid 9;
    property pfCopies: Integer dispid 10;
    property pfStatus: Integer readonly dispid 5;
    function SaveAsFile(const FilePath: WideString; FileType: TSaveAsType): Integer; dispid 6;
  end;

// *********************************************************************//
// Interface: IPrintJobEmailInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98C98B66-B406-4FB5-8ED0-35A7CF840F0C}
// *********************************************************************//
  IPrintJobEmailInfo = interface(IDispatch)
    ['{98C98B66-B406-4FB5-8ED0-35A7CF840F0C}']
    function Get_emType: TEmailType; safecall;
    function Get_emSenderName: WideString; safecall;
    procedure Set_emSenderName(const Value: WideString); safecall;
    function Get_emSenderAddress: WideString; safecall;
    procedure Set_emSenderAddress(const Value: WideString); safecall;
    function Get_emToRecipients: IEmailAddressArray; safecall;
    function Get_emCCRecipients: IEmailAddressArray; safecall;
    function Get_emBCCRecipients: IEmailAddressArray; safecall;
    function Get_emSubject: WideString; safecall;
    procedure Set_emSubject(const Value: WideString); safecall;
    function Get_emMessageText: WideString; safecall;
    procedure Set_emMessageText(const Value: WideString); safecall;
    function Get_emAttachments: IEmailAttachments; safecall;
    function Get_emPriority: TEmailPriority; safecall;
    procedure Set_emPriority(Value: TEmailPriority); safecall;
    function Get_emCoverSheet: WideString; safecall;
    procedure Set_emCoverSheet(const Value: WideString); safecall;
    function Get_emSMTPServer: WideString; safecall;
    function Get_emFormCompression: TEmailAttachmentZIPType; safecall;
    procedure Set_emFormCompression(Value: TEmailAttachmentZIPType); safecall;
    function Get_emSendReader: WordBool; safecall;
    procedure Set_emSendReader(Value: WordBool); safecall;
    property emType: TEmailType read Get_emType;
    property emSenderName: WideString read Get_emSenderName write Set_emSenderName;
    property emSenderAddress: WideString read Get_emSenderAddress write Set_emSenderAddress;
    property emToRecipients: IEmailAddressArray read Get_emToRecipients;
    property emCCRecipients: IEmailAddressArray read Get_emCCRecipients;
    property emBCCRecipients: IEmailAddressArray read Get_emBCCRecipients;
    property emSubject: WideString read Get_emSubject write Set_emSubject;
    property emMessageText: WideString read Get_emMessageText write Set_emMessageText;
    property emAttachments: IEmailAttachments read Get_emAttachments;
    property emPriority: TEmailPriority read Get_emPriority write Set_emPriority;
    property emCoverSheet: WideString read Get_emCoverSheet write Set_emCoverSheet;
    property emSMTPServer: WideString read Get_emSMTPServer;
    property emFormCompression: TEmailAttachmentZIPType read Get_emFormCompression write Set_emFormCompression;
    property emSendReader: WordBool read Get_emSendReader write Set_emSendReader;
  end;

// *********************************************************************//
// DispIntf:  IPrintJobEmailInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98C98B66-B406-4FB5-8ED0-35A7CF840F0C}
// *********************************************************************//
  IPrintJobEmailInfoDisp = dispinterface
    ['{98C98B66-B406-4FB5-8ED0-35A7CF840F0C}']
    property emType: TEmailType readonly dispid 1;
    property emSenderName: WideString dispid 2;
    property emSenderAddress: WideString dispid 3;
    property emToRecipients: IEmailAddressArray readonly dispid 4;
    property emCCRecipients: IEmailAddressArray readonly dispid 5;
    property emBCCRecipients: IEmailAddressArray readonly dispid 6;
    property emSubject: WideString dispid 7;
    property emMessageText: WideString dispid 8;
    property emAttachments: IEmailAttachments readonly dispid 9;
    property emPriority: TEmailPriority dispid 10;
    property emCoverSheet: WideString dispid 11;
    property emSMTPServer: WideString readonly dispid 13;
    property emFormCompression: TEmailAttachmentZIPType dispid 14;
    property emSendReader: WordBool dispid 12;
  end;

// *********************************************************************//
// Interface: IEmailAddressArray
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F5C05B0-DF7D-44F3-80BA-BB3F710DB8B6}
// *********************************************************************//
  IEmailAddressArray = interface(IDispatch)
    ['{4F5C05B0-DF7D-44F3-80BA-BB3F710DB8B6}']
    function Get_eaItems(Index: Integer): IEmailAddress; safecall;
    function Get_eaCount: Integer; safecall;
    function AddAddress(const Name: WideString; const Address: WideString): Integer; safecall;
    procedure Delete(Index: Integer); safecall;
    procedure Clear; safecall;
    property eaItems[Index: Integer]: IEmailAddress read Get_eaItems; default;
    property eaCount: Integer read Get_eaCount;
  end;

// *********************************************************************//
// DispIntf:  IEmailAddressArrayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F5C05B0-DF7D-44F3-80BA-BB3F710DB8B6}
// *********************************************************************//
  IEmailAddressArrayDisp = dispinterface
    ['{4F5C05B0-DF7D-44F3-80BA-BB3F710DB8B6}']
    property eaItems[Index: Integer]: IEmailAddress readonly dispid 0; default;
    property eaCount: Integer readonly dispid 1;
    function AddAddress(const Name: WideString; const Address: WideString): Integer; dispid 2;
    procedure Delete(Index: Integer); dispid 3;
    procedure Clear; dispid 4;
  end;

// *********************************************************************//
// Interface: IEmailAddress
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E47AB80D-9842-402C-83EC-DC2FA158E160}
// *********************************************************************//
  IEmailAddress = interface(IDispatch)
    ['{E47AB80D-9842-402C-83EC-DC2FA158E160}']
    function Get_emlName: WideString; safecall;
    procedure Set_emlName(const Value: WideString); safecall;
    function Get_emlAddress: WideString; safecall;
    procedure Set_emlAddress(const Value: WideString); safecall;
    property emlName: WideString read Get_emlName write Set_emlName;
    property emlAddress: WideString read Get_emlAddress write Set_emlAddress;
  end;

// *********************************************************************//
// DispIntf:  IEmailAddressDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E47AB80D-9842-402C-83EC-DC2FA158E160}
// *********************************************************************//
  IEmailAddressDisp = dispinterface
    ['{E47AB80D-9842-402C-83EC-DC2FA158E160}']
    property emlName: WideString dispid 1;
    property emlAddress: WideString dispid 2;
  end;

// *********************************************************************//
// Interface: IEmailAttachments
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {211D3070-423B-4831-8651-AF2BD8A4B580}
// *********************************************************************//
  IEmailAttachments = interface(IDispatch)
    ['{211D3070-423B-4831-8651-AF2BD8A4B580}']
    function Get_afFiles(Index: Integer): WideString; safecall;
    procedure Set_afFiles(Index: Integer; const Value: WideString); safecall;
    function Get_afCount: Integer; safecall;
    function Add(const AddString: WideString): Integer; safecall;
    procedure Delete(Index: Integer); safecall;
    procedure Clear; safecall;
    property afFiles[Index: Integer]: WideString read Get_afFiles write Set_afFiles;
    property afCount: Integer read Get_afCount;
  end;

// *********************************************************************//
// DispIntf:  IEmailAttachmentsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {211D3070-423B-4831-8651-AF2BD8A4B580}
// *********************************************************************//
  IEmailAttachmentsDisp = dispinterface
    ['{211D3070-423B-4831-8651-AF2BD8A4B580}']
    property afFiles[Index: Integer]: WideString dispid 1;
    property afCount: Integer readonly dispid 2;
    function Add(const AddString: WideString): Integer; dispid 3;
    procedure Delete(Index: Integer); dispid 4;
    procedure Clear; dispid 5;
  end;

// *********************************************************************//
// Interface: IPrintJobFaxInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D4E863CC-AF95-42B2-8918-4CB80137D0DD}
// *********************************************************************//
  IPrintJobFaxInfo = interface(IDispatch)
    ['{D4E863CC-AF95-42B2-8918-4CB80137D0DD}']
    function Get_fxType: TFaxMethod; safecall;
    function Get_fxSenderName: WideString; safecall;
    procedure Set_fxSenderName(const Value: WideString); safecall;
    function Get_fxSenderFaxNumber: WideString; safecall;
    procedure Set_fxSenderFaxNumber(const Value: WideString); safecall;
    function Get_fxRecipientName: WideString; safecall;
    procedure Set_fxRecipientName(const Value: WideString); safecall;
    function Get_fxRecipientFaxNumber: WideString; safecall;
    procedure Set_fxRecipientFaxNumber(const Value: WideString); safecall;
    function Get_fxFaxPrinterIndex: Integer; safecall;
    function Get_fxFaxingPath: WideString; safecall;
    function Get_fxCoverSheet: WideString; safecall;
    procedure Set_fxCoverSheet(const Value: WideString); safecall;
    function Get_fxPriority: TFaxPriority; safecall;
    procedure Set_fxPriority(Value: TFaxPriority); safecall;
    function Get_fxMessageText: WideString; safecall;
    procedure Set_fxMessageText(const Value: WideString); safecall;
    function Get_fxFaxDescription: WideString; safecall;
    procedure Set_fxFaxDescription(const Value: WideString); safecall;
    property fxType: TFaxMethod read Get_fxType;
    property fxSenderName: WideString read Get_fxSenderName write Set_fxSenderName;
    property fxSenderFaxNumber: WideString read Get_fxSenderFaxNumber write Set_fxSenderFaxNumber;
    property fxRecipientName: WideString read Get_fxRecipientName write Set_fxRecipientName;
    property fxRecipientFaxNumber: WideString read Get_fxRecipientFaxNumber write Set_fxRecipientFaxNumber;
    property fxFaxPrinterIndex: Integer read Get_fxFaxPrinterIndex;
    property fxFaxingPath: WideString read Get_fxFaxingPath;
    property fxCoverSheet: WideString read Get_fxCoverSheet write Set_fxCoverSheet;
    property fxPriority: TFaxPriority read Get_fxPriority write Set_fxPriority;
    property fxMessageText: WideString read Get_fxMessageText write Set_fxMessageText;
    property fxFaxDescription: WideString read Get_fxFaxDescription write Set_fxFaxDescription;
  end;

// *********************************************************************//
// DispIntf:  IPrintJobFaxInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D4E863CC-AF95-42B2-8918-4CB80137D0DD}
// *********************************************************************//
  IPrintJobFaxInfoDisp = dispinterface
    ['{D4E863CC-AF95-42B2-8918-4CB80137D0DD}']
    property fxType: TFaxMethod readonly dispid 1;
    property fxSenderName: WideString dispid 2;
    property fxSenderFaxNumber: WideString dispid 3;
    property fxRecipientName: WideString dispid 4;
    property fxRecipientFaxNumber: WideString dispid 5;
    property fxFaxPrinterIndex: Integer readonly dispid 6;
    property fxFaxingPath: WideString readonly dispid 7;
    property fxCoverSheet: WideString dispid 8;
    property fxPriority: TFaxPriority dispid 9;
    property fxMessageText: WideString dispid 10;
    property fxFaxDescription: WideString dispid 11;
  end;

// *********************************************************************//
// Interface: IPrintJobFileInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD05C3E4-E952-4ED4-B9C0-6522CBA5E3D1}
// *********************************************************************//
  IPrintJobFileInfo = interface(IDispatch)
    ['{BD05C3E4-E952-4ED4-B9C0-6522CBA5E3D1}']
    function Get_fiAttachmentType: TEmailAttachMethod; safecall;
    function Get_fiAttachmentPrinterIndex: Integer; safecall;
    property fiAttachmentType: TEmailAttachMethod read Get_fiAttachmentType;
    property fiAttachmentPrinterIndex: Integer read Get_fiAttachmentPrinterIndex;
  end;

// *********************************************************************//
// DispIntf:  IPrintJobFileInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD05C3E4-E952-4ED4-B9C0-6522CBA5E3D1}
// *********************************************************************//
  IPrintJobFileInfoDisp = dispinterface
    ['{BD05C3E4-E952-4ED4-B9C0-6522CBA5E3D1}']
    property fiAttachmentType: TEmailAttachMethod readonly dispid 1;
    property fiAttachmentPrinterIndex: Integer readonly dispid 2;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsPayLine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79D7ADBF-53E8-4CF2-935E-3001BFAF3572}
// *********************************************************************//
  ITransactionLineAsPayLine = interface(IDispatch)
    ['{79D7ADBF-53E8-4CF2-935E-3001BFAF3572}']
    function Get_plGLCode: Integer; safecall;
    procedure Set_plGLCode(Value: Integer); safecall;
    function Get_plChequeNo: WideString; safecall;
    procedure Set_plChequeNo(const Value: WideString); safecall;
    function Get_plCurrency: Integer; safecall;
    function Get_plPayInRef: WideString; safecall;
    procedure Set_plPayInRef(const Value: WideString); safecall;
    function Get_plAmount: Double; safecall;
    procedure Set_plAmount(Value: Double); safecall;
    function UpdatePayInRef(const NewRef: WideString): Integer; safecall;
    function Get_plUserField1: WideString; safecall;
    procedure Set_plUserField1(const Value: WideString); safecall;
    function Get_plUserField2: WideString; safecall;
    procedure Set_plUserField2(const Value: WideString); safecall;
    function Get_plUserField3: WideString; safecall;
    procedure Set_plUserField3(const Value: WideString); safecall;
    function Get_plUserField4: WideString; safecall;
    procedure Set_plUserField4(const Value: WideString); safecall;
    property plGLCode: Integer read Get_plGLCode write Set_plGLCode;
    property plChequeNo: WideString read Get_plChequeNo write Set_plChequeNo;
    property plCurrency: Integer read Get_plCurrency;
    property plPayInRef: WideString read Get_plPayInRef write Set_plPayInRef;
    property plAmount: Double read Get_plAmount write Set_plAmount;
    property plUserField1: WideString read Get_plUserField1 write Set_plUserField1;
    property plUserField2: WideString read Get_plUserField2 write Set_plUserField2;
    property plUserField3: WideString read Get_plUserField3 write Set_plUserField3;
    property plUserField4: WideString read Get_plUserField4 write Set_plUserField4;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsPayLineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79D7ADBF-53E8-4CF2-935E-3001BFAF3572}
// *********************************************************************//
  ITransactionLineAsPayLineDisp = dispinterface
    ['{79D7ADBF-53E8-4CF2-935E-3001BFAF3572}']
    property plGLCode: Integer dispid 1;
    property plChequeNo: WideString dispid 2;
    property plCurrency: Integer readonly dispid 3;
    property plPayInRef: WideString dispid 4;
    property plAmount: Double dispid 5;
    function UpdatePayInRef(const NewRef: WideString): Integer; dispid 6;
    property plUserField1: WideString dispid 7;
    property plUserField2: WideString dispid 8;
    property plUserField3: WideString dispid 9;
    property plUserField4: WideString dispid 10;
  end;

// *********************************************************************//
// Interface: IFormDetails
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BF97711-8D24-4C31-98B2-8DB324D6118A}
// *********************************************************************//
  IFormDetails = interface(IDispatch)
    ['{3BF97711-8D24-4C31-98B2-8DB324D6118A}']
    function Get_fiBinIndex: Integer; safecall;
    function Get_fiContinuation: WideString; safecall;
    function Get_fiCopies: Integer; safecall;
    function Get_fiDescription: WideString; safecall;
    function Get_fiLabelHeight: Integer; safecall;
    function Get_fiLabelInterColGap: Integer; safecall;
    function Get_fiLabelInterRowGap: Integer; safecall;
    function Get_fiLabelLeft: Integer; safecall;
    function Get_fiLabelNoCols: Integer; safecall;
    function Get_fiLabelNoRows: Integer; safecall;
    function Get_fiLabelTop: Integer; safecall;
    function Get_fiLabelWidth: Integer; safecall;
    function Get_fiPaperHeight: Integer; safecall;
    function Get_fiPaperIndex: Integer; safecall;
    function Get_fiPaperWidth: Integer; safecall;
    function Get_fiPortrait: WordBool; safecall;
    function Get_fiPrinterIndex: Integer; safecall;
    function Get_fiType: TFormType; safecall;
    property fiBinIndex: Integer read Get_fiBinIndex;
    property fiContinuation: WideString read Get_fiContinuation;
    property fiCopies: Integer read Get_fiCopies;
    property fiDescription: WideString read Get_fiDescription;
    property fiLabelHeight: Integer read Get_fiLabelHeight;
    property fiLabelInterColGap: Integer read Get_fiLabelInterColGap;
    property fiLabelInterRowGap: Integer read Get_fiLabelInterRowGap;
    property fiLabelLeft: Integer read Get_fiLabelLeft;
    property fiLabelNoCols: Integer read Get_fiLabelNoCols;
    property fiLabelNoRows: Integer read Get_fiLabelNoRows;
    property fiLabelTop: Integer read Get_fiLabelTop;
    property fiLabelWidth: Integer read Get_fiLabelWidth;
    property fiPaperHeight: Integer read Get_fiPaperHeight;
    property fiPaperIndex: Integer read Get_fiPaperIndex;
    property fiPaperWidth: Integer read Get_fiPaperWidth;
    property fiPortrait: WordBool read Get_fiPortrait;
    property fiPrinterIndex: Integer read Get_fiPrinterIndex;
    property fiType: TFormType read Get_fiType;
  end;

// *********************************************************************//
// DispIntf:  IFormDetailsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BF97711-8D24-4C31-98B2-8DB324D6118A}
// *********************************************************************//
  IFormDetailsDisp = dispinterface
    ['{3BF97711-8D24-4C31-98B2-8DB324D6118A}']
    property fiBinIndex: Integer readonly dispid 1;
    property fiContinuation: WideString readonly dispid 2;
    property fiCopies: Integer readonly dispid 3;
    property fiDescription: WideString readonly dispid 4;
    property fiLabelHeight: Integer readonly dispid 5;
    property fiLabelInterColGap: Integer readonly dispid 6;
    property fiLabelInterRowGap: Integer readonly dispid 7;
    property fiLabelLeft: Integer readonly dispid 8;
    property fiLabelNoCols: Integer readonly dispid 9;
    property fiLabelNoRows: Integer readonly dispid 10;
    property fiLabelTop: Integer readonly dispid 11;
    property fiLabelWidth: Integer readonly dispid 12;
    property fiPaperHeight: Integer readonly dispid 13;
    property fiPaperIndex: Integer readonly dispid 14;
    property fiPaperWidth: Integer readonly dispid 15;
    property fiPortrait: WordBool readonly dispid 16;
    property fiPrinterIndex: Integer readonly dispid 17;
    property fiType: TFormType readonly dispid 18;
  end;

// *********************************************************************//
// Interface: IPrintJobDataList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3484478D-6062-4272-B374-F0ABFD9CB491}
// *********************************************************************//
  IPrintJobDataList = interface(IDispatch)
    ['{3484478D-6062-4272-B374-F0ABFD9CB491}']
    function Get_dlCount: Integer; safecall;
    function Get_dlData(Index: Integer): IPrintJobDataDetails; safecall;
    procedure Add(const Data: IDispatch; const SortKey: WideString; const Description: WideString); safecall;
    procedure Clear; safecall;
    procedure Delete(Index: Integer); safecall;
    property dlCount: Integer read Get_dlCount;
    property dlData[Index: Integer]: IPrintJobDataDetails read Get_dlData;
  end;

// *********************************************************************//
// DispIntf:  IPrintJobDataListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3484478D-6062-4272-B374-F0ABFD9CB491}
// *********************************************************************//
  IPrintJobDataListDisp = dispinterface
    ['{3484478D-6062-4272-B374-F0ABFD9CB491}']
    property dlCount: Integer readonly dispid 1;
    property dlData[Index: Integer]: IPrintJobDataDetails readonly dispid 2;
    procedure Add(const Data: IDispatch; const SortKey: WideString; const Description: WideString); dispid 3;
    procedure Clear; dispid 4;
    procedure Delete(Index: Integer); dispid 5;
  end;

// *********************************************************************//
// Interface: IPrintJobDataDetails
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7E80C4C-9332-404F-A5BE-C7BF29EB24E5}
// *********************************************************************//
  IPrintJobDataDetails = interface(IDispatch)
    ['{C7E80C4C-9332-404F-A5BE-C7BF29EB24E5}']
    function Get_ddSortKey: WideString; safecall;
    procedure Set_ddSortKey(const Value: WideString); safecall;
    function Get_ddPosition: Integer; safecall;
    procedure Set_ddPosition(Value: Integer); safecall;
    function Get_ddDescription: WideString; safecall;
    procedure Set_ddDescription(const Value: WideString); safecall;
    function Get_ddFileNo: Integer; safecall;
    function Get_ddIndexNo: Integer; safecall;
    property ddSortKey: WideString read Get_ddSortKey write Set_ddSortKey;
    property ddPosition: Integer read Get_ddPosition write Set_ddPosition;
    property ddDescription: WideString read Get_ddDescription write Set_ddDescription;
    property ddFileNo: Integer read Get_ddFileNo;
    property ddIndexNo: Integer read Get_ddIndexNo;
  end;

// *********************************************************************//
// DispIntf:  IPrintJobDataDetailsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7E80C4C-9332-404F-A5BE-C7BF29EB24E5}
// *********************************************************************//
  IPrintJobDataDetailsDisp = dispinterface
    ['{C7E80C4C-9332-404F-A5BE-C7BF29EB24E5}']
    property ddSortKey: WideString dispid 1;
    property ddPosition: Integer dispid 3;
    property ddDescription: WideString dispid 4;
    property ddFileNo: Integer readonly dispid 2;
    property ddIndexNo: Integer readonly dispid 5;
  end;

// *********************************************************************//
// Interface: IRecordPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16A85C8A-0D4F-453D-931C-E01E8FB00897}
// *********************************************************************//
  IRecordPosition = interface(IDispatch)
    ['{16A85C8A-0D4F-453D-931C-E01E8FB00897}']
    function Get_RecordPosition: Integer; safecall;
    property RecordPosition: Integer read Get_RecordPosition;
  end;

// *********************************************************************//
// DispIntf:  IRecordPositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16A85C8A-0D4F-453D-931C-E01E8FB00897}
// *********************************************************************//
  IRecordPositionDisp = dispinterface
    ['{16A85C8A-0D4F-453D-931C-E01E8FB00897}']
    property RecordPosition: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: ITransactionLineSerialBatch2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A0E39A1-EC0B-41E2-B0B3-1B326565F6BC}
// *********************************************************************//
  ITransactionLineSerialBatch2 = interface(ITransactionLineSerialBatch)
    ['{7A0E39A1-EC0B-41E2-B0B3-1B326565F6BC}']
    function Print(PrintAs: TTransLineSerialPrintMode): IPrintJob; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineSerialBatch2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A0E39A1-EC0B-41E2-B0B3-1B326565F6BC}
// *********************************************************************//
  ITransactionLineSerialBatch2Disp = dispinterface
    ['{7A0E39A1-EC0B-41E2-B0B3-1B326565F6BC}']
    function Print(PrintAs: TTransLineSerialPrintMode): IPrintJob; dispid 83;
    property tlCount: Integer readonly dispid 1;
    property tlUsedSerialBatch[Index: Integer]: ISerialBatchDetails readonly dispid 2;
    property tlUsesSerialBatchNo: WordBool readonly dispid 3;
    function Add: ISerialBatch; dispid 4;
    procedure Refresh; dispid 6;
    function UseSerialBatch(const SerialBatch: ISerialBatchDetails): Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: ITransactionDetails
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2805C4B3-A247-4EC1-8A84-9056983BC8AC}
// *********************************************************************//
  ITransactionDetails = interface(ITransactionLine2)
    ['{2805C4B3-A247-4EC1-8A84-9056983BC8AC}']
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    function Get_Index: TTransactionDetailIndex; safecall;
    procedure Set_Index(Value: TTransactionDetailIndex); safecall;
    function BuildPostRunNoIndex(RunNo: Integer; NomCode: Integer): WideString; safecall;
    function BuildNomCodeIndex(NomCode: Integer; NomMode: TNominalModeType; Currency: Integer; 
                               Year: Integer; Period: Integer; PostRun: Integer): WideString; safecall;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; safecall;
    function BuildLineClassIndex(const LineClass: WideString; const StockCode: WideString; 
                                 const LineDate: WideString): WideString; safecall;
    function BuildFolioIndex(FolioNo: Integer; LineNo: Integer): WideString; safecall;
    function BuildFolioAbsLineNoIndex(FolioNo: Integer; AbsLineNo: Integer): WideString; safecall;
    function BuildLineClassAcIndex(const LineClass: WideString; const acCode: WideString; 
                                   const StockCode: WideString; const LineDate: WideString): WideString; safecall;
    function BuildRecStatusIndex(NomCode: Integer; NomMode: TNominalModeType; 
                                 RecStatus: TReconcileStatusType; Currency: Integer; Year: Integer; 
                                 Period: Integer): WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function StepFirst: Integer; safecall;
    function StepPrevious: Integer; safecall;
    function StepNext: Integer; safecall;
    function StepLast: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position;
    property Index: TTransactionDetailIndex read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  ITransactionDetailsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2805C4B3-A247-4EC1-8A84-9056983BC8AC}
// *********************************************************************//
  ITransactionDetailsDisp = dispinterface
    ['{2805C4B3-A247-4EC1-8A84-9056983BC8AC}']
    property KeyString: WideString readonly dispid 70;
    property Position: Integer readonly dispid 71;
    property Index: TTransactionDetailIndex dispid 73;
    function BuildPostRunNoIndex(RunNo: Integer; NomCode: Integer): WideString; dispid 90;
    function BuildNomCodeIndex(NomCode: Integer; NomMode: TNominalModeType; Currency: Integer; 
                               Year: Integer; Period: Integer; PostRun: Integer): WideString; dispid 91;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; dispid 92;
    function BuildLineClassIndex(const LineClass: WideString; const StockCode: WideString; 
                                 const LineDate: WideString): WideString; dispid 93;
    function BuildFolioIndex(FolioNo: Integer; LineNo: Integer): WideString; dispid 95;
    function BuildFolioAbsLineNoIndex(FolioNo: Integer; AbsLineNo: Integer): WideString; dispid 96;
    function BuildLineClassAcIndex(const LineClass: WideString; const acCode: WideString; 
                                   const StockCode: WideString; const LineDate: WideString): WideString; dispid 97;
    function BuildRecStatusIndex(NomCode: Integer; NomMode: TNominalModeType; 
                                 RecStatus: TReconcileStatusType; Currency: Integer; Year: Integer; 
                                 Period: Integer): WideString; dispid 98;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: IJobType2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C960615B-0999-4339-904B-8499A79132BC}
// *********************************************************************//
  IJobType2 = interface(IJobType)
    ['{C960615B-0999-4339-904B-8499A79132BC}']
    function Update: IJobType2; safecall;
    function Add: IJobType2; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
  end;

// *********************************************************************//
// DispIntf:  IJobType2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C960615B-0999-4339-904B-8499A79132BC}
// *********************************************************************//
  IJobType2Disp = dispinterface
    ['{C960615B-0999-4339-904B-8499A79132BC}']
    function Update: IJobType2; dispid 7;
    function Add: IJobType2; dispid 8;
    function Save: Integer; dispid 9;
    procedure Cancel; dispid 10;
    property jtCode: WideString dispid 1;
    property jtName: WideString dispid 2;
    property Index: TJobTypeIndex dispid 3;
    function Clone: IJobType; dispid 4;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 5;
    function BuildNameIndex(const Name: WideString): WideString; dispid 6;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function RestorePosition: Integer; dispid 16777225;
  end;

// *********************************************************************//
// Interface: IJobAnalysis2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F67DE83A-B979-45D3-AB66-4F6C6661D978}
// *********************************************************************//
  IJobAnalysis2 = interface(IJobAnalysis)
    ['{F67DE83A-B979-45D3-AB66-4F6C6661D978}']
    function Update: IJobAnalysis2; safecall;
    function Add: IJobAnalysis2; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function Get_anCISTaxRate: TCISTaxType; safecall;
    procedure Set_anCISTaxRate(Value: TCISTaxType); safecall;
    function Get_anUplift: Double; safecall;
    procedure Set_anUplift(Value: Double); safecall;
    function Get_anUpliftGL: Integer; safecall;
    procedure Set_anUpliftGL(Value: Integer); safecall;
    property anCISTaxRate: TCISTaxType read Get_anCISTaxRate write Set_anCISTaxRate;
    property anUplift: Double read Get_anUplift write Set_anUplift;
    property anUpliftGL: Integer read Get_anUpliftGL write Set_anUpliftGL;
  end;

// *********************************************************************//
// DispIntf:  IJobAnalysis2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F67DE83A-B979-45D3-AB66-4F6C6661D978}
// *********************************************************************//
  IJobAnalysis2Disp = dispinterface
    ['{F67DE83A-B979-45D3-AB66-4F6C6661D978}']
    function Update: IJobAnalysis2; dispid 101;
    function Add: IJobAnalysis2; dispid 102;
    function Save: Integer; dispid 103;
    procedure Cancel; dispid 104;
    property anCISTaxRate: TCISTaxType dispid 15;
    property anUplift: Double dispid 16;
    property anUpliftGL: Integer dispid 17;
    property anCode: WideString dispid 1;
    property anDescription: WideString dispid 2;
    property anType: TAnalysisType dispid 3;
    property anCategory: TAnalysisCategory dispid 4;
    property anWIPGL: Integer dispid 5;
    property anPandLGL: Integer dispid 6;
    property anLineType: TTransactionLineType dispid 7;
    property Index: TJobAnalysisIndex dispid 8;
    function Clone: IJobAnalysis; dispid 9;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 10;
    function BuildDescriptionIndex(const Description: WideString): WideString; dispid 11;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property anTypeString: WideString readonly dispid 12;
    property anCategoryString: WideString readonly dispid 13;
    property anLineTypeString: WideString readonly dispid 14;
  end;

// *********************************************************************//
// Interface: IEmployee2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65ADA3D4-0890-44A9-9D10-F7163A495B1A}
// *********************************************************************//
  IEmployee2 = interface(IEmployee)
    ['{65ADA3D4-0890-44A9-9D10-F7163A495B1A}']
    function Update: IEmployee2; safecall;
    function Add: IEmployee2; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function Get_emSelfBilling: WordBool; safecall;
    procedure Set_emSelfBilling(Value: WordBool); safecall;
    function Get_emGroupCertificate: WordBool; safecall;
    procedure Set_emGroupCertificate(Value: WordBool); safecall;
    function Get_emCertificateType: TEmployeeCertificateType; safecall;
    procedure Set_emCertificateType(Value: TEmployeeCertificateType); safecall;
    function Get_emUserField3: WideString; safecall;
    procedure Set_emUserField3(const Value: WideString); safecall;
    function Get_emUserField4: WideString; safecall;
    procedure Set_emUserField4(const Value: WideString); safecall;
    function Get_emNISerialNo: WideString; safecall;
    procedure Set_emNISerialNo(const Value: WideString); safecall;
    function Get_emLinks: ILinks; safecall;
    property emSelfBilling: WordBool read Get_emSelfBilling write Set_emSelfBilling;
    property emGroupCertificate: WordBool read Get_emGroupCertificate write Set_emGroupCertificate;
    property emCertificateType: TEmployeeCertificateType read Get_emCertificateType write Set_emCertificateType;
    property emUserField3: WideString read Get_emUserField3 write Set_emUserField3;
    property emUserField4: WideString read Get_emUserField4 write Set_emUserField4;
    property emNISerialNo: WideString read Get_emNISerialNo write Set_emNISerialNo;
    property emLinks: ILinks read Get_emLinks;
  end;

// *********************************************************************//
// DispIntf:  IEmployee2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65ADA3D4-0890-44A9-9D10-F7163A495B1A}
// *********************************************************************//
  IEmployee2Disp = dispinterface
    ['{65ADA3D4-0890-44A9-9D10-F7163A495B1A}']
    function Update: IEmployee2; dispid 23;
    function Add: IEmployee2; dispid 24;
    function Save: Integer; dispid 25;
    procedure Cancel; dispid 26;
    property emSelfBilling: WordBool dispid 27;
    property emGroupCertificate: WordBool dispid 28;
    property emCertificateType: TEmployeeCertificateType dispid 29;
    property emUserField3: WideString dispid 30;
    property emUserField4: WideString dispid 31;
    property emNISerialNo: WideString dispid 32;
    property emLinks: ILinks readonly dispid 33;
    property emCode: WideString dispid 1;
    property emSupplier: WideString dispid 2;
    property emName: WideString dispid 3;
    property emAddress: IAddress readonly dispid 4;
    property emPhone: WideString dispid 5;
    property emFax: WideString dispid 6;
    property emMobile: WideString dispid 7;
    property emType: TEmployeeType dispid 8;
    property emPayrollNumber: WideString dispid 9;
    property emCertificateNumber: WideString dispid 10;
    property emCertificateExpiry: WideString dispid 11;
    property emUserField1: WideString dispid 12;
    property emUserField2: WideString dispid 13;
    property emTimeRates: ITimeRates readonly dispid 14;
    property emCostCentre: WideString dispid 15;
    property emDepartment: WideString dispid 16;
    property emOwnTimeRatesOnly: WordBool dispid 17;
    function Clone: IEmployee; dispid 18;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 19;
    function BuildSupplierIndex(const Supplier: WideString): WideString; dispid 20;
    property Index: TEmployeeIndex dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property emNotes: INotes readonly dispid 22;
  end;

// *********************************************************************//
// Interface: ITimeRates2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {803B14A3-B083-4F79-845D-CE2F4BAD5A01}
// *********************************************************************//
  ITimeRates2 = interface(ITimeRates)
    ['{803B14A3-B083-4F79-845D-CE2F4BAD5A01}']
    function Update: ITimeRates2; safecall;
    function Add: ITimeRates2; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITimeRates2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {803B14A3-B083-4F79-845D-CE2F4BAD5A01}
// *********************************************************************//
  ITimeRates2Disp = dispinterface
    ['{803B14A3-B083-4F79-845D-CE2F4BAD5A01}']
    function Update: ITimeRates2; dispid 1;
    function Add: ITimeRates2; dispid 12;
    function Save: Integer; dispid 13;
    procedure Cancel; dispid 16;
    property trRateCode: WideString dispid 7;
    property trEmployeeCode: WideString dispid 6;
    property trCostCurrency: Smallint dispid 9;
    property trTimeCost: Double dispid 2;
    property trChargeCurrency: Smallint dispid 10;
    property trTimeCharge: Double dispid 3;
    property trAnalysisCode: WideString dispid 4;
    property trPayrollCode: Integer dispid 5;
    property trDescription: WideString dispid 8;
    function Clone: ITimeRates; dispid 11;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property trPayFactor: Smallint dispid 14;
    property trPayRate: Smallint dispid 15;
  end;

// *********************************************************************//
// Interface: IJobActual
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D109DE0-434A-4D62-AEEF-C9C535DAC863}
// *********************************************************************//
  IJobActual = interface(IDispatch)
    ['{0D109DE0-434A-4D62-AEEF-C9C535DAC863}']
    function Get_jaAnalysisCode: WideString; safecall;
    function Get_jaCurrency: Integer; safecall;
    function Get_jaPeriod: Integer; safecall;
    function Get_jaPosted: WordBool; safecall;
    function Get_jaLineFolio: Integer; safecall;
    function Get_jaLineNumber: Integer; safecall;
    function Get_jaDocRef: WideString; safecall;
    function Get_jaStockCode: WideString; safecall;
    function Get_jaDate: WideString; safecall;
    function Get_jaQty: Double; safecall;
    function Get_jaCost: Double; safecall;
    function Get_jaCharge: Double; safecall;
    function Get_jaInvoiced: WordBool; safecall;
    function Get_jaInvoiceRef: WideString; safecall;
    function Get_jaEmployeeCode: WideString; safecall;
    function Get_jaAnalysisCategory: TAnalysisCategory; safecall;
    function Get_jaPostedRun: Integer; safecall;
    function Get_jaReverseWIP: WordBool; safecall;
    function Get_jaReconciled: WordBool; safecall;
    function Get_jaDocType: TDocTypes; safecall;
    function Get_jaChargeCurrency: Integer; safecall;
    function Get_jaAccountCode: WideString; safecall;
    function Get_jaHoldFlag: Integer; safecall;
    function Get_jaPostedToStock: WordBool; safecall;
    function Get_jaCompanyRate: Double; safecall;
    function Get_jaDailyRate: Double; safecall;
    function Get_jaTagged: WordBool; safecall;
    function Get_jaGLCode: Integer; safecall;
    function Get_jaUseORate: Integer; safecall;
    function Get_jaTriangulation: ICurrencyTriangulation; safecall;
    function Get_jaPriceMultiplier: Double; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_Position: Integer; safecall;
    function Get_jaYear: Integer; safecall;
    function Clone: IJobActual; safecall;
    function Get_Index: TJobActualIndexType; safecall;
    procedure Set_Index(Value: TJobActualIndexType); safecall;
    function BuildLedgerIndex(Posted: WordBool; Currency: Byte; Invoiced: WordBool): WideString; safecall;
    function BuildAnalysisCodeIndex(const AnalysisCode: WideString): WideString; safecall;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; safecall;
    function BuildAnalysisCategoryIndex(AnalysisType: TAnalysisCategory): WideString; safecall;
    function UpdateCharge(NewValue: Double): Integer; safecall;
    function Get_jaUpliftTotal: Double; safecall;
    function Get_jaUpliftGL: Integer; safecall;
    property jaAnalysisCode: WideString read Get_jaAnalysisCode;
    property jaCurrency: Integer read Get_jaCurrency;
    property jaPeriod: Integer read Get_jaPeriod;
    property jaPosted: WordBool read Get_jaPosted;
    property jaLineFolio: Integer read Get_jaLineFolio;
    property jaLineNumber: Integer read Get_jaLineNumber;
    property jaDocRef: WideString read Get_jaDocRef;
    property jaStockCode: WideString read Get_jaStockCode;
    property jaDate: WideString read Get_jaDate;
    property jaQty: Double read Get_jaQty;
    property jaCost: Double read Get_jaCost;
    property jaCharge: Double read Get_jaCharge;
    property jaInvoiced: WordBool read Get_jaInvoiced;
    property jaInvoiceRef: WideString read Get_jaInvoiceRef;
    property jaEmployeeCode: WideString read Get_jaEmployeeCode;
    property jaAnalysisCategory: TAnalysisCategory read Get_jaAnalysisCategory;
    property jaPostedRun: Integer read Get_jaPostedRun;
    property jaReverseWIP: WordBool read Get_jaReverseWIP;
    property jaReconciled: WordBool read Get_jaReconciled;
    property jaDocType: TDocTypes read Get_jaDocType;
    property jaChargeCurrency: Integer read Get_jaChargeCurrency;
    property jaAccountCode: WideString read Get_jaAccountCode;
    property jaHoldFlag: Integer read Get_jaHoldFlag;
    property jaPostedToStock: WordBool read Get_jaPostedToStock;
    property jaCompanyRate: Double read Get_jaCompanyRate;
    property jaDailyRate: Double read Get_jaDailyRate;
    property jaTagged: WordBool read Get_jaTagged;
    property jaGLCode: Integer read Get_jaGLCode;
    property jaUseORate: Integer read Get_jaUseORate;
    property jaTriangulation: ICurrencyTriangulation read Get_jaTriangulation;
    property jaPriceMultiplier: Double read Get_jaPriceMultiplier;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property jaYear: Integer read Get_jaYear;
    property Index: TJobActualIndexType read Get_Index write Set_Index;
    property jaUpliftTotal: Double read Get_jaUpliftTotal;
    property jaUpliftGL: Integer read Get_jaUpliftGL;
  end;

// *********************************************************************//
// DispIntf:  IJobActualDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D109DE0-434A-4D62-AEEF-C9C535DAC863}
// *********************************************************************//
  IJobActualDisp = dispinterface
    ['{0D109DE0-434A-4D62-AEEF-C9C535DAC863}']
    property jaAnalysisCode: WideString readonly dispid 1;
    property jaCurrency: Integer readonly dispid 2;
    property jaPeriod: Integer readonly dispid 3;
    property jaPosted: WordBool readonly dispid 4;
    property jaLineFolio: Integer readonly dispid 5;
    property jaLineNumber: Integer readonly dispid 6;
    property jaDocRef: WideString readonly dispid 7;
    property jaStockCode: WideString readonly dispid 8;
    property jaDate: WideString readonly dispid 9;
    property jaQty: Double readonly dispid 10;
    property jaCost: Double readonly dispid 11;
    property jaCharge: Double readonly dispid 12;
    property jaInvoiced: WordBool readonly dispid 13;
    property jaInvoiceRef: WideString readonly dispid 14;
    property jaEmployeeCode: WideString readonly dispid 15;
    property jaAnalysisCategory: TAnalysisCategory readonly dispid 16;
    property jaPostedRun: Integer readonly dispid 17;
    property jaReverseWIP: WordBool readonly dispid 18;
    property jaReconciled: WordBool readonly dispid 19;
    property jaDocType: TDocTypes readonly dispid 20;
    property jaChargeCurrency: Integer readonly dispid 21;
    property jaAccountCode: WideString readonly dispid 22;
    property jaHoldFlag: Integer readonly dispid 23;
    property jaPostedToStock: WordBool readonly dispid 24;
    property jaCompanyRate: Double readonly dispid 25;
    property jaDailyRate: Double readonly dispid 26;
    property jaTagged: WordBool readonly dispid 27;
    property jaGLCode: Integer readonly dispid 28;
    property jaUseORate: Integer readonly dispid 29;
    property jaTriangulation: ICurrencyTriangulation readonly dispid 30;
    property jaPriceMultiplier: Double readonly dispid 31;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property jaYear: Integer readonly dispid 32;
    function Clone: IJobActual; dispid 33;
    property Index: TJobActualIndexType dispid 34;
    function BuildLedgerIndex(Posted: WordBool; Currency: Byte; Invoiced: WordBool): WideString; dispid 35;
    function BuildAnalysisCodeIndex(const AnalysisCode: WideString): WideString; dispid 36;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; dispid 37;
    function BuildAnalysisCategoryIndex(AnalysisType: TAnalysisCategory): WideString; dispid 39;
    function UpdateCharge(NewValue: Double): Integer; dispid 40;
    property jaUpliftTotal: Double readonly dispid 38;
    property jaUpliftGL: Integer readonly dispid 41;
  end;

// *********************************************************************//
// Interface: ICurrencyTriangulation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8428ED69-BC3A-4360-9717-7B940F6CBB11}
// *********************************************************************//
  ICurrencyTriangulation = interface(IDispatch)
    ['{8428ED69-BC3A-4360-9717-7B940F6CBB11}']
    function Get_tcRate: Double; safecall;
    function Get_tcEuro: Byte; safecall;
    function Get_tcInvert: WordBool; safecall;
    function Get_tcFloat: WordBool; safecall;
    property tcRate: Double read Get_tcRate;
    property tcEuro: Byte read Get_tcEuro;
    property tcInvert: WordBool read Get_tcInvert;
    property tcFloat: WordBool read Get_tcFloat;
  end;

// *********************************************************************//
// DispIntf:  ICurrencyTriangulationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8428ED69-BC3A-4360-9717-7B940F6CBB11}
// *********************************************************************//
  ICurrencyTriangulationDisp = dispinterface
    ['{8428ED69-BC3A-4360-9717-7B940F6CBB11}']
    property tcRate: Double readonly dispid 1;
    property tcEuro: Byte readonly dispid 2;
    property tcInvert: WordBool readonly dispid 3;
    property tcFloat: WordBool readonly dispid 4;
  end;

// *********************************************************************//
// Interface: IJobRetention
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {94F197B6-B1B4-490B-AA5F-FC51DECA0968}
// *********************************************************************//
  IJobRetention = interface(IDispatch)
    ['{94F197B6-B1B4-490B-AA5F-FC51DECA0968}']
    function Get_jrtAnalysisCode: WideString; safecall;
    procedure Set_jrtAnalysisCode(const Value: WideString); safecall;
    function Get_jrtOriginalCurrency: Integer; safecall;
    function Get_jrtYear: Integer; safecall;
    procedure Set_jrtYear(Value: Integer); safecall;
    function Get_jrtPeriod: Integer; safecall;
    procedure Set_jrtPeriod(Value: Integer); safecall;
    function Get_jrtPosted: WordBool; safecall;
    function Get_jrtPercent: Double; safecall;
    procedure Set_jrtPercent(Value: Double); safecall;
    function Get_jrtCurrency: Integer; safecall;
    procedure Set_jrtCurrency(Value: Integer); safecall;
    function Get_jrtValue: Double; safecall;
    procedure Set_jrtValue(Value: Double); safecall;
    function Get_jrtJobCode: WideString; safecall;
    procedure Set_jrtJobCode(const Value: WideString); safecall;
    function Get_jrtCreditDoc: WideString; safecall;
    function Get_jrtExpiryDate: WideString; safecall;
    procedure Set_jrtExpiryDate(const Value: WideString); safecall;
    function Get_jrtInvoiced: WordBool; safecall;
    procedure Set_jrtInvoiced(Value: WordBool); safecall;
    function Get_jrtAcCode: WideString; safecall;
    procedure Set_jrtAcCode(const Value: WideString); safecall;
    function Get_jrtEntryDate: WideString; safecall;
    procedure Set_jrtEntryDate(const Value: WideString); safecall;
    function Get_jrtCostCentre: WideString; safecall;
    procedure Set_jrtCostCentre(const Value: WideString); safecall;
    function Get_jrtDepartment: WideString; safecall;
    procedure Set_jrtDepartment(const Value: WideString); safecall;
    function Get_jrtDefVatCode: WideString; safecall;
    procedure Set_jrtDefVatCode(const Value: WideString); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function Get_Position: Integer; safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Add: IJobRetention; safecall;
    function Save: Integer; safecall;
    function Delete: Integer; safecall;
    function UpdateExpiryDate(const NewDate: WideString): Integer; safecall;
    function Clone: IJobRetention; safecall;
    function Get_Index: TJobRetentionIndexType; safecall;
    procedure Set_Index(Value: TJobRetentionIndexType); safecall;
    function BuildInvoicedIndex(Invoiced: WordBool; const ADate: WideString): WideString; safecall;
    function BuildDateIndex(const ADate: WideString): WideString; safecall;
    function Get_jrtTransaction: WideString; safecall;
    procedure Set_jrtTransaction(const Value: WideString); safecall;
    procedure ImportDefaults; safecall;
    function Get_jrtTransactionI: ITransaction; safecall;
    function Get_jrtAcCodeI: IAccount; safecall;
    function Get_jrtCreditDocI: ITransaction; safecall;
    function Get_jrtCISTax: Double; safecall;
    function Get_jrtCISGross: Double; safecall;
    function Get_jrtCISEmployee: WideString; safecall;
    property jrtAnalysisCode: WideString read Get_jrtAnalysisCode write Set_jrtAnalysisCode;
    property jrtOriginalCurrency: Integer read Get_jrtOriginalCurrency;
    property jrtYear: Integer read Get_jrtYear write Set_jrtYear;
    property jrtPeriod: Integer read Get_jrtPeriod write Set_jrtPeriod;
    property jrtPosted: WordBool read Get_jrtPosted;
    property jrtPercent: Double read Get_jrtPercent write Set_jrtPercent;
    property jrtCurrency: Integer read Get_jrtCurrency write Set_jrtCurrency;
    property jrtValue: Double read Get_jrtValue write Set_jrtValue;
    property jrtJobCode: WideString read Get_jrtJobCode write Set_jrtJobCode;
    property jrtCreditDoc: WideString read Get_jrtCreditDoc;
    property jrtExpiryDate: WideString read Get_jrtExpiryDate write Set_jrtExpiryDate;
    property jrtInvoiced: WordBool read Get_jrtInvoiced write Set_jrtInvoiced;
    property jrtAcCode: WideString read Get_jrtAcCode write Set_jrtAcCode;
    property jrtEntryDate: WideString read Get_jrtEntryDate write Set_jrtEntryDate;
    property jrtCostCentre: WideString read Get_jrtCostCentre write Set_jrtCostCentre;
    property jrtDepartment: WideString read Get_jrtDepartment write Set_jrtDepartment;
    property jrtDefVatCode: WideString read Get_jrtDefVatCode write Set_jrtDefVatCode;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property Index: TJobRetentionIndexType read Get_Index write Set_Index;
    property jrtTransaction: WideString read Get_jrtTransaction write Set_jrtTransaction;
    property jrtTransactionI: ITransaction read Get_jrtTransactionI;
    property jrtAcCodeI: IAccount read Get_jrtAcCodeI;
    property jrtCreditDocI: ITransaction read Get_jrtCreditDocI;
    property jrtCISTax: Double read Get_jrtCISTax;
    property jrtCISGross: Double read Get_jrtCISGross;
    property jrtCISEmployee: WideString read Get_jrtCISEmployee;
  end;

// *********************************************************************//
// DispIntf:  IJobRetentionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {94F197B6-B1B4-490B-AA5F-FC51DECA0968}
// *********************************************************************//
  IJobRetentionDisp = dispinterface
    ['{94F197B6-B1B4-490B-AA5F-FC51DECA0968}']
    property jrtAnalysisCode: WideString dispid 1;
    property jrtOriginalCurrency: Integer readonly dispid 2;
    property jrtYear: Integer dispid 3;
    property jrtPeriod: Integer dispid 4;
    property jrtPosted: WordBool readonly dispid 5;
    property jrtPercent: Double dispid 6;
    property jrtCurrency: Integer dispid 7;
    property jrtValue: Double dispid 8;
    property jrtJobCode: WideString dispid 9;
    property jrtCreditDoc: WideString readonly dispid 10;
    property jrtExpiryDate: WideString dispid 11;
    property jrtInvoiced: WordBool dispid 12;
    property jrtAcCode: WideString dispid 13;
    property jrtEntryDate: WideString dispid 14;
    property jrtCostCentre: WideString dispid 15;
    property jrtDepartment: WideString dispid 16;
    property jrtDefVatCode: WideString dispid 18;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IJobRetention; dispid 19;
    function Save: Integer; dispid 20;
    function Delete: Integer; dispid 21;
    function UpdateExpiryDate(const NewDate: WideString): Integer; dispid 22;
    function Clone: IJobRetention; dispid 17;
    property Index: TJobRetentionIndexType dispid 23;
    function BuildInvoicedIndex(Invoiced: WordBool; const ADate: WideString): WideString; dispid 24;
    function BuildDateIndex(const ADate: WideString): WideString; dispid 25;
    property jrtTransaction: WideString dispid 26;
    procedure ImportDefaults; dispid 27;
    property jrtTransactionI: ITransaction readonly dispid 28;
    property jrtAcCodeI: IAccount readonly dispid 29;
    property jrtCreditDocI: ITransaction readonly dispid 30;
    property jrtCISTax: Double readonly dispid 31;
    property jrtCISGross: Double readonly dispid 32;
    property jrtCISEmployee: WideString readonly dispid 33;
  end;

// *********************************************************************//
// Interface: IJobBudget
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22327D33-8880-4BD8-84A1-4786456DEBEF}
// *********************************************************************//
  IJobBudget = interface(IDispatch)
    ['{22327D33-8880-4BD8-84A1-4786456DEBEF}']
    function Get_jbAnalysisType: TAnalysisType; safecall;
    procedure Set_jbAnalysisType(Value: TAnalysisType); safecall;
    function Get_jbUnitPrice: Double; safecall;
    procedure Set_jbUnitPrice(Value: Double); safecall;
    function Get_jbOriginalQty: Double; safecall;
    procedure Set_jbOriginalQty(Value: Double); safecall;
    function Get_jbRevisedQty: Double; safecall;
    procedure Set_jbRevisedQty(Value: Double); safecall;
    function Get_jbOriginalValue: Double; safecall;
    procedure Set_jbOriginalValue(Value: Double); safecall;
    function Get_jbRevisedValue: Double; safecall;
    procedure Set_jbRevisedValue(Value: Double); safecall;
    function Get_jbPeriod: Integer; safecall;
    procedure Set_jbPeriod(Value: Integer); safecall;
    function Get_jbYear: Integer; safecall;
    procedure Set_jbYear(Value: Integer); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function Get_Position: Integer; safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function Get_jbOriginalValuation: Double; safecall;
    procedure Set_jbOriginalValuation(Value: Double); safecall;
    function Get_jbRevisedValuation: Double; safecall;
    procedure Set_jbRevisedValuation(Value: Double); safecall;
    function Get_jbUplift: Double; safecall;
    procedure Set_jbUplift(Value: Double); safecall;
    function Get_jbCostOverhead: Double; safecall;
    procedure Set_jbCostOverhead(Value: Double); safecall;
    property jbAnalysisType: TAnalysisType read Get_jbAnalysisType write Set_jbAnalysisType;
    property jbUnitPrice: Double read Get_jbUnitPrice write Set_jbUnitPrice;
    property jbOriginalQty: Double read Get_jbOriginalQty write Set_jbOriginalQty;
    property jbRevisedQty: Double read Get_jbRevisedQty write Set_jbRevisedQty;
    property jbOriginalValue: Double read Get_jbOriginalValue write Set_jbOriginalValue;
    property jbRevisedValue: Double read Get_jbRevisedValue write Set_jbRevisedValue;
    property jbPeriod: Integer read Get_jbPeriod write Set_jbPeriod;
    property jbYear: Integer read Get_jbYear write Set_jbYear;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property jbOriginalValuation: Double read Get_jbOriginalValuation write Set_jbOriginalValuation;
    property jbRevisedValuation: Double read Get_jbRevisedValuation write Set_jbRevisedValuation;
    property jbUplift: Double read Get_jbUplift write Set_jbUplift;
    property jbCostOverhead: Double read Get_jbCostOverhead write Set_jbCostOverhead;
  end;

// *********************************************************************//
// DispIntf:  IJobBudgetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22327D33-8880-4BD8-84A1-4786456DEBEF}
// *********************************************************************//
  IJobBudgetDisp = dispinterface
    ['{22327D33-8880-4BD8-84A1-4786456DEBEF}']
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: ISummaryJobBudget
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA11D8A4-6AC8-489B-BE20-3C866A06EEB5}
// *********************************************************************//
  ISummaryJobBudget = interface(IJobBudget)
    ['{EA11D8A4-6AC8-489B-BE20-3C866A06EEB5}']
    function Get_jbCategory: TJobBudgetCategoryType; safecall;
    function Get_jbCategoryString: WideString; safecall;
    function BuildCategoryIndex(Category: TJobBudgetCategoryType): WideString; safecall;
    function Update: ISummaryJobBudget; safecall;
    function Clone: ISummaryJobBudget; safecall;
    function Get_Index: TSummaryJobBudgetIndex; safecall;
    procedure Set_Index(Value: TSummaryJobBudgetIndex); safecall;
    property jbCategory: TJobBudgetCategoryType read Get_jbCategory;
    property jbCategoryString: WideString read Get_jbCategoryString;
    property Index: TSummaryJobBudgetIndex read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  ISummaryJobBudgetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA11D8A4-6AC8-489B-BE20-3C866A06EEB5}
// *********************************************************************//
  ISummaryJobBudgetDisp = dispinterface
    ['{EA11D8A4-6AC8-489B-BE20-3C866A06EEB5}']
    property jbCategory: TJobBudgetCategoryType readonly dispid 14;
    property jbCategoryString: WideString readonly dispid 15;
    function BuildCategoryIndex(Category: TJobBudgetCategoryType): WideString; dispid 1;
    function Update: ISummaryJobBudget; dispid 2;
    function Clone: ISummaryJobBudget; dispid 3;
    property Index: TSummaryJobBudgetIndex dispid 17;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: IAnalysisJobBudget
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13559D37-9896-4447-AB78-F17CFEEBAFDA}
// *********************************************************************//
  IAnalysisJobBudget = interface(IJobBudget)
    ['{13559D37-9896-4447-AB78-F17CFEEBAFDA}']
    function Get_jbAnalysisCode: WideString; safecall;
    procedure Set_jbAnalysisCode(const Value: WideString); safecall;
    function Get_jbAnalysisCodeI: IJobAnalysis; safecall;
    function Get_jbFolio: Integer; safecall;
    function Get_jbRecharge: WordBool; safecall;
    procedure Set_jbRecharge(Value: WordBool); safecall;
    function Add: IAnalysisJobBudget; safecall;
    function Delete: Integer; safecall;
    function BuildAnalysisCodeIndex(const AnalysisCode: WideString): WideString; safecall;
    function Update: IAnalysisJobBudget; safecall;
    function Clone: IAnalysisJobBudget; safecall;
    function Get_jbCategory: TJobBudgetCategoryType; safecall;
    procedure Set_jbCategory(Value: TJobBudgetCategoryType); safecall;
    function Get_Index: TAnalysisJobBudgetIndex; safecall;
    procedure Set_Index(Value: TAnalysisJobBudgetIndex); safecall;
    function BuildAnalysisCategoryIndex(Category: TJobBudgetCategoryType): WideString; safecall;
    property jbAnalysisCode: WideString read Get_jbAnalysisCode write Set_jbAnalysisCode;
    property jbAnalysisCodeI: IJobAnalysis read Get_jbAnalysisCodeI;
    property jbFolio: Integer read Get_jbFolio;
    property jbRecharge: WordBool read Get_jbRecharge write Set_jbRecharge;
    property jbCategory: TJobBudgetCategoryType read Get_jbCategory write Set_jbCategory;
    property Index: TAnalysisJobBudgetIndex read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  IAnalysisJobBudgetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13559D37-9896-4447-AB78-F17CFEEBAFDA}
// *********************************************************************//
  IAnalysisJobBudgetDisp = dispinterface
    ['{13559D37-9896-4447-AB78-F17CFEEBAFDA}']
    property jbAnalysisCode: WideString dispid 14;
    property jbAnalysisCodeI: IJobAnalysis readonly dispid 15;
    property jbFolio: Integer readonly dispid 18;
    property jbRecharge: WordBool dispid 19;
    function Add: IAnalysisJobBudget; dispid 1;
    function Delete: Integer; dispid 20;
    function BuildAnalysisCodeIndex(const AnalysisCode: WideString): WideString; dispid 11;
    function Update: IAnalysisJobBudget; dispid 2;
    function Clone: IAnalysisJobBudget; dispid 3;
    property jbCategory: TJobBudgetCategoryType dispid 21;
    property Index: TAnalysisJobBudgetIndex dispid 17;
    function BuildAnalysisCategoryIndex(Category: TJobBudgetCategoryType): WideString; dispid 22;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: ITimeAndStockJobBudget
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8070A3EF-BCC8-45D9-B3CA-A2622CAAB81B}
// *********************************************************************//
  ITimeAndStockJobBudget = interface(IJobBudget)
    ['{8070A3EF-BCC8-45D9-B3CA-A2622CAAB81B}']
    function Get_jbPayRateMode: WordBool; safecall;
    procedure Set_jbPayRateMode(Value: WordBool); safecall;
    function Get_jbPayRateCurrency: Integer; safecall;
    procedure Set_jbPayRateCurrency(Value: Integer); safecall;
    function Get_jbStockOrRateCode: WideString; safecall;
    procedure Set_jbStockOrRateCode(const Value: WideString); safecall;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; safecall;
    function BuildTimeRateIndex(const TimeRate: WideString): WideString; safecall;
    function Get_jbAnalysisCode: WideString; safecall;
    procedure Set_jbAnalysisCode(const Value: WideString); safecall;
    function Get_jbAnalysisCodeI: IJobAnalysis; safecall;
    function Get_jbFolio: Integer; safecall;
    function Get_jbRecharge: WordBool; safecall;
    procedure Set_jbRecharge(Value: WordBool); safecall;
    function Add: ITimeAndStockJobBudget; safecall;
    function Delete: Integer; safecall;
    function Update: ITimeAndStockJobBudget; safecall;
    function Clone: ITimeAndStockJobBudget; safecall;
    function Get_jbCategory: TJobBudgetCategoryType; safecall;
    procedure Set_jbCategory(Value: TJobBudgetCategoryType); safecall;
    function Get_Index: TTimeAndStockJobBudgetIndex; safecall;
    procedure Set_Index(Value: TTimeAndStockJobBudgetIndex); safecall;
    property jbPayRateMode: WordBool read Get_jbPayRateMode write Set_jbPayRateMode;
    property jbPayRateCurrency: Integer read Get_jbPayRateCurrency write Set_jbPayRateCurrency;
    property jbStockOrRateCode: WideString read Get_jbStockOrRateCode write Set_jbStockOrRateCode;
    property jbAnalysisCode: WideString read Get_jbAnalysisCode write Set_jbAnalysisCode;
    property jbAnalysisCodeI: IJobAnalysis read Get_jbAnalysisCodeI;
    property jbFolio: Integer read Get_jbFolio;
    property jbRecharge: WordBool read Get_jbRecharge write Set_jbRecharge;
    property jbCategory: TJobBudgetCategoryType read Get_jbCategory write Set_jbCategory;
    property Index: TTimeAndStockJobBudgetIndex read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  ITimeAndStockJobBudgetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8070A3EF-BCC8-45D9-B3CA-A2622CAAB81B}
// *********************************************************************//
  ITimeAndStockJobBudgetDisp = dispinterface
    ['{8070A3EF-BCC8-45D9-B3CA-A2622CAAB81B}']
    property jbPayRateMode: WordBool dispid 22;
    property jbPayRateCurrency: Integer dispid 23;
    property jbStockOrRateCode: WideString dispid 24;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; dispid 21;
    function BuildTimeRateIndex(const TimeRate: WideString): WideString; dispid 25;
    property jbAnalysisCode: WideString dispid 14;
    property jbAnalysisCodeI: IJobAnalysis readonly dispid 15;
    property jbFolio: Integer readonly dispid 18;
    property jbRecharge: WordBool dispid 19;
    function Add: ITimeAndStockJobBudget; dispid 1;
    function Delete: Integer; dispid 20;
    function Update: ITimeAndStockJobBudget; dispid 2;
    function Clone: ITimeAndStockJobBudget; dispid 3;
    property jbCategory: TJobBudgetCategoryType dispid 11;
    property Index: TTimeAndStockJobBudgetIndex dispid 17;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: IBrowseInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF23F3C7-A880-4FD4-A672-66563EE464E0}
// *********************************************************************//
  IBrowseInfo = interface(IDispatch)
    ['{DF23F3C7-A880-4FD4-A672-66563EE464E0}']
    function Get_ibInterfaceMode: Integer; safecall;
    property ibInterfaceMode: Integer read Get_ibInterfaceMode;
  end;

// *********************************************************************//
// DispIntf:  IBrowseInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF23F3C7-A880-4FD4-A672-66563EE464E0}
// *********************************************************************//
  IBrowseInfoDisp = dispinterface
    ['{DF23F3C7-A880-4FD4-A672-66563EE464E0}']
    property ibInterfaceMode: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: IMatching2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F967F53-3240-468B-8BEB-502244B6B13B}
// *********************************************************************//
  IMatching2 = interface(IMatching)
    ['{0F967F53-3240-468B-8BEB-502244B6B13B}']
    function Delete: Integer; safecall;
    function AddCustom(MatchType: TMatchingSubType): IMatching2; safecall;
    function Get_maCustomRef: WideString; safecall;
    procedure Set_maCustomRef(const Value: WideString); safecall;
    function Get_maSearchType: TMatchingSearchType; safecall;
    procedure Set_maSearchType(Value: TMatchingSearchType); safecall;
    property maCustomRef: WideString read Get_maCustomRef write Set_maCustomRef;
    property maSearchType: TMatchingSearchType read Get_maSearchType write Set_maSearchType;
  end;

// *********************************************************************//
// DispIntf:  IMatching2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F967F53-3240-468B-8BEB-502244B6B13B}
// *********************************************************************//
  IMatching2Disp = dispinterface
    ['{0F967F53-3240-468B-8BEB-502244B6B13B}']
    function Delete: Integer; dispid 13;
    function AddCustom(MatchType: TMatchingSubType): IMatching2; dispid 12;
    property maCustomRef: WideString dispid 14;
    property maSearchType: TMatchingSearchType dispid 15;
    property maDocRef: WideString dispid 1;
    property maPayRef: WideString dispid 2;
    property maType: TMatchingSubType readonly dispid 3;
    property maDocCurrency: Smallint dispid 4;
    property maDocValue: Double dispid 5;
    property maPayCurrency: Smallint dispid 6;
    property maPayValue: Double dispid 7;
    property maBaseValue: Double dispid 8;
    property maDocYourRef: WideString readonly dispid 10;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    property KeyString: WideString readonly dispid 16777222;
    function Add: IMatching; dispid 9;
    function Save: Integer; dispid 11;
  end;

// *********************************************************************//
// Interface: ICISRate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8D122C1-1D16-4BE5-A8CF-097F58D09C2E}
// *********************************************************************//
  ICISRate = interface(IDispatch)
    ['{A8D122C1-1D16-4BE5-A8CF-097F58D09C2E}']
    function Get_cisrCode: WideString; safecall;
    function Get_cisrDescription: WideString; safecall;
    function Get_cisrRate: Double; safecall;
    function Get_cisrGLCode: Integer; safecall;
    function Get_cisrCostCentre: WideString; safecall;
    function Get_cisrDepartment: WideString; safecall;
    property cisrCode: WideString read Get_cisrCode;
    property cisrDescription: WideString read Get_cisrDescription;
    property cisrRate: Double read Get_cisrRate;
    property cisrGLCode: Integer read Get_cisrGLCode;
    property cisrCostCentre: WideString read Get_cisrCostCentre;
    property cisrDepartment: WideString read Get_cisrDepartment;
  end;

// *********************************************************************//
// DispIntf:  ICISRateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8D122C1-1D16-4BE5-A8CF-097F58D09C2E}
// *********************************************************************//
  ICISRateDisp = dispinterface
    ['{A8D122C1-1D16-4BE5-A8CF-097F58D09C2E}']
    property cisrCode: WideString readonly dispid 1;
    property cisrDescription: WideString readonly dispid 2;
    property cisrRate: Double readonly dispid 3;
    property cisrGLCode: Integer readonly dispid 4;
    property cisrCostCentre: WideString readonly dispid 5;
    property cisrDepartment: WideString readonly dispid 6;
  end;

// *********************************************************************//
// Interface: ISystemSetupCIS
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFC434DA-55FA-403C-A643-DBBF0CFFE45B}
// *********************************************************************//
  ISystemSetupCIS = interface(IDispatch)
    ['{DFC434DA-55FA-403C-A643-DBBF0CFFE45B}']
    function Get_cisInterval: Integer; safecall;
    function Get_cisAutoSetPeriod: WordBool; safecall;
    function Get_cisReturnDate: WideString; safecall;
    function Get_cisTaxRef: WideString; safecall;
    function Get_cisDefaultVatCode: WideString; safecall;
    function Get_cisFolioNumber: Integer; safecall;
    function Get_cisRate(TaxType: TCISTaxType): ICISRate; safecall;
    function Get_cisVoucherCounter(VoucherType: TCISVoucherType): ICISVoucherCounter; safecall;
    property cisInterval: Integer read Get_cisInterval;
    property cisAutoSetPeriod: WordBool read Get_cisAutoSetPeriod;
    property cisReturnDate: WideString read Get_cisReturnDate;
    property cisTaxRef: WideString read Get_cisTaxRef;
    property cisDefaultVatCode: WideString read Get_cisDefaultVatCode;
    property cisFolioNumber: Integer read Get_cisFolioNumber;
    property cisRate[TaxType: TCISTaxType]: ICISRate read Get_cisRate;
    property cisVoucherCounter[VoucherType: TCISVoucherType]: ICISVoucherCounter read Get_cisVoucherCounter;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupCISDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFC434DA-55FA-403C-A643-DBBF0CFFE45B}
// *********************************************************************//
  ISystemSetupCISDisp = dispinterface
    ['{DFC434DA-55FA-403C-A643-DBBF0CFFE45B}']
    property cisInterval: Integer readonly dispid 1;
    property cisAutoSetPeriod: WordBool readonly dispid 2;
    property cisReturnDate: WideString readonly dispid 3;
    property cisTaxRef: WideString readonly dispid 4;
    property cisDefaultVatCode: WideString readonly dispid 5;
    property cisFolioNumber: Integer readonly dispid 6;
    property cisRate[TaxType: TCISTaxType]: ICISRate readonly dispid 7;
    property cisVoucherCounter[VoucherType: TCISVoucherType]: ICISVoucherCounter readonly dispid 8;
  end;

// *********************************************************************//
// Interface: ICISVoucherCounter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB5A574E-9468-4AA7-8F97-73528D5CD9B9}
// *********************************************************************//
  ICISVoucherCounter = interface(IDispatch)
    ['{BB5A574E-9468-4AA7-8F97-73528D5CD9B9}']
    function Get_cvPrefix: WideString; safecall;
    function Get_cvCounter: WideString; safecall;
    property cvPrefix: WideString read Get_cvPrefix;
    property cvCounter: WideString read Get_cvCounter;
  end;

// *********************************************************************//
// DispIntf:  ICISVoucherCounterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB5A574E-9468-4AA7-8F97-73528D5CD9B9}
// *********************************************************************//
  ICISVoucherCounterDisp = dispinterface
    ['{BB5A574E-9468-4AA7-8F97-73528D5CD9B9}']
    property cvPrefix: WideString readonly dispid 1;
    property cvCounter: WideString readonly dispid 3;
  end;

// *********************************************************************//
// Interface: ICISVoucher
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3036AB54-539C-4800-AC6B-342D93D11AC1}
// *********************************************************************//
  ICISVoucher = interface(IDispatch)
    ['{3036AB54-539C-4800-AC6B-342D93D11AC1}']
    function Get_cvNumber: WideString; safecall;
    procedure Set_cvNumber(const Value: WideString); safecall;
    function Get_cvEmployee: WideString; safecall;
    procedure Set_cvEmployee(const Value: WideString); safecall;
    function Get_cvDate: WideString; safecall;
    procedure Set_cvDate(const Value: WideString); safecall;
    function Get_cvTransaction: WideString; safecall;
    procedure Set_cvTransaction(const Value: WideString); safecall;
    function Get_cvFolio: Integer; safecall;
    function Get_cvCertificateNo: WideString; safecall;
    procedure Set_cvCertificateNo(const Value: WideString); safecall;
    function Get_cvGrossTotal: Double; safecall;
    procedure Set_cvGrossTotal(Value: Double); safecall;
    function Get_cvType: TCISVoucherType; safecall;
    procedure Set_cvType(Value: TCISVoucherType); safecall;
    function Get_cvAutoTotalTax: Double; safecall;
    procedure Set_cvAutoTotalTax(Value: Double); safecall;
    function Get_cvManualTax: WordBool; safecall;
    procedure Set_cvManualTax(Value: WordBool); safecall;
    function Get_cvTaxableTotal: Double; safecall;
    procedure Set_cvTaxableTotal(Value: Double); safecall;
    function Get_cvCurrency: Integer; safecall;
    procedure Set_cvCurrency(Value: Integer); safecall;
    function Get_cvAddress: IAddress; safecall;
    function Get_cvBehalf: WideString; safecall;
    procedure Set_cvBehalf(const Value: WideString); safecall;
    function Get_cvCorrection: WordBool; safecall;
    procedure Set_cvCorrection(Value: WordBool); safecall;
    function Get_cvTaxDue: Double; safecall;
    procedure Set_cvTaxDue(Value: Double); safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function Get_Position: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Clone: ICISVoucher; safecall;
    function Get_Index: TCISVoucherIndex; safecall;
    procedure Set_Index(Value: TCISVoucherIndex); safecall;
    function Get_cvSupplier: WideString; safecall;
    procedure Set_cvSupplier(const Value: WideString); safecall;
    function BuildEmployeeDateIndex(const EmployeeCode: WideString; const ADate: WideString): WideString; safecall;
    function BuildDateEmployeeTypeIndex(const ADate: WideString; const Employee: WideString; 
                                        AType: TCISVoucherType): WideString; safecall;
    function BuildNumberIndex(const VoucherNo: WideString): WideString; safecall;
    function BuildFolioIndex(FolioNumber: Integer): WideString; safecall;
    function BuildDateSupplierIndex(const ADate: WideString; const Supplier: WideString): WideString; safecall;
    function BuildSupplierDateIndex(const Supplier: WideString; const ADate: WideString): WideString; safecall;
    property cvNumber: WideString read Get_cvNumber write Set_cvNumber;
    property cvEmployee: WideString read Get_cvEmployee write Set_cvEmployee;
    property cvDate: WideString read Get_cvDate write Set_cvDate;
    property cvTransaction: WideString read Get_cvTransaction write Set_cvTransaction;
    property cvFolio: Integer read Get_cvFolio;
    property cvCertificateNo: WideString read Get_cvCertificateNo write Set_cvCertificateNo;
    property cvGrossTotal: Double read Get_cvGrossTotal write Set_cvGrossTotal;
    property cvType: TCISVoucherType read Get_cvType write Set_cvType;
    property cvAutoTotalTax: Double read Get_cvAutoTotalTax write Set_cvAutoTotalTax;
    property cvManualTax: WordBool read Get_cvManualTax write Set_cvManualTax;
    property cvTaxableTotal: Double read Get_cvTaxableTotal write Set_cvTaxableTotal;
    property cvCurrency: Integer read Get_cvCurrency write Set_cvCurrency;
    property cvAddress: IAddress read Get_cvAddress;
    property cvBehalf: WideString read Get_cvBehalf write Set_cvBehalf;
    property cvCorrection: WordBool read Get_cvCorrection write Set_cvCorrection;
    property cvTaxDue: Double read Get_cvTaxDue write Set_cvTaxDue;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property Index: TCISVoucherIndex read Get_Index write Set_Index;
    property cvSupplier: WideString read Get_cvSupplier write Set_cvSupplier;
  end;

// *********************************************************************//
// DispIntf:  ICISVoucherDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3036AB54-539C-4800-AC6B-342D93D11AC1}
// *********************************************************************//
  ICISVoucherDisp = dispinterface
    ['{3036AB54-539C-4800-AC6B-342D93D11AC1}']
    property cvNumber: WideString dispid 1;
    property cvEmployee: WideString dispid 3;
    property cvDate: WideString dispid 4;
    property cvTransaction: WideString dispid 5;
    property cvFolio: Integer readonly dispid 6;
    property cvCertificateNo: WideString dispid 7;
    property cvGrossTotal: Double dispid 8;
    property cvType: TCISVoucherType dispid 9;
    property cvAutoTotalTax: Double dispid 10;
    property cvManualTax: WordBool dispid 11;
    property cvTaxableTotal: Double dispid 12;
    property cvCurrency: Integer dispid 13;
    property cvAddress: IAddress readonly dispid 14;
    property cvBehalf: WideString dispid 15;
    property cvCorrection: WordBool dispid 16;
    property cvTaxDue: Double dispid 17;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Clone: ICISVoucher; dispid 18;
    property Index: TCISVoucherIndex dispid 19;
    property cvSupplier: WideString dispid 2;
    function BuildEmployeeDateIndex(const EmployeeCode: WideString; const ADate: WideString): WideString; dispid 20;
    function BuildDateEmployeeTypeIndex(const ADate: WideString; const Employee: WideString; 
                                        AType: TCISVoucherType): WideString; dispid 21;
    function BuildNumberIndex(const VoucherNo: WideString): WideString; dispid 22;
    function BuildFolioIndex(FolioNumber: Integer): WideString; dispid 23;
    function BuildDateSupplierIndex(const ADate: WideString; const Supplier: WideString): WideString; dispid 24;
    function BuildSupplierDateIndex(const Supplier: WideString; const ADate: WideString): WideString; dispid 25;
  end;

// *********************************************************************//
// Interface: IJobCosting2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {329E0073-4B29-421F-971A-A311F6FA7692}
// *********************************************************************//
  IJobCosting2 = interface(IJobCosting)
    ['{329E0073-4B29-421F-971A-A311F6FA7692}']
    function Get_CISVoucher: ICISVoucher; safecall;
    property CISVoucher: ICISVoucher read Get_CISVoucher;
  end;

// *********************************************************************//
// DispIntf:  IJobCosting2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {329E0073-4B29-421F-971A-A311F6FA7692}
// *********************************************************************//
  IJobCosting2Disp = dispinterface
    ['{329E0073-4B29-421F-971A-A311F6FA7692}']
    property CISVoucher: ICISVoucher readonly dispid 6;
    property Job: IJob readonly dispid 1;
    property JobType: IJobType readonly dispid 2;
    property JobAnalysis: IJobAnalysis readonly dispid 3;
    property Employee: IEmployee readonly dispid 4;
    property TimeRates: ITimeRates readonly dispid 5;
  end;

// *********************************************************************//
// Interface: IJobInvoice
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D308FD0A-C973-491E-BF33-20B2235200BD}
// *********************************************************************//
  IJobInvoice = interface(IDispatch)
    ['{D308FD0A-C973-491E-BF33-20B2235200BD}']
    function Get_jiJobCode: WideString; safecall;
    function Get_jiAccCode: WideString; safecall;
    function Get_jiInvoiceCurrency: Integer; safecall;
    procedure Set_jiInvoiceCurrency(Value: Integer); safecall;
    function Get_jiDetail: TJobInvoiceDetailType; safecall;
    procedure Set_jiDetail(Value: TJobInvoiceDetailType); safecall;
    function Get_jiInvoiceType: TJobInvoiceType; safecall;
    procedure Set_jiInvoiceType(Value: TJobInvoiceType); safecall;
    function Get_jiTransferWIP: WordBool; safecall;
    procedure Set_jiTransferWIP(Value: WordBool); safecall;
    function Get_jiWIPAnalysis: WideString; safecall;
    procedure Set_jiWIPAnalysis(const Value: WideString); safecall;
    function Execute: Integer; safecall;
    function Get_jiRevenueAnalysis: WideString; safecall;
    procedure Set_jiRevenueAnalysis(const Value: WideString); safecall;
    function Get_jiTransactionList: IJobInvoiceTransactionList; safecall;
    function Get_jiInvoice: WideString; safecall;
    function Get_jiInvoiceI: ITransaction; safecall;
    function Get_jiCostCentre: WideString; safecall;
    procedure Set_jiCostCentre(const Value: WideString); safecall;
    function Get_jiDepartment: WideString; safecall;
    procedure Set_jiDepartment(const Value: WideString); safecall;
    function Get_jiUseCCAndDept: WordBool; safecall;
    procedure Set_jiUseCCAndDept(Value: WordBool); safecall;
    function Get_jiWIPTransfer: WideString; safecall;
    function Get_jiWIPTransferI: ITransaction; safecall;
    property jiJobCode: WideString read Get_jiJobCode;
    property jiAccCode: WideString read Get_jiAccCode;
    property jiInvoiceCurrency: Integer read Get_jiInvoiceCurrency write Set_jiInvoiceCurrency;
    property jiDetail: TJobInvoiceDetailType read Get_jiDetail write Set_jiDetail;
    property jiInvoiceType: TJobInvoiceType read Get_jiInvoiceType write Set_jiInvoiceType;
    property jiTransferWIP: WordBool read Get_jiTransferWIP write Set_jiTransferWIP;
    property jiWIPAnalysis: WideString read Get_jiWIPAnalysis write Set_jiWIPAnalysis;
    property jiRevenueAnalysis: WideString read Get_jiRevenueAnalysis write Set_jiRevenueAnalysis;
    property jiTransactionList: IJobInvoiceTransactionList read Get_jiTransactionList;
    property jiInvoice: WideString read Get_jiInvoice;
    property jiInvoiceI: ITransaction read Get_jiInvoiceI;
    property jiCostCentre: WideString read Get_jiCostCentre write Set_jiCostCentre;
    property jiDepartment: WideString read Get_jiDepartment write Set_jiDepartment;
    property jiUseCCAndDept: WordBool read Get_jiUseCCAndDept write Set_jiUseCCAndDept;
    property jiWIPTransfer: WideString read Get_jiWIPTransfer;
    property jiWIPTransferI: ITransaction read Get_jiWIPTransferI;
  end;

// *********************************************************************//
// DispIntf:  IJobInvoiceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D308FD0A-C973-491E-BF33-20B2235200BD}
// *********************************************************************//
  IJobInvoiceDisp = dispinterface
    ['{D308FD0A-C973-491E-BF33-20B2235200BD}']
    property jiJobCode: WideString readonly dispid 1;
    property jiAccCode: WideString readonly dispid 2;
    property jiInvoiceCurrency: Integer dispid 3;
    property jiDetail: TJobInvoiceDetailType dispid 4;
    property jiInvoiceType: TJobInvoiceType dispid 5;
    property jiTransferWIP: WordBool dispid 6;
    property jiWIPAnalysis: WideString dispid 7;
    function Execute: Integer; dispid 8;
    property jiRevenueAnalysis: WideString dispid 9;
    property jiTransactionList: IJobInvoiceTransactionList readonly dispid 10;
    property jiInvoice: WideString readonly dispid 13;
    property jiInvoiceI: ITransaction readonly dispid 14;
    property jiCostCentre: WideString dispid 16;
    property jiDepartment: WideString dispid 17;
    property jiUseCCAndDept: WordBool dispid 18;
    property jiWIPTransfer: WideString readonly dispid 11;
    property jiWIPTransferI: ITransaction readonly dispid 12;
  end;

// *********************************************************************//
// Interface: IJobInvoiceTransaction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3B7F2A6C-0F1D-4240-B861-7316F4CF0972}
// *********************************************************************//
  IJobInvoiceTransaction = interface(IDispatch)
    ['{3B7F2A6C-0F1D-4240-B861-7316F4CF0972}']
    function Get_jiOurRef: WideString; safecall;
    function Get_jiOurRefI: ITransaction; safecall;
    function Get_jiTagged: WordBool; safecall;
    procedure Set_jiTagged(Value: WordBool); safecall;
    property jiOurRef: WideString read Get_jiOurRef;
    property jiOurRefI: ITransaction read Get_jiOurRefI;
    property jiTagged: WordBool read Get_jiTagged write Set_jiTagged;
  end;

// *********************************************************************//
// DispIntf:  IJobInvoiceTransactionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3B7F2A6C-0F1D-4240-B861-7316F4CF0972}
// *********************************************************************//
  IJobInvoiceTransactionDisp = dispinterface
    ['{3B7F2A6C-0F1D-4240-B861-7316F4CF0972}']
    property jiOurRef: WideString readonly dispid 1;
    property jiOurRefI: ITransaction readonly dispid 2;
    property jiTagged: WordBool dispid 15;
  end;

// *********************************************************************//
// Interface: IJobInvoiceTransactionList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0AFA3583-A21A-40C7-A5DC-1DBE5FC5709D}
// *********************************************************************//
  IJobInvoiceTransactionList = interface(IDispatch)
    ['{0AFA3583-A21A-40C7-A5DC-1DBE5FC5709D}']
    function Get_jiTransactionCount: Integer; safecall;
    function Get_jiTransaction(Index: Integer): IJobInvoiceTransaction; safecall;
    property jiTransactionCount: Integer read Get_jiTransactionCount;
    property jiTransaction[Index: Integer]: IJobInvoiceTransaction read Get_jiTransaction;
  end;

// *********************************************************************//
// DispIntf:  IJobInvoiceTransactionListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0AFA3583-A21A-40C7-A5DC-1DBE5FC5709D}
// *********************************************************************//
  IJobInvoiceTransactionListDisp = dispinterface
    ['{0AFA3583-A21A-40C7-A5DC-1DBE5FC5709D}']
    property jiTransactionCount: Integer readonly dispid 12;
    property jiTransaction[Index: Integer]: IJobInvoiceTransaction readonly dispid 1;
  end;

// *********************************************************************//
// Interface: IJobInvoiceTransaction2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1779C27A-F464-4267-8670-6C425FC50386}
// *********************************************************************//
  IJobInvoiceTransaction2 = interface(IDispatch)
    ['{1779C27A-F464-4267-8670-6C425FC50386}']
    function Get_jiCharge: Double; safecall;
    procedure Set_jiCharge(Value: Double); safecall;
    property jiCharge: Double read Get_jiCharge write Set_jiCharge;
  end;

// *********************************************************************//
// DispIntf:  IJobInvoiceTransaction2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1779C27A-F464-4267-8670-6C425FC50386}
// *********************************************************************//
  IJobInvoiceTransaction2Disp = dispinterface
    ['{1779C27A-F464-4267-8670-6C425FC50386}']
    property jiCharge: Double dispid 3;
  end;

// *********************************************************************//
// Interface: ITransactionAsNOM2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E6DA649-2242-4F9D-B2B0-F0FF8611A3AD}
// *********************************************************************//
  ITransactionAsNOM2 = interface(ITransactionAsNOM)
    ['{1E6DA649-2242-4F9D-B2B0-F0FF8611A3AD}']
    function Get_tnVatIO: TVatIOType; safecall;
    procedure Set_tnVatIO(Value: TVatIOType); safecall;
    property tnVatIO: TVatIOType read Get_tnVatIO write Set_tnVatIO;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsNOM2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E6DA649-2242-4F9D-B2B0-F0FF8611A3AD}
// *********************************************************************//
  ITransactionAsNOM2Disp = dispinterface
    ['{1E6DA649-2242-4F9D-B2B0-F0FF8611A3AD}']
    property tnVatIO: TVatIOType dispid 13;
    property tnOurRef: WideString dispid 1;
    property tnDescription: WideString dispid 2;
    property tnTransDate: WideString dispid 3;
    property tnYear: Smallint dispid 4;
    property tnPeriod: Integer dispid 5;
    property tnLastEditedBy: WideString dispid 6;
    property tnAutoReversing: WordBool dispid 7;
    property tnYourRef: WideString dispid 8;
    property tnUserField1: WideString dispid 9;
    property tnUserField2: WideString dispid 10;
    property tnUserField3: WideString dispid 11;
    property tnUserField4: WideString dispid 12;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsNOM2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {860B30E2-F912-4731-A919-5F28BA8BBC56}
// *********************************************************************//
  ITransactionLineAsNOM2 = interface(ITransactionLineAsNOM)
    ['{860B30E2-F912-4731-A919-5F28BA8BBC56}']
    function Get_tlnNomVatType: TNomLineVatType; safecall;
    procedure Set_tlnNomVatType(Value: TNomLineVatType); safecall;
    function Get_tlnVatAmount: Double; safecall;
    procedure Set_tlnVatAmount(Value: Double); safecall;
    property tlnNomVatType: TNomLineVatType read Get_tlnNomVatType write Set_tlnNomVatType;
    property tlnVatAmount: Double read Get_tlnVatAmount write Set_tlnVatAmount;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsNOM2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {860B30E2-F912-4731-A919-5F28BA8BBC56}
// *********************************************************************//
  ITransactionLineAsNOM2Disp = dispinterface
    ['{860B30E2-F912-4731-A919-5F28BA8BBC56}']
    property tlnNomVatType: TNomLineVatType dispid 15;
    property tlnVatAmount: Double dispid 16;
    property tlnDescription: WideString dispid 1;
    property tlnGLCode: Integer dispid 2;
    property tlnJobCode: WideString dispid 3;
    property tlnJobAnalysis: WideString dispid 4;
    property tlnCurrency: Integer dispid 5;
    property tlnExchangeRate: Double dispid 6;
    property tlnDebit: Double dispid 7;
    property tlnCredit: Double dispid 8;
    property tlnUserField1: WideString dispid 9;
    property tlnUserField2: WideString dispid 10;
    property tlnUserField3: WideString dispid 11;
    property tlnUserField4: WideString dispid 12;
    property tlnCostCentre: WideString dispid 13;
    property tlnDepartment: WideString dispid 14;
  end;

// *********************************************************************//
// Interface: IEmployee3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EC5F263-2642-4ADE-9133-64E177031B34}
// *********************************************************************//
  IEmployee3 = interface(IEmployee2)
    ['{9EC5F263-2642-4ADE-9133-64E177031B34}']
    function Get_emLabourViaPL: WordBool; safecall;
    procedure Set_emLabourViaPL(Value: WordBool); safecall;
    property emLabourViaPL: WordBool read Get_emLabourViaPL write Set_emLabourViaPL;
  end;

// *********************************************************************//
// DispIntf:  IEmployee3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EC5F263-2642-4ADE-9133-64E177031B34}
// *********************************************************************//
  IEmployee3Disp = dispinterface
    ['{9EC5F263-2642-4ADE-9133-64E177031B34}']
    property emLabourViaPL: WordBool dispid 34;
    function Update: IEmployee2; dispid 23;
    function Add: IEmployee2; dispid 24;
    function Save: Integer; dispid 25;
    procedure Cancel; dispid 26;
    property emSelfBilling: WordBool dispid 27;
    property emGroupCertificate: WordBool dispid 28;
    property emCertificateType: TEmployeeCertificateType dispid 29;
    property emUserField3: WideString dispid 30;
    property emUserField4: WideString dispid 31;
    property emNISerialNo: WideString dispid 32;
    property emLinks: ILinks readonly dispid 33;
    property emCode: WideString dispid 1;
    property emSupplier: WideString dispid 2;
    property emName: WideString dispid 3;
    property emAddress: IAddress readonly dispid 4;
    property emPhone: WideString dispid 5;
    property emFax: WideString dispid 6;
    property emMobile: WideString dispid 7;
    property emType: TEmployeeType dispid 8;
    property emPayrollNumber: WideString dispid 9;
    property emCertificateNumber: WideString dispid 10;
    property emCertificateExpiry: WideString dispid 11;
    property emUserField1: WideString dispid 12;
    property emUserField2: WideString dispid 13;
    property emTimeRates: ITimeRates readonly dispid 14;
    property emCostCentre: WideString dispid 15;
    property emDepartment: WideString dispid 16;
    property emOwnTimeRatesOnly: WordBool dispid 17;
    function Clone: IEmployee; dispid 18;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 19;
    function BuildSupplierIndex(const Supplier: WideString): WideString; dispid 20;
    property Index: TEmployeeIndex dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property emNotes: INotes readonly dispid 22;
  end;

// *********************************************************************//
// Interface: IJobInvoiceTransaction3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF994CC7-B212-4CB9-9A94-FD338EC6CF95}
// *********************************************************************//
  IJobInvoiceTransaction3 = interface(IJobInvoiceTransaction2)
    ['{FF994CC7-B212-4CB9-9A94-FD338EC6CF95}']
    function Get_jiCost: Double; safecall;
    function Get_jiQty: Double; safecall;
    property jiCost: Double read Get_jiCost;
    property jiQty: Double read Get_jiQty;
  end;

// *********************************************************************//
// DispIntf:  IJobInvoiceTransaction3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF994CC7-B212-4CB9-9A94-FD338EC6CF95}
// *********************************************************************//
  IJobInvoiceTransaction3Disp = dispinterface
    ['{FF994CC7-B212-4CB9-9A94-FD338EC6CF95}']
    property jiCost: Double readonly dispid 4;
    property jiQty: Double readonly dispid 5;
    property jiCharge: Double dispid 3;
  end;

// *********************************************************************//
// Interface: IBtrieveFunctions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2334CA7E-B597-4D2B-98CC-862203D3B54C}
// *********************************************************************//
  IBtrieveFunctions = interface(IDispatch)
    ['{2334CA7E-B597-4D2B-98CC-862203D3B54C}']
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Get_Index: Integer; safecall;
    procedure Set_Index(Value: Integer); safecall;
    property Position: Integer read Get_Position write Set_Position;
    property Index: Integer read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  IBtrieveFunctionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2334CA7E-B597-4D2B-98CC-862203D3B54C}
// *********************************************************************//
  IBtrieveFunctionsDisp = dispinterface
    ['{2334CA7E-B597-4D2B-98CC-862203D3B54C}']
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property Index: Integer dispid 1;
  end;

// *********************************************************************//
// Interface: IAccount2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {476967FE-690C-489A-983B-A1A0AC87D157}
// *********************************************************************//
  IAccount2 = interface(IAccount)
    ['{476967FE-690C-489A-983B-A1A0AC87D157}']
    function Get_acDefTagNo: Integer; safecall;
    procedure Set_acDefTagNo(Value: Integer); safecall;
    function Get_acOfficeType: TAccountOfficeType; safecall;
    procedure Set_acOfficeType(Value: TAccountOfficeType); safecall;
    function Get_acOrderConsolidationMode: TOrderConsolidationModeType; safecall;
    procedure Set_acOrderConsolidationMode(Value: TOrderConsolidationModeType); safecall;
    function Get_acVATCountryCode: WideString; safecall;
    procedure Set_acVATCountryCode(const Value: WideString); safecall;
    function Get_acLinks: ILinks; safecall;
    function Get_acSalesAnalysis: ICustomerSalesAnalysis; safecall;
    function Print(PrintAs: TAccountPrintMode): IPrintJob; safecall;
    property acDefTagNo: Integer read Get_acDefTagNo write Set_acDefTagNo;
    property acOfficeType: TAccountOfficeType read Get_acOfficeType write Set_acOfficeType;
    property acOrderConsolidationMode: TOrderConsolidationModeType read Get_acOrderConsolidationMode write Set_acOrderConsolidationMode;
    property acVATCountryCode: WideString read Get_acVATCountryCode write Set_acVATCountryCode;
    property acLinks: ILinks read Get_acLinks;
    property acSalesAnalysis: ICustomerSalesAnalysis read Get_acSalesAnalysis;
  end;

// *********************************************************************//
// DispIntf:  IAccount2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {476967FE-690C-489A-983B-A1A0AC87D157}
// *********************************************************************//
  IAccount2Disp = dispinterface
    ['{476967FE-690C-489A-983B-A1A0AC87D157}']
    property acDefTagNo: Integer dispid 87;
    property acOfficeType: TAccountOfficeType dispid 88;
    property acOrderConsolidationMode: TOrderConsolidationModeType dispid 90;
    property acVATCountryCode: WideString dispid 91;
    property acLinks: ILinks readonly dispid 89;
    property acSalesAnalysis: ICustomerSalesAnalysis readonly dispid 92;
    function Print(PrintAs: TAccountPrintMode): IPrintJob; dispid 93;
    property acCode: WideString dispid 1;
    property acCompany: WideString dispid 2;
    property acArea: WideString dispid 3;
    property acAccType: WideString dispid 4;
    property acStatementTo: WideString dispid 5;
    property acVATRegNo: WideString dispid 6;
    property acAddress: IAddress readonly dispid 7;
    property acDelAddress: IAddress readonly dispid 8;
    property acContact: WideString dispid 9;
    property acPhone: WideString dispid 10;
    property acFax: WideString dispid 11;
    property acTheirAcc: WideString dispid 12;
    property acOwnTradTerm: WordBool dispid 13;
    property acTradeTerms[Index: Integer]: WideString dispid 14;
    property acCurrency: Smallint dispid 15;
    property acVATCode: WideString dispid 16;
    property acPayTerms: Smallint dispid 17;
    property acCreditLimit: Double dispid 18;
    property acDiscount: Double dispid 19;
    property acCreditStatus: Smallint dispid 20;
    property acCostCentre: WideString dispid 21;
    property acDiscountBand: WideString dispid 22;
    property acDepartment: WideString dispid 23;
    property acECMember: WordBool dispid 24;
    property acStatement: WordBool dispid 25;
    property acSalesGL: Integer dispid 26;
    property acLocation: WideString dispid 27;
    property acAccStatus: TAccountStatus dispid 28;
    property acPayType: WideString dispid 29;
    property acBankSort: WideString dispid 30;
    property acBankAcc: WideString dispid 31;
    property acBankRef: WideString dispid 32;
    property acLastUsed: WideString readonly dispid 33;
    property acPhone2: WideString dispid 34;
    property acUserDef1: WideString dispid 35;
    property acUserDef2: WideString dispid 36;
    property acInvoiceTo: WideString dispid 37;
    property acSOPAutoWOff: WordBool dispid 38;
    property acBookOrdVal: Double dispid 39;
    property acCOSGL: Integer dispid 40;
    property acDrCrGL: Integer dispid 41;
    property acDirDebMode: Smallint dispid 42;
    property acCCStart: WideString dispid 43;
    property acCCEnd: WideString dispid 44;
    property acCCName: WideString dispid 45;
    property acCCNumber: WideString dispid 46;
    property acCCSwitch: WideString dispid 47;
    property acDefSettleDays: Integer dispid 49;
    property acDefSettleDisc: Double dispid 50;
    property acFormSet: Smallint dispid 51;
    property acStateDeliveryMode: Integer dispid 52;
    property acEmailAddr: WideString dispid 53;
    property acSendReader: WordBool dispid 54;
    property acEBusPword: WideString dispid 55;
    property acAltCode: WideString dispid 56;
    property acPostCode: WideString dispid 57;
    property acUseForEbus: Integer dispid 58;
    property acZIPAttachments: TEmailAttachmentZIPType dispid 59;
    property acUserDef3: WideString dispid 60;
    property acUserDef4: WideString dispid 61;
    property acTimeStamp: WideString readonly dispid 62;
    property acSSDDeliveryTerms: WideString dispid 63;
    property acInclusiveVATCode: WideString dispid 64;
    property acSSDModeOfTransport: Integer dispid 65;
    property acLastOperator: WideString dispid 66;
    property acDocDeliveryMode: Integer dispid 67;
    property acSendHTML: WordBool dispid 68;
    property acWebLiveCatalog: WideString dispid 69;
    property acWebPrevCatalog: WideString dispid 70;
    property acHistory: IAccountBalance readonly dispid 71;
    function Save: Integer; dispid 72;
    function Add: IAccount; dispid 74;
    function Clone: IAccount; dispid 75;
    function Update: IAccount; dispid 76;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TAccountIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const AccountCode: WideString): WideString; dispid 78;
    function BuildNameIndex(const AccountName: WideString): WideString; dispid 79;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 48;
    function BuildVatRegIndex(const VatRegNo: WideString; const AccountCode: WideString): WideString; dispid 73;
    function BuildEmailIndex(const EmailAddr: WideString): WideString; dispid 80;
    function BuildPhoneIndex(const PhoneNo: WideString): WideString; dispid 81;
    function BuildPostCodeIndex(const PostCode: WideString): WideString; dispid 82;
    function BuildOurCodeIndex(const OurCode: WideString): WideString; dispid 83;
    function BuildInvoiceToIndex(const AccountCode: WideString): WideString; dispid 84;
    property acNotes: INotes readonly dispid 85;
    property acDiscounts: IAccountDiscount readonly dispid 86;
  end;

// *********************************************************************//
// Interface: IStock2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {579D251D-2447-402D-8110-19C0CA616026}
// *********************************************************************//
  IStock2 = interface(IStock)
    ['{579D251D-2447-402D-8110-19C0CA616026}']
    function Get_stBOMProductionTime: Integer; safecall;
    function Get_stQtyAllocWOR: Double; safecall;
    function Get_stQtyFreeze: Double; safecall;
    function Get_stQtyIssuedWOR: Double; safecall;
    function Get_stQtyPickedWOR: Double; safecall;
    function Get_stQtyStockTake: Double; safecall;
    procedure Set_stQtyStockTake(Value: Double); safecall;
    function Get_stWOPAssemblyDays: Integer; safecall;
    procedure Set_stWOPAssemblyDays(Value: Integer); safecall;
    function Get_stWOPAssemblyHours: Integer; safecall;
    procedure Set_stWOPAssemblyHours(Value: Integer); safecall;
    function Get_stWOPAssemblyMins: Integer; safecall;
    procedure Set_stWOPAssemblyMins(Value: Integer); safecall;
    function Get_stWOPAutoCalcTime: WordBool; safecall;
    procedure Set_stWOPAutoCalcTime(Value: WordBool); safecall;
    function Get_stWOPIssuedWIPGL: Integer; safecall;
    procedure Set_stWOPIssuedWIPGL(Value: Integer); safecall;
    function Get_stWOPMinEconBuild: Double; safecall;
    procedure Set_stWOPMinEconBuild(Value: Double); safecall;
    function Get_stWOPRoLeadTime: Integer; safecall;
    procedure Set_stWOPRoLeadTime(Value: Integer); safecall;
    function Get_stUsesBins: WordBool; safecall;
    procedure Set_stUsesBins(Value: WordBool); safecall;
    function Get_stStockTakeQtyChanged: WordBool; safecall;
    function Get_stShowKitOnSales: WordBool; safecall;
    procedure Set_stShowKitOnSales(Value: WordBool); safecall;
    function Get_stLinks: ILinks; safecall;
    function Get_stAltStockCode: IAltStockCode; safecall;
    function Get_stMultiBin: IMultiBin; safecall;
    function Get_stSalesAnalysis: IStockSalesAnalysis; safecall;
    function Print(PrintAs: TStockPrintMode): IPrintJob; safecall;
    function Discontinue(RetainComponents: WordBool): Integer; safecall;
    property stBOMProductionTime: Integer read Get_stBOMProductionTime;
    property stQtyAllocWOR: Double read Get_stQtyAllocWOR;
    property stQtyFreeze: Double read Get_stQtyFreeze;
    property stQtyIssuedWOR: Double read Get_stQtyIssuedWOR;
    property stQtyPickedWOR: Double read Get_stQtyPickedWOR;
    property stQtyStockTake: Double read Get_stQtyStockTake write Set_stQtyStockTake;
    property stWOPAssemblyDays: Integer read Get_stWOPAssemblyDays write Set_stWOPAssemblyDays;
    property stWOPAssemblyHours: Integer read Get_stWOPAssemblyHours write Set_stWOPAssemblyHours;
    property stWOPAssemblyMins: Integer read Get_stWOPAssemblyMins write Set_stWOPAssemblyMins;
    property stWOPAutoCalcTime: WordBool read Get_stWOPAutoCalcTime write Set_stWOPAutoCalcTime;
    property stWOPIssuedWIPGL: Integer read Get_stWOPIssuedWIPGL write Set_stWOPIssuedWIPGL;
    property stWOPMinEconBuild: Double read Get_stWOPMinEconBuild write Set_stWOPMinEconBuild;
    property stWOPRoLeadTime: Integer read Get_stWOPRoLeadTime write Set_stWOPRoLeadTime;
    property stUsesBins: WordBool read Get_stUsesBins write Set_stUsesBins;
    property stStockTakeQtyChanged: WordBool read Get_stStockTakeQtyChanged;
    property stShowKitOnSales: WordBool read Get_stShowKitOnSales write Set_stShowKitOnSales;
    property stLinks: ILinks read Get_stLinks;
    property stAltStockCode: IAltStockCode read Get_stAltStockCode;
    property stMultiBin: IMultiBin read Get_stMultiBin;
    property stSalesAnalysis: IStockSalesAnalysis read Get_stSalesAnalysis;
  end;

// *********************************************************************//
// DispIntf:  IStock2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {579D251D-2447-402D-8110-19C0CA616026}
// *********************************************************************//
  IStock2Disp = dispinterface
    ['{579D251D-2447-402D-8110-19C0CA616026}']
    property stBOMProductionTime: Integer readonly dispid 81;
    property stQtyAllocWOR: Double readonly dispid 82;
    property stQtyFreeze: Double readonly dispid 83;
    property stQtyIssuedWOR: Double readonly dispid 84;
    property stQtyPickedWOR: Double readonly dispid 85;
    property stQtyStockTake: Double dispid 86;
    property stWOPAssemblyDays: Integer dispid 87;
    property stWOPAssemblyHours: Integer dispid 88;
    property stWOPAssemblyMins: Integer dispid 89;
    property stWOPAutoCalcTime: WordBool dispid 90;
    property stWOPIssuedWIPGL: Integer dispid 91;
    property stWOPMinEconBuild: Double dispid 92;
    property stWOPRoLeadTime: Integer dispid 93;
    property stUsesBins: WordBool dispid 94;
    property stStockTakeQtyChanged: WordBool readonly dispid 95;
    property stShowKitOnSales: WordBool dispid 96;
    property stLinks: ILinks readonly dispid 97;
    property stAltStockCode: IAltStockCode readonly dispid 98;
    property stMultiBin: IMultiBin readonly dispid 99;
    property stSalesAnalysis: IStockSalesAnalysis readonly dispid 100;
    function Print(PrintAs: TStockPrintMode): IPrintJob; dispid 101;
    function Discontinue(RetainComponents: WordBool): Integer; dispid 102;
    property stCode: WideString dispid 1;
    property stDesc[Index: Integer]: WideString dispid 2;
    property stAltCode: WideString dispid 3;
    property stType: TStockType dispid 4;
    property stSalesGL: Integer dispid 5;
    property stCOSGL: Integer dispid 6;
    property stPandLGL: Integer dispid 7;
    property stBalSheetGL: Integer dispid 8;
    property stWIPGL: Integer dispid 9;
    property stBelowMinLevel: WordBool dispid 10;
    property stFolioNum: Integer readonly dispid 11;
    property stParentCode: WideString dispid 12;
    property stSuppTemp: WideString dispid 13;
    property stUnitOfStock: WideString dispid 14;
    property stUnitOfSale: WideString dispid 15;
    property stUnitOfPurch: WideString dispid 16;
    property stCostPriceCur: Integer dispid 17;
    property stCostPrice: Double dispid 18;
    property stSalesUnits: Double dispid 19;
    property stPurchUnits: Double dispid 20;
    property stVATCode: WideString dispid 21;
    property stCostCentre: WideString dispid 22;
    property stDepartment: WideString dispid 23;
    property stQtyInStock: Double readonly dispid 24;
    property stQtyPosted: Double readonly dispid 25;
    property stQtyAllocated: Double readonly dispid 26;
    property stQtyOnOrder: Double readonly dispid 27;
    property stQtyMin: Double dispid 28;
    property stQtyMax: Double dispid 29;
    property stBinLocation: WideString dispid 36;
    property stCover: IStockCover readonly dispid 37;
    property stIntrastat: IStockIntrastat readonly dispid 38;
    property stReorder: IStockReorder readonly dispid 39;
    property stAnalysisCode: WideString dispid 40;
    property stSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 41;
    property stTimeChange: WideString readonly dispid 42;
    property stInclusiveVATCode: WideString dispid 43;
    property stOperator: WideString dispid 44;
    property stSupplier: WideString dispid 45;
    property stSupplierI: IAccount readonly dispid 46;
    property stDefaultLineType: TTransactionLineType dispid 47;
    property stValuationMethod: TStockValuationType dispid 52;
    property stQtyPicked: Double readonly dispid 53;
    property stLastUsed: WideString readonly dispid 54;
    property stBarCode: WideString dispid 55;
    property stLocation: WideString dispid 56;
    property stPricingMethod: TStockPricingMethod dispid 57;
    property stShowQtyAsPacks: WordBool dispid 58;
    property stUseKitPrice: WordBool dispid 59;
    property stUserField1: WideString dispid 60;
    property stUserField2: WideString dispid 61;
    property stUserField3: WideString dispid 62;
    property stUserField4: WideString dispid 63;
    property stShowKitOnPurchase: WordBool dispid 64;
    property stImageFile: WideString dispid 65;
    property stWebLiveCatalog: WideString dispid 66;
    property stWebPrevCatalog: WideString dispid 67;
    property stUseForEbus: WordBool dispid 68;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TStockIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IStock; dispid 30;
    function Update: IStock; dispid 31;
    function Clone: IStock; dispid 32;
    function Save: Integer; dispid 33;
    procedure Cancel; dispid 34;
    function BuildCodeIndex(const StockCode: WideString): WideString; dispid 35;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 48;
    function BuildParentIndex(const ParentCode: WideString; const ChildCode: WideString): WideString; dispid 49;
    function BuildDescIndex(const Desc: WideString): WideString; dispid 50;
    property stLocationList: IStockLocation readonly dispid 51;
    function BuildSupplierIndex(const AccountCode: WideString; CostCurrency: Integer; 
                                const StockCode: WideString): WideString; dispid 69;
    function BuildPandLIndex(PandLGL: Integer; const StockCode: WideString): WideString; dispid 70;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 71;
    function BuildBinLocIndex(const BinLocation: WideString): WideString; dispid 72;
    function BuildBarCodeIndex(const BarCode: WideString): WideString; dispid 73;
    property stNotes: INotes readonly dispid 74;
    property stQtyFree: Double readonly dispid 75;
    property stQtyBreaks: IQuantityBreak readonly dispid 76;
    property stAnalysisCodeI: IJobAnalysis readonly dispid 77;
    property stWhereUsed: IStockWhereUsed readonly dispid 78;
    property stBillOfMaterials: IStockBOMList readonly dispid 79;
    property stSerialBatch: ISerialBatch readonly dispid 80;
  end;

// *********************************************************************//
// Interface: IStockIntrastat2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05B53731-1BAB-41D1-B815-AF253E098EF9}
// *********************************************************************//
  IStockIntrastat2 = interface(IStockIntrastat)
    ['{05B53731-1BAB-41D1-B815-AF253E098EF9}']
    function Get_stSSDArrivalUplift: Double; safecall;
    procedure Set_stSSDArrivalUplift(Value: Double); safecall;
    property stSSDArrivalUplift: Double read Get_stSSDArrivalUplift write Set_stSSDArrivalUplift;
  end;

// *********************************************************************//
// DispIntf:  IStockIntrastat2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05B53731-1BAB-41D1-B815-AF253E098EF9}
// *********************************************************************//
  IStockIntrastat2Disp = dispinterface
    ['{05B53731-1BAB-41D1-B815-AF253E098EF9}']
    property stSSDArrivalUplift: Double dispid 8;
    property stSSDCommodityCode: WideString dispid 1;
    property stSSDSalesUnitWeight: Double dispid 2;
    property stSSDPurchaseUnitWeight: Double dispid 3;
    property stSSDUnitDesc: WideString dispid 4;
    property stSSDStockUnits: Double dispid 5;
    property stSSDDespatchUplift: Double dispid 6;
    property stSSDCountry: WideString dispid 7;
  end;

// *********************************************************************//
// Interface: IFunctions2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DDDFFD5-12C0-4CC8-A1E0-45424919DBD6}
// *********************************************************************//
  IFunctions2 = interface(IFunctions)
    ['{1DDDFFD5-12C0-4CC8-A1E0-45424919DBD6}']
    function entDouble(Int2: Smallint; Int4: Integer): Double; safecall;
  end;

// *********************************************************************//
// DispIntf:  IFunctions2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DDDFFD5-12C0-4CC8-A1E0-45424919DBD6}
// *********************************************************************//
  IFunctions2Disp = dispinterface
    ['{1DDDFFD5-12C0-4CC8-A1E0-45424919DBD6}']
    function entDouble(Int2: Smallint; Int4: Integer): Double; dispid 10;
    function entFormatDate(const EntDateStr: WideString; const DateFormat: WideString): WideString; dispid 1;
    function entRound(Value: Double; Decs: Integer): Double; dispid 2;
    function entFormatPeriodYear(Period: Integer; Year: Integer): WideString; dispid 3;
    function entConvertAmount(Amount: Double; FromCurrency: Integer; ToCurrency: Integer; 
                              RateType: Integer): Double; dispid 4;
    function entConvertDateToPeriod(const DateString: WideString; var FinancialPeriod: Integer; 
                                    var FinancialYear: Integer): Integer; dispid 5;
    function entConvertAmountWithRates(Amount: Double; ConvertToBase: WordBool; 
                                       RateCurrency: Integer; CompanyRate: Double; DailyRate: Double): Double; dispid 6;
    procedure entBrowseObject(const ObjectToBrowse: IDispatch; ShowModal: WordBool); dispid 7;
    function entCheckPassword(const UserName: WideString; const UserPassword: WideString): Integer; dispid 8;
    function entCheckSecurity(const UserName: WideString; AreaCode: Integer): Integer; dispid 9;
  end;

// *********************************************************************//
// Interface: IAltStockCode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6A5340CD-EF5F-439A-8E4D-3148501030CE}
// *********************************************************************//
  IAltStockCode = interface(IDispatch)
    ['{6A5340CD-EF5F-439A-8E4D-3148501030CE}']
    function Get_ascAcCode: WideString; safecall;
    procedure Set_ascAcCode(const Value: WideString); safecall;
    function Get_ascAltCode: WideString; safecall;
    procedure Set_ascAltCode(const Value: WideString); safecall;
    function Get_ascAltDesc: WideString; safecall;
    procedure Set_ascAltDesc(const Value: WideString); safecall;
    function Get_ascReorderPrice: Double; safecall;
    procedure Set_ascReorderPrice(Value: Double); safecall;
    function Get_ascReorderCurrency: Integer; safecall;
    procedure Set_ascReorderCurrency(Value: Integer); safecall;
    function Get_ascUseReorderPrice: WordBool; safecall;
    procedure Set_ascUseReorderPrice(Value: WordBool); safecall;
    function Get_ascNotes: INotes; safecall;
    function Get_ascLastDateUsed: WideString; safecall;
    function Get_ascLastTimeUsed: WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function BuildCodeIndex(const Code: WideString): WideString; safecall;
    function Delete: Integer; safecall;
    function Add: IAltStockCode; safecall;
    function Update: IAltStockCode; safecall;
    function Clone: IAltStockCode; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    property ascAcCode: WideString read Get_ascAcCode write Set_ascAcCode;
    property ascAltCode: WideString read Get_ascAltCode write Set_ascAltCode;
    property ascAltDesc: WideString read Get_ascAltDesc write Set_ascAltDesc;
    property ascReorderPrice: Double read Get_ascReorderPrice write Set_ascReorderPrice;
    property ascReorderCurrency: Integer read Get_ascReorderCurrency write Set_ascReorderCurrency;
    property ascUseReorderPrice: WordBool read Get_ascUseReorderPrice write Set_ascUseReorderPrice;
    property ascNotes: INotes read Get_ascNotes;
    property ascLastDateUsed: WideString read Get_ascLastDateUsed;
    property ascLastTimeUsed: WideString read Get_ascLastTimeUsed;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  IAltStockCodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6A5340CD-EF5F-439A-8E4D-3148501030CE}
// *********************************************************************//
  IAltStockCodeDisp = dispinterface
    ['{6A5340CD-EF5F-439A-8E4D-3148501030CE}']
    property ascAcCode: WideString dispid 2;
    property ascAltCode: WideString dispid 3;
    property ascAltDesc: WideString dispid 4;
    property ascReorderPrice: Double dispid 5;
    property ascReorderCurrency: Integer dispid 6;
    property ascUseReorderPrice: WordBool dispid 7;
    property ascNotes: INotes readonly dispid 8;
    property ascLastDateUsed: WideString readonly dispid 9;
    property ascLastTimeUsed: WideString readonly dispid 10;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 11;
    function Delete: Integer; dispid 12;
    function Add: IAltStockCode; dispid 1;
    function Update: IAltStockCode; dispid 13;
    function Clone: IAltStockCode; dispid 14;
    function Save: Integer; dispid 15;
    procedure Cancel; dispid 16;
  end;

// *********************************************************************//
// Interface: IMultiBinDetails
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FBC0C037-C831-4C30-9F4D-4198FDF7327C}
// *********************************************************************//
  IMultiBinDetails = interface(IDispatch)
    ['{FBC0C037-C831-4C30-9F4D-4198FDF7327C}']
    function Get_mbCode: WideString; safecall;
    procedure Set_mbCode(const Value: WideString); safecall;
    function Get_mbInDocRef: WideString; safecall;
    procedure Set_mbInDocRef(const Value: WideString); safecall;
    function Get_mbOutDocRef: WideString; safecall;
    procedure Set_mbOutDocRef(const Value: WideString); safecall;
    function Get_mbSold: WordBool; safecall;
    procedure Set_mbSold(Value: WordBool); safecall;
    function Get_mbInDate: WideString; safecall;
    procedure Set_mbInDate(const Value: WideString); safecall;
    function Get_mbOutDate: WideString; safecall;
    procedure Set_mbOutDate(const Value: WideString); safecall;
    function Get_mbCostPrice: Double; safecall;
    procedure Set_mbCostPrice(Value: Double); safecall;
    function Get_mbCapacity: Double; safecall;
    procedure Set_mbCapacity(Value: Double); safecall;
    function Get_mbInDocLine: Integer; safecall;
    procedure Set_mbInDocLine(Value: Integer); safecall;
    function Get_mbOutDocLine: Integer; safecall;
    procedure Set_mbOutDocLine(Value: Integer); safecall;
    function Get_mbQty: Double; safecall;
    procedure Set_mbQty(Value: Double); safecall;
    function Get_mbQtyUsed: Double; safecall;
    procedure Set_mbQtyUsed(Value: Double); safecall;
    function Get_mbUsed: WordBool; safecall;
    procedure Set_mbUsed(Value: WordBool); safecall;
    function Get_mbInLocation: WideString; safecall;
    procedure Set_mbInLocation(const Value: WideString); safecall;
    function Get_mbOutLocation: WideString; safecall;
    procedure Set_mbOutLocation(const Value: WideString); safecall;
    function Get_mbInOrderRef: WideString; safecall;
    procedure Set_mbInOrderRef(const Value: WideString); safecall;
    function Get_mbOutOrderRef: WideString; safecall;
    procedure Set_mbOutOrderRef(const Value: WideString); safecall;
    function Get_mbInOrderLine: Integer; safecall;
    procedure Set_mbInOrderLine(Value: Integer); safecall;
    function Get_mbOutOrderLine: Integer; safecall;
    procedure Set_mbOutOrderLine(Value: Integer); safecall;
    function Get_mbCostPriceCurrency: Integer; safecall;
    procedure Set_mbCostPriceCurrency(Value: Integer); safecall;
    function Get_mbSalesPriceCurrency: Integer; safecall;
    procedure Set_mbSalesPriceCurrency(Value: Integer); safecall;
    function Get_mbSalesPrice: Double; safecall;
    procedure Set_mbSalesPrice(Value: Double); safecall;
    function Get_mbCompanyRate: Double; safecall;
    procedure Set_mbCompanyRate(Value: Double); safecall;
    function Get_mbDailyRate: Double; safecall;
    procedure Set_mbDailyRate(Value: Double); safecall;
    function Get_mbUseOwnRates: WordBool; safecall;
    procedure Set_mbUseOwnRates(Value: WordBool); safecall;
    function Get_mbUnitOfMeasurement: WideString; safecall;
    procedure Set_mbUnitOfMeasurement(const Value: WideString); safecall;
    function Get_mbTagNo: Integer; safecall;
    procedure Set_mbTagNo(Value: Integer); safecall;
    function Get_mbAutoPickMode: TAutoPickModeType; safecall;
    procedure Set_mbAutoPickMode(Value: TAutoPickModeType); safecall;
    function Get_mbPickingPriority: WideString; safecall;
    procedure Set_mbPickingPriority(const Value: WideString); safecall;
    function Get_mbUseByDate: WideString; safecall;
    procedure Set_mbUseByDate(const Value: WideString); safecall;
    property mbCode: WideString read Get_mbCode write Set_mbCode;
    property mbInDocRef: WideString read Get_mbInDocRef write Set_mbInDocRef;
    property mbOutDocRef: WideString read Get_mbOutDocRef write Set_mbOutDocRef;
    property mbSold: WordBool read Get_mbSold write Set_mbSold;
    property mbInDate: WideString read Get_mbInDate write Set_mbInDate;
    property mbOutDate: WideString read Get_mbOutDate write Set_mbOutDate;
    property mbCostPrice: Double read Get_mbCostPrice write Set_mbCostPrice;
    property mbCapacity: Double read Get_mbCapacity write Set_mbCapacity;
    property mbInDocLine: Integer read Get_mbInDocLine write Set_mbInDocLine;
    property mbOutDocLine: Integer read Get_mbOutDocLine write Set_mbOutDocLine;
    property mbQty: Double read Get_mbQty write Set_mbQty;
    property mbQtyUsed: Double read Get_mbQtyUsed write Set_mbQtyUsed;
    property mbUsed: WordBool read Get_mbUsed write Set_mbUsed;
    property mbInLocation: WideString read Get_mbInLocation write Set_mbInLocation;
    property mbOutLocation: WideString read Get_mbOutLocation write Set_mbOutLocation;
    property mbInOrderRef: WideString read Get_mbInOrderRef write Set_mbInOrderRef;
    property mbOutOrderRef: WideString read Get_mbOutOrderRef write Set_mbOutOrderRef;
    property mbInOrderLine: Integer read Get_mbInOrderLine write Set_mbInOrderLine;
    property mbOutOrderLine: Integer read Get_mbOutOrderLine write Set_mbOutOrderLine;
    property mbCostPriceCurrency: Integer read Get_mbCostPriceCurrency write Set_mbCostPriceCurrency;
    property mbSalesPriceCurrency: Integer read Get_mbSalesPriceCurrency write Set_mbSalesPriceCurrency;
    property mbSalesPrice: Double read Get_mbSalesPrice write Set_mbSalesPrice;
    property mbCompanyRate: Double read Get_mbCompanyRate write Set_mbCompanyRate;
    property mbDailyRate: Double read Get_mbDailyRate write Set_mbDailyRate;
    property mbUseOwnRates: WordBool read Get_mbUseOwnRates write Set_mbUseOwnRates;
    property mbUnitOfMeasurement: WideString read Get_mbUnitOfMeasurement write Set_mbUnitOfMeasurement;
    property mbTagNo: Integer read Get_mbTagNo write Set_mbTagNo;
    property mbAutoPickMode: TAutoPickModeType read Get_mbAutoPickMode write Set_mbAutoPickMode;
    property mbPickingPriority: WideString read Get_mbPickingPriority write Set_mbPickingPriority;
    property mbUseByDate: WideString read Get_mbUseByDate write Set_mbUseByDate;
  end;

// *********************************************************************//
// DispIntf:  IMultiBinDetailsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FBC0C037-C831-4C30-9F4D-4198FDF7327C}
// *********************************************************************//
  IMultiBinDetailsDisp = dispinterface
    ['{FBC0C037-C831-4C30-9F4D-4198FDF7327C}']
    property mbCode: WideString dispid 1;
    property mbInDocRef: WideString dispid 2;
    property mbOutDocRef: WideString dispid 3;
    property mbSold: WordBool dispid 4;
    property mbInDate: WideString dispid 5;
    property mbOutDate: WideString dispid 6;
    property mbCostPrice: Double dispid 7;
    property mbCapacity: Double dispid 8;
    property mbInDocLine: Integer dispid 9;
    property mbOutDocLine: Integer dispid 10;
    property mbQty: Double dispid 11;
    property mbQtyUsed: Double dispid 12;
    property mbUsed: WordBool dispid 13;
    property mbInLocation: WideString dispid 14;
    property mbOutLocation: WideString dispid 15;
    property mbInOrderRef: WideString dispid 16;
    property mbOutOrderRef: WideString dispid 17;
    property mbInOrderLine: Integer dispid 18;
    property mbOutOrderLine: Integer dispid 19;
    property mbCostPriceCurrency: Integer dispid 20;
    property mbSalesPriceCurrency: Integer dispid 21;
    property mbSalesPrice: Double dispid 22;
    property mbCompanyRate: Double dispid 23;
    property mbDailyRate: Double dispid 24;
    property mbUseOwnRates: WordBool dispid 25;
    property mbUnitOfMeasurement: WideString dispid 26;
    property mbTagNo: Integer dispid 27;
    property mbAutoPickMode: TAutoPickModeType dispid 28;
    property mbPickingPriority: WideString dispid 29;
    property mbUseByDate: WideString dispid 30;
  end;

// *********************************************************************//
// Interface: IMultiBin
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09C1432F-E2FF-4C23-8ADF-43A33F9E7637}
// *********************************************************************//
  IMultiBin = interface(IMultiBinDetails)
    ['{09C1432F-E2FF-4C23-8ADF-43A33F9E7637}']
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function Add: IMultiBin; safecall;
    function Update: IMultiBin; safecall;
    function Clone: IMultiBin; safecall;
    function Save: Integer; safecall;
    function BuildFullIndex(Sold: WordBool; const Location: WideString; const Priority: WideString; 
                            const DateIn: WideString; const Code: WideString): WideString; safecall;
    function Get_KeyString: WideString; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    property Position: Integer read Get_Position write Set_Position;
    property KeyString: WideString read Get_KeyString;
  end;

// *********************************************************************//
// DispIntf:  IMultiBinDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09C1432F-E2FF-4C23-8ADF-43A33F9E7637}
// *********************************************************************//
  IMultiBinDisp = dispinterface
    ['{09C1432F-E2FF-4C23-8ADF-43A33F9E7637}']
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function Add: IMultiBin; dispid 31;
    function Update: IMultiBin; dispid 32;
    function Clone: IMultiBin; dispid 33;
    function Save: Integer; dispid 34;
    function BuildFullIndex(Sold: WordBool; const Location: WideString; const Priority: WideString; 
                            const DateIn: WideString; const Code: WideString): WideString; dispid 35;
    property KeyString: WideString readonly dispid 36;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property mbCode: WideString dispid 1;
    property mbInDocRef: WideString dispid 2;
    property mbOutDocRef: WideString dispid 3;
    property mbSold: WordBool dispid 4;
    property mbInDate: WideString dispid 5;
    property mbOutDate: WideString dispid 6;
    property mbCostPrice: Double dispid 7;
    property mbCapacity: Double dispid 8;
    property mbInDocLine: Integer dispid 9;
    property mbOutDocLine: Integer dispid 10;
    property mbQty: Double dispid 11;
    property mbQtyUsed: Double dispid 12;
    property mbUsed: WordBool dispid 13;
    property mbInLocation: WideString dispid 14;
    property mbOutLocation: WideString dispid 15;
    property mbInOrderRef: WideString dispid 16;
    property mbOutOrderRef: WideString dispid 17;
    property mbInOrderLine: Integer dispid 18;
    property mbOutOrderLine: Integer dispid 19;
    property mbCostPriceCurrency: Integer dispid 20;
    property mbSalesPriceCurrency: Integer dispid 21;
    property mbSalesPrice: Double dispid 22;
    property mbCompanyRate: Double dispid 23;
    property mbDailyRate: Double dispid 24;
    property mbUseOwnRates: WordBool dispid 25;
    property mbUnitOfMeasurement: WideString dispid 26;
    property mbTagNo: Integer dispid 27;
    property mbAutoPickMode: TAutoPickModeType dispid 28;
    property mbPickingPriority: WideString dispid 29;
    property mbUseByDate: WideString dispid 30;
  end;

// *********************************************************************//
// Interface: ITransactionLineMultiBin
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E29E95A-E301-4085-B426-B2F42BA72129}
// *********************************************************************//
  ITransactionLineMultiBin = interface(IDispatch)
    ['{0E29E95A-E301-4085-B426-B2F42BA72129}']
    function Get_tlCount: Integer; safecall;
    function Get_tlUsesMultiBins: WordBool; safecall;
    function Get_tlUsedMultiBins(Index: Integer): IMultiBinDetails; safecall;
    function Add: IMultiBin; safecall;
    function UseMultiBin(const MultiBin: IMultiBinDetails; Qty: Double): Integer; safecall;
    procedure Refresh; safecall;
    property tlCount: Integer read Get_tlCount;
    property tlUsesMultiBins: WordBool read Get_tlUsesMultiBins;
    property tlUsedMultiBins[Index: Integer]: IMultiBinDetails read Get_tlUsedMultiBins;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineMultiBinDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E29E95A-E301-4085-B426-B2F42BA72129}
// *********************************************************************//
  ITransactionLineMultiBinDisp = dispinterface
    ['{0E29E95A-E301-4085-B426-B2F42BA72129}']
    property tlCount: Integer readonly dispid 1;
    property tlUsesMultiBins: WordBool readonly dispid 2;
    property tlUsedMultiBins[Index: Integer]: IMultiBinDetails readonly dispid 3;
    function Add: IMultiBin; dispid 4;
    function UseMultiBin(const MultiBin: IMultiBinDetails; Qty: Double): Integer; dispid 5;
    procedure Refresh; dispid 6;
  end;

// *********************************************************************//
// Interface: ISalesAnalysis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12545970-2B2A-47B8-A568-01F4F3C12B95}
// *********************************************************************//
  ISalesAnalysis = interface(IDispatch)
    ['{12545970-2B2A-47B8-A568-01F4F3C12B95}']
    function Get_saReOrderQty: Double; safecall;
    procedure Set_saReOrderQty(Value: Double); safecall;
    function Get_saLastDate: WideString; safecall;
    function Get_saLastPrice: Double; safecall;
    function Get_saLastPriceCurrency: Integer; safecall;
    function Get_saCostCentre: WideString; safecall;
    function Get_saDepartment: WideString; safecall;
    function Get_saNetValue: Double; safecall;
    function Get_saDiscount: Double; safecall;
    function Get_saVATCode: WideString; safecall;
    function Get_saQtyMul: Double; safecall;
    function Get_saDiscFlag: WideString; safecall;
    function Get_saLineType: WideString; safecall;
    function Get_saInclusiveVATCode: WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Save: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_saHistory: ISalesAnalysisHistory; safecall;
    function Get_saQtyPack: Double; safecall;
    property saReOrderQty: Double read Get_saReOrderQty write Set_saReOrderQty;
    property saLastDate: WideString read Get_saLastDate;
    property saLastPrice: Double read Get_saLastPrice;
    property saLastPriceCurrency: Integer read Get_saLastPriceCurrency;
    property saCostCentre: WideString read Get_saCostCentre;
    property saDepartment: WideString read Get_saDepartment;
    property saNetValue: Double read Get_saNetValue;
    property saDiscount: Double read Get_saDiscount;
    property saVATCode: WideString read Get_saVATCode;
    property saQtyMul: Double read Get_saQtyMul;
    property saDiscFlag: WideString read Get_saDiscFlag;
    property saLineType: WideString read Get_saLineType;
    property saInclusiveVATCode: WideString read Get_saInclusiveVATCode;
    property Position: Integer read Get_Position write Set_Position;
    property KeyString: WideString read Get_KeyString;
    property saHistory: ISalesAnalysisHistory read Get_saHistory;
    property saQtyPack: Double read Get_saQtyPack;
  end;

// *********************************************************************//
// DispIntf:  ISalesAnalysisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12545970-2B2A-47B8-A568-01F4F3C12B95}
// *********************************************************************//
  ISalesAnalysisDisp = dispinterface
    ['{12545970-2B2A-47B8-A568-01F4F3C12B95}']
    property saReOrderQty: Double dispid 1;
    property saLastDate: WideString readonly dispid 2;
    property saLastPrice: Double readonly dispid 3;
    property saLastPriceCurrency: Integer readonly dispid 5;
    property saCostCentre: WideString readonly dispid 10;
    property saDepartment: WideString readonly dispid 11;
    property saNetValue: Double readonly dispid 13;
    property saDiscount: Double readonly dispid 14;
    property saVATCode: WideString readonly dispid 15;
    property saQtyMul: Double readonly dispid 16;
    property saDiscFlag: WideString readonly dispid 17;
    property saLineType: WideString readonly dispid 18;
    property saInclusiveVATCode: WideString readonly dispid 19;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 34;
    property KeyString: WideString readonly dispid 30;
    property saHistory: ISalesAnalysisHistory readonly dispid 4;
    property saQtyPack: Double readonly dispid 12;
  end;

// *********************************************************************//
// Interface: ICustomerSalesAnalysis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6107E2C6-0A80-496B-B2A7-E60387241340}
// *********************************************************************//
  ICustomerSalesAnalysis = interface(ISalesAnalysis)
    ['{6107E2C6-0A80-496B-B2A7-E60387241340}']
    function Get_saStockCode: WideString; safecall;
    function Get_saStockFolio: Integer; safecall;
    function Get_saDisplayOrder: Integer; safecall;
    procedure Set_saDisplayOrder(Value: Integer); safecall;
    function BuildDisplayOrderIndex(DisplayOrder: Integer): WideString; safecall;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; safecall;
    function Get_Index: TCustomerSalesAnalysisIndexType; safecall;
    procedure Set_Index(Value: TCustomerSalesAnalysisIndexType); safecall;
    function Update: ICustomerSalesAnalysis; safecall;
    property saStockCode: WideString read Get_saStockCode;
    property saStockFolio: Integer read Get_saStockFolio;
    property saDisplayOrder: Integer read Get_saDisplayOrder write Set_saDisplayOrder;
    property Index: TCustomerSalesAnalysisIndexType read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  ICustomerSalesAnalysisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6107E2C6-0A80-496B-B2A7-E60387241340}
// *********************************************************************//
  ICustomerSalesAnalysisDisp = dispinterface
    ['{6107E2C6-0A80-496B-B2A7-E60387241340}']
    property saStockCode: WideString readonly dispid 25;
    property saStockFolio: Integer readonly dispid 20;
    property saDisplayOrder: Integer dispid 21;
    function BuildDisplayOrderIndex(DisplayOrder: Integer): WideString; dispid 22;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; dispid 23;
    property Index: TCustomerSalesAnalysisIndexType dispid 24;
    function Update: ICustomerSalesAnalysis; dispid 7;
    property saReOrderQty: Double dispid 1;
    property saLastDate: WideString readonly dispid 2;
    property saLastPrice: Double readonly dispid 3;
    property saLastPriceCurrency: Integer readonly dispid 5;
    property saCostCentre: WideString readonly dispid 10;
    property saDepartment: WideString readonly dispid 11;
    property saNetValue: Double readonly dispid 13;
    property saDiscount: Double readonly dispid 14;
    property saVATCode: WideString readonly dispid 15;
    property saQtyMul: Double readonly dispid 16;
    property saDiscFlag: WideString readonly dispid 17;
    property saLineType: WideString readonly dispid 18;
    property saInclusiveVATCode: WideString readonly dispid 19;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 34;
    property KeyString: WideString readonly dispid 30;
    property saHistory: ISalesAnalysisHistory readonly dispid 4;
    property saQtyPack: Double readonly dispid 12;
  end;

// *********************************************************************//
// Interface: ISalesAnalysisHistory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D8B4012-D0E3-40C3-94F6-D0B2C3A7A5FC}
// *********************************************************************//
  ISalesAnalysisHistory = interface(IDispatch)
    ['{2D8B4012-D0E3-40C3-94F6-D0B2C3A7A5FC}']
    function Get_saPeriod: Integer; safecall;
    procedure Set_saPeriod(Value: Integer); safecall;
    function Get_saYear: Integer; safecall;
    procedure Set_saYear(Value: Integer); safecall;
    function Get_saQty: Double; safecall;
    function Get_saSales: Double; safecall;
    function Get_saCurrency: Integer; safecall;
    procedure Set_saCurrency(Value: Integer); safecall;
    function Get_saCost: Double; safecall;
    function Get_saFilterType: TSalesAnalysisFilterType; safecall;
    procedure Set_saFilterType(Value: TSalesAnalysisFilterType); safecall;
    function Get_saFilterCode: WideString; safecall;
    procedure Set_saFilterCode(const Value: WideString); safecall;
    function Get_saForecast: Double; safecall;
    procedure Set_saForecast(Value: Double); safecall;
    function Get_saRevisedForecast: Double; safecall;
    procedure Set_saRevisedForecast(Value: Double); safecall;
    function Update: ISalesAnalysisHistory; safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    property saPeriod: Integer read Get_saPeriod write Set_saPeriod;
    property saYear: Integer read Get_saYear write Set_saYear;
    property saQty: Double read Get_saQty;
    property saSales: Double read Get_saSales;
    property saCurrency: Integer read Get_saCurrency write Set_saCurrency;
    property saCost: Double read Get_saCost;
    property saFilterType: TSalesAnalysisFilterType read Get_saFilterType write Set_saFilterType;
    property saFilterCode: WideString read Get_saFilterCode write Set_saFilterCode;
    property saForecast: Double read Get_saForecast write Set_saForecast;
    property saRevisedForecast: Double read Get_saRevisedForecast write Set_saRevisedForecast;
  end;

// *********************************************************************//
// DispIntf:  ISalesAnalysisHistoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D8B4012-D0E3-40C3-94F6-D0B2C3A7A5FC}
// *********************************************************************//
  ISalesAnalysisHistoryDisp = dispinterface
    ['{2D8B4012-D0E3-40C3-94F6-D0B2C3A7A5FC}']
    property saPeriod: Integer dispid 1;
    property saYear: Integer dispid 2;
    property saQty: Double readonly dispid 3;
    property saSales: Double readonly dispid 4;
    property saCurrency: Integer dispid 7;
    property saCost: Double readonly dispid 8;
    property saFilterType: TSalesAnalysisFilterType dispid 12;
    property saFilterCode: WideString dispid 13;
    property saForecast: Double dispid 5;
    property saRevisedForecast: Double dispid 6;
    function Update: ISalesAnalysisHistory; dispid 9;
    function Save: Integer; dispid 10;
    procedure Cancel; dispid 11;
  end;

// *********************************************************************//
// Interface: IStockSalesAnalysis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {815154CC-D53F-4CED-8445-FA61431C05F9}
// *********************************************************************//
  IStockSalesAnalysis = interface(ISalesAnalysis)
    ['{815154CC-D53F-4CED-8445-FA61431C05F9}']
    function Get_saAcCode: WideString; safecall;
    function BuildAcCodeIndex(const acCode: WideString): WideString; safecall;
    function Update: IStockSalesAnalysis; safecall;
    property saAcCode: WideString read Get_saAcCode;
  end;

// *********************************************************************//
// DispIntf:  IStockSalesAnalysisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {815154CC-D53F-4CED-8445-FA61431C05F9}
// *********************************************************************//
  IStockSalesAnalysisDisp = dispinterface
    ['{815154CC-D53F-4CED-8445-FA61431C05F9}']
    property saAcCode: WideString readonly dispid 41;
    function BuildAcCodeIndex(const acCode: WideString): WideString; dispid 7;
    function Update: IStockSalesAnalysis; dispid 6;
    property saReOrderQty: Double dispid 1;
    property saLastDate: WideString readonly dispid 2;
    property saLastPrice: Double readonly dispid 3;
    property saLastPriceCurrency: Integer readonly dispid 5;
    property saCostCentre: WideString readonly dispid 10;
    property saDepartment: WideString readonly dispid 11;
    property saNetValue: Double readonly dispid 13;
    property saDiscount: Double readonly dispid 14;
    property saVATCode: WideString readonly dispid 15;
    property saQtyMul: Double readonly dispid 16;
    property saDiscFlag: WideString readonly dispid 17;
    property saLineType: WideString readonly dispid 18;
    property saInclusiveVATCode: WideString readonly dispid 19;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 34;
    property KeyString: WideString readonly dispid 30;
    property saHistory: ISalesAnalysisHistory readonly dispid 4;
    property saQtyPack: Double readonly dispid 12;
  end;

// *********************************************************************//
// Interface: ITransactionLine3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAE4F0D7-802E-450E-B0B3-AFF43A9F9A8D}
// *********************************************************************//
  ITransactionLine3 = interface(ITransactionLine2)
    ['{DAE4F0D7-802E-450E-B0B3-AFF43A9F9A8D}']
    function Get_tlMultiBin: ITransactionLineMultiBin; safecall;
    function Get_tlAltStockCodeI: IAltStockCode; safecall;
    function Get_tlRunNo: Integer; safecall;
    function Get_tlStockDeductQty: Double; safecall;
    function Get_tlUseQtyMul: WordBool; safecall;
    function Get_tlReconciliationDate: WideString; safecall;
    function Get_tlB2BLinkFolio: Integer; safecall;
    function Get_tlB2BLineNo: Integer; safecall;
    function Get_tlCOSDailyRate: Double; safecall;
    function Get_tlVATIncValue: Double; safecall;
    procedure Set_tlVATIncValue(Value: Double); safecall;
    function Get_tlBinQty: Double; safecall;
    procedure ExplodeBOM; safecall;
    function Get_tlQtyPack: Double; safecall;
    function Get_tlAsApplication: ITransactionLineAsApplication; safecall;
    procedure AddDescriptionLines; safecall;
    property tlMultiBin: ITransactionLineMultiBin read Get_tlMultiBin;
    property tlAltStockCodeI: IAltStockCode read Get_tlAltStockCodeI;
    property tlRunNo: Integer read Get_tlRunNo;
    property tlStockDeductQty: Double read Get_tlStockDeductQty;
    property tlUseQtyMul: WordBool read Get_tlUseQtyMul;
    property tlReconciliationDate: WideString read Get_tlReconciliationDate;
    property tlB2BLinkFolio: Integer read Get_tlB2BLinkFolio;
    property tlB2BLineNo: Integer read Get_tlB2BLineNo;
    property tlCOSDailyRate: Double read Get_tlCOSDailyRate;
    property tlVATIncValue: Double read Get_tlVATIncValue write Set_tlVATIncValue;
    property tlBinQty: Double read Get_tlBinQty;
    property tlQtyPack: Double read Get_tlQtyPack;
    property tlAsApplication: ITransactionLineAsApplication read Get_tlAsApplication;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAE4F0D7-802E-450E-B0B3-AFF43A9F9A8D}
// *********************************************************************//
  ITransactionLine3Disp = dispinterface
    ['{DAE4F0D7-802E-450E-B0B3-AFF43A9F9A8D}']
    property tlMultiBin: ITransactionLineMultiBin readonly dispid 70;
    property tlAltStockCodeI: IAltStockCode readonly dispid 71;
    property tlRunNo: Integer readonly dispid 72;
    property tlStockDeductQty: Double readonly dispid 73;
    property tlUseQtyMul: WordBool readonly dispid 74;
    property tlReconciliationDate: WideString readonly dispid 76;
    property tlB2BLinkFolio: Integer readonly dispid 77;
    property tlB2BLineNo: Integer readonly dispid 78;
    property tlCOSDailyRate: Double readonly dispid 79;
    property tlVATIncValue: Double dispid 80;
    property tlBinQty: Double readonly dispid 81;
    procedure ExplodeBOM; dispid 82;
    property tlQtyPack: Double readonly dispid 84;
    property tlAsApplication: ITransactionLineAsApplication readonly dispid 87;
    procedure AddDescriptionLines; dispid 85;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: ISerialBatchDetails2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3DF5A944-D2EA-4538-AB4C-D45CBEDDE8B4}
// *********************************************************************//
  ISerialBatchDetails2 = interface(ISerialBatchDetails)
    ['{3DF5A944-D2EA-4538-AB4C-D45CBEDDE8B4}']
    function Get_snBinCode: WideString; safecall;
    procedure Set_snBinCode(const Value: WideString); safecall;
    property snBinCode: WideString read Get_snBinCode write Set_snBinCode;
  end;

// *********************************************************************//
// DispIntf:  ISerialBatchDetails2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3DF5A944-D2EA-4538-AB4C-D45CBEDDE8B4}
// *********************************************************************//
  ISerialBatchDetails2Disp = dispinterface
    ['{3DF5A944-D2EA-4538-AB4C-D45CBEDDE8B4}']
    property snBinCode: WideString dispid 6;
    property snSerialNo: WideString dispid 1;
    property snBatchNo: WideString dispid 2;
    property snType: TSerialBatchType readonly dispid 3;
    property snSold: WordBool dispid 4;
    property snUseByDate: WideString dispid 5;
    property snInDate: WideString dispid 9;
    property snInOrderRef: WideString dispid 10;
    property snInOrderLine: Integer dispid 11;
    property snInDocRef: WideString dispid 12;
    property snInDocLine: Integer dispid 13;
    property snInLocation: WideString dispid 14;
    property snOutDate: WideString dispid 21;
    property snOutOrderRef: WideString dispid 22;
    property snOutOrderLine: Integer dispid 23;
    property snOutDocRef: WideString dispid 24;
    property snOutDocLine: Integer dispid 25;
    property snOutLocation: WideString dispid 26;
    property snCostPrice: Double dispid 27;
    property snCostPriceCurrency: Smallint dispid 28;
    property snSalesPrice: Double dispid 29;
    property snSalesPriceCurrency: Smallint dispid 30;
    property snBatchQuantity: Double dispid 31;
    property snBatchQuantitySold: Double dispid 32;
    property snDailyRate: Double dispid 33;
    property snCompanyRate: Double dispid 34;
    property snNotes: INotes readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ISerialBatch2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B379EA54-1382-4C13-857C-427FD8525F9E}
// *********************************************************************//
  ISerialBatch2 = interface(ISerialBatch)
    ['{B379EA54-1382-4C13-857C-427FD8525F9E}']
    function Get_snBinCode: WideString; safecall;
    procedure Set_snBinCode(const Value: WideString); safecall;
    property snBinCode: WideString read Get_snBinCode write Set_snBinCode;
  end;

// *********************************************************************//
// DispIntf:  ISerialBatch2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B379EA54-1382-4C13-857C-427FD8525F9E}
// *********************************************************************//
  ISerialBatch2Disp = dispinterface
    ['{B379EA54-1382-4C13-857C-427FD8525F9E}']
    property snBinCode: WideString dispid 15;
    function BuildUsedSerialIndex(Sold: WordBool; const SerialNo: WideString): WideString; dispid 257;
    function Add: ISerialBatch; dispid 258;
    function Clone: ISerialBatch; dispid 260;
    function Save: Integer; dispid 261;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildSerialIndex(const SerialNo: WideString): WideString; dispid 6;
    function BuildBatchIndex(const BatchNo: WideString): WideString; dispid 7;
    property Index: TSerialBatchIndex dispid 8;
    property snSerialNo: WideString dispid 1;
    property snBatchNo: WideString dispid 2;
    property snType: TSerialBatchType readonly dispid 3;
    property snSold: WordBool dispid 4;
    property snUseByDate: WideString dispid 5;
    property snInDate: WideString dispid 9;
    property snInOrderRef: WideString dispid 10;
    property snInOrderLine: Integer dispid 11;
    property snInDocRef: WideString dispid 12;
    property snInDocLine: Integer dispid 13;
    property snInLocation: WideString dispid 14;
    property snOutDate: WideString dispid 21;
    property snOutOrderRef: WideString dispid 22;
    property snOutOrderLine: Integer dispid 23;
    property snOutDocRef: WideString dispid 24;
    property snOutDocLine: Integer dispid 25;
    property snOutLocation: WideString dispid 26;
    property snCostPrice: Double dispid 27;
    property snCostPriceCurrency: Smallint dispid 28;
    property snSalesPrice: Double dispid 29;
    property snSalesPriceCurrency: Smallint dispid 30;
    property snBatchQuantity: Double dispid 31;
    property snBatchQuantitySold: Double dispid 32;
    property snDailyRate: Double dispid 33;
    property snCompanyRate: Double dispid 34;
    property snNotes: INotes readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ISystemSetup3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78509B73-52E4-4A5E-8EE8-5FA89B9AB765}
// *********************************************************************//
  ISystemSetup3 = interface(ISystemSetup2)
    ['{78509B73-52E4-4A5E-8EE8-5FA89B9AB765}']
    function Get_ssFilterByBinLocation: WordBool; safecall;
    function Get_ssKeepBinHistory: WordBool; safecall;
    function Get_ssBinMask: WideString; safecall;
    function Get_ssBudgetByCCDeptEx: TBudgetByCCDeptType; safecall;
    function Get_ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType; safecall;
    property ssFilterByBinLocation: WordBool read Get_ssFilterByBinLocation;
    property ssKeepBinHistory: WordBool read Get_ssKeepBinHistory;
    property ssBinMask: WideString read Get_ssBinMask;
    property ssBudgetByCCDeptEx: TBudgetByCCDeptType read Get_ssBudgetByCCDeptEx;
    property ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType read Get_ssStatementUseInvoiceDateEx;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetup3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78509B73-52E4-4A5E-8EE8-5FA89B9AB765}
// *********************************************************************//
  ISystemSetup3Disp = dispinterface
    ['{78509B73-52E4-4A5E-8EE8-5FA89B9AB765}']
    property ssFilterByBinLocation: WordBool readonly dispid 116;
    property ssKeepBinHistory: WordBool readonly dispid 117;
    property ssBinMask: WideString readonly dispid 118;
    property ssBudgetByCCDeptEx: TBudgetByCCDeptType readonly dispid 119;
    property ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType readonly dispid 120;
    property ssWOPDisableWIP: WordBool readonly dispid 109;
    property ssWORAllocStockOnPick: WordBool readonly dispid 110;
    property ssWORCopyStkNotes: TWOPStockNotesType readonly dispid 111;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet readonly dispid 114;
    property ssCISSetup: ISystemSetupCIS readonly dispid 115;
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ITransaction3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29E0A388-218E-44CD-B8DA-6777487460CD}
// *********************************************************************//
  ITransaction3 = interface(ITransaction2)
    ['{29E0A388-218E-44CD-B8DA-6777487460CD}']
    function Get_thAutoTransaction: WordBool; safecall;
    function Get_thDeliveryRunNo: WideString; safecall;
    function Get_thExternal: WordBool; safecall;
    function Get_thSettledVAT: Double; safecall;
    function Get_thVATClaimed: Double; safecall;
    function Get_thPickingRunNo: Integer; safecall;
    function Get_thDeliveryNoteRef: WideString; safecall;
    function Get_thVATCompanyRate: Double; safecall;
    function Get_thVATDailyRate: Double; safecall;
    function Get_thPostCompanyRate: Double; safecall;
    function Get_thPostDailyRate: Double; safecall;
    function Get_thPostDiscAmount: Double; safecall;
    function Get_thPostDiscTaken: WordBool; safecall;
    function Get_thLastDebtChaseLetter: Integer; safecall;
    function Get_thExported: WordBool; safecall;
    procedure Set_thExported(Value: WordBool); safecall;
    function Get_thAsApplication: ITransactionAsApplication; safecall;
    property thAutoTransaction: WordBool read Get_thAutoTransaction;
    property thDeliveryRunNo: WideString read Get_thDeliveryRunNo;
    property thExternal: WordBool read Get_thExternal;
    property thSettledVAT: Double read Get_thSettledVAT;
    property thVATClaimed: Double read Get_thVATClaimed;
    property thPickingRunNo: Integer read Get_thPickingRunNo;
    property thDeliveryNoteRef: WideString read Get_thDeliveryNoteRef;
    property thVATCompanyRate: Double read Get_thVATCompanyRate;
    property thVATDailyRate: Double read Get_thVATDailyRate;
    property thPostCompanyRate: Double read Get_thPostCompanyRate;
    property thPostDailyRate: Double read Get_thPostDailyRate;
    property thPostDiscAmount: Double read Get_thPostDiscAmount;
    property thPostDiscTaken: WordBool read Get_thPostDiscTaken;
    property thLastDebtChaseLetter: Integer read Get_thLastDebtChaseLetter;
    property thExported: WordBool read Get_thExported write Set_thExported;
    property thAsApplication: ITransactionAsApplication read Get_thAsApplication;
  end;

// *********************************************************************//
// DispIntf:  ITransaction3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29E0A388-218E-44CD-B8DA-6777487460CD}
// *********************************************************************//
  ITransaction3Disp = dispinterface
    ['{29E0A388-218E-44CD-B8DA-6777487460CD}']
    property thAutoTransaction: WordBool readonly dispid 106;
    property thDeliveryRunNo: WideString readonly dispid 107;
    property thExternal: WordBool readonly dispid 108;
    property thSettledVAT: Double readonly dispid 109;
    property thVATClaimed: Double readonly dispid 110;
    property thPickingRunNo: Integer readonly dispid 111;
    property thDeliveryNoteRef: WideString readonly dispid 112;
    property thVATCompanyRate: Double readonly dispid 113;
    property thVATDailyRate: Double readonly dispid 114;
    property thPostCompanyRate: Double readonly dispid 115;
    property thPostDailyRate: Double readonly dispid 116;
    property thPostDiscAmount: Double readonly dispid 117;
    property thPostDiscTaken: WordBool readonly dispid 118;
    property thLastDebtChaseLetter: Integer readonly dispid 119;
    property thExported: WordBool dispid 120;
    property thAsApplication: ITransactionAsApplication readonly dispid 121;
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: IBtrieveFunctions2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3DD3145E-5E32-42A2-85A0-D46A931F537A}
// *********************************************************************//
  IBtrieveFunctions2 = interface(IBtrieveFunctions)
    ['{3DD3145E-5E32-42A2-85A0-D46A931F537A}']
    function Get_KeyString2: WideString; safecall;
    property KeyString2: WideString read Get_KeyString2;
  end;

// *********************************************************************//
// DispIntf:  IBtrieveFunctions2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3DD3145E-5E32-42A2-85A0-D46A931F537A}
// *********************************************************************//
  IBtrieveFunctions2Disp = dispinterface
    ['{3DD3145E-5E32-42A2-85A0-D46A931F537A}']
    property KeyString2: WideString readonly dispid 2;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property Index: Integer dispid 1;
  end;

// *********************************************************************//
// Interface: IPrintFormList2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A3D27EF-F92C-4297-8937-A2673AA02FB4}
// *********************************************************************//
  IPrintFormList2 = interface(IPrintFormList)
    ['{0A3D27EF-F92C-4297-8937-A2673AA02FB4}']
    function AddForms(const FormsList: IPrintFormList): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPrintFormList2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A3D27EF-F92C-4297-8937-A2673AA02FB4}
// *********************************************************************//
  IPrintFormList2Disp = dispinterface
    ['{0A3D27EF-F92C-4297-8937-A2673AA02FB4}']
    function AddForms(const FormsList: IPrintFormList): Integer; dispid 5;
    property pfForms[Index: Integer]: IPrintFormDetail readonly dispid 0; default;
    property pfCount: Integer readonly dispid 1;
    function Add: IPrintFormDetail; dispid 2;
    procedure Delete(Index: Integer); dispid 3;
    procedure Clear; dispid 4;
  end;

// *********************************************************************//
// Interface: ITransactionAsApplication
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DC881D0-54B5-4F8C-B97F-BF0E1B2ECC95}
// *********************************************************************//
  ITransactionAsApplication = interface(IDispatch)
    ['{6DC881D0-54B5-4F8C-B97F-BF0E1B2ECC95}']
    function Get_tpFolioNum: Integer; safecall;
    function Get_tpJobCode: WideString; safecall;
    function Get_tpAcCode: WideString; safecall;
    procedure Set_tpAcCode(const Value: WideString); safecall;
    function Get_tpRunNo: Integer; safecall;
    function Get_tpEmployeeCode: WideString; safecall;
    procedure Set_tpEmployeeCode(const Value: WideString); safecall;
    function Get_tpParentTerms: WideString; safecall;
    procedure Set_tpParentTerms(const Value: WideString); safecall;
    function Get_tpTermsInterimFlag: TTermsInterimType; safecall;
    procedure Set_tpTermsInterimFlag(Value: TTermsInterimType); safecall;
    function Get_tpAppsInterimFlag: TAppsInterimType; safecall;
    procedure Set_tpAppsInterimFlag(Value: TAppsInterimType); safecall;
    function Get_tpPeriod: Integer; safecall;
    procedure Set_tpPeriod(Value: Integer); safecall;
    function Get_tpYear: Integer; safecall;
    procedure Set_tpYear(Value: Integer); safecall;
    function Get_tpCurrency: Integer; safecall;
    procedure Set_tpCurrency(Value: Integer); safecall;
    function Get_tpDailyRate: Double; safecall;
    procedure Set_tpDailyRate(Value: Double); safecall;
    function Get_tpCompanyRate: Double; safecall;
    procedure Set_tpCompanyRate(Value: Double); safecall;
    function Get_tpOurRef: WideString; safecall;
    procedure Set_tpOurRef(const Value: WideString); safecall;
    function Get_tpYourRef: WideString; safecall;
    procedure Set_tpYourRef(const Value: WideString); safecall;
    function Get_tpTotalCertYTD: Double; safecall;
    function Get_tpApplied: Double; safecall;
    function Get_tpTotalBudget: Double; safecall;
    function Get_tpTotalDeduct: Double; safecall;
    function Get_tpTotalRetain: Double; safecall;
    function Get_tpTotalDeductYTD: Double; safecall;
    function Get_tpTotalRetainYTD: Double; safecall;
    function Get_tpTotalAppliedYTD: Double; safecall;
    function Get_tpTotalContra: Double; safecall;
    function Get_tpCertifiedValue: Double; safecall;
    function Get_tpATR: WordBool; safecall;
    procedure Set_tpATR(Value: WordBool); safecall;
    function Get_tpDeferVAT: WordBool; safecall;
    procedure Set_tpDeferVAT(Value: WordBool); safecall;
    function Get_tpCertified: WordBool; safecall;
    procedure Set_tpCertified(Value: WordBool); safecall;
    function Get_tpDate: WideString; safecall;
    procedure Set_tpDate(const Value: WideString); safecall;
    function Get_tpDeliveryAddress: IAddress; safecall;
    function Get_tpTotalVAT: Double; safecall;
    function Get_tpVATAnalysis(const Index: WideString): Double; safecall;
    function Get_tpManualVAT: WordBool; safecall;
    procedure Set_tpManualVAT(Value: WordBool); safecall;
    function Get_tpCISTaxDue: Double; safecall;
    procedure Set_tpCISTaxDue(Value: Double); safecall;
    function Get_tpCISTaxDeclared: Double; safecall;
    function Get_tpCISManualTax: WordBool; safecall;
    procedure Set_tpCISManualTax(Value: WordBool); safecall;
    function Get_tpCISDate: WideString; safecall;
    procedure Set_tpCISDate(const Value: WideString); safecall;
    function Get_tpCISTotalGross: Double; safecall;
    function Get_tpCISSource: Integer; safecall;
    function Get_tpDeductionLines: ITransactionLines; safecall;
    function Get_tpRetentionLines: ITransactionLines; safecall;
    function Get_tpUserField1: WideString; safecall;
    procedure Set_tpUserField1(const Value: WideString); safecall;
    function Get_tpUserField2: WideString; safecall;
    procedure Set_tpUserField2(const Value: WideString); safecall;
    function Get_tpUserField3: WideString; safecall;
    procedure Set_tpUserField3(const Value: WideString); safecall;
    function Get_tpUserfield4: WideString; safecall;
    procedure Set_tpUserfield4(const Value: WideString); safecall;
    function Get_tpTermsStage: TAppsInterimType; safecall;
    function Get_tpApplicationBasis: TTermsInterimType; safecall;
    property tpFolioNum: Integer read Get_tpFolioNum;
    property tpJobCode: WideString read Get_tpJobCode;
    property tpAcCode: WideString read Get_tpAcCode write Set_tpAcCode;
    property tpRunNo: Integer read Get_tpRunNo;
    property tpEmployeeCode: WideString read Get_tpEmployeeCode write Set_tpEmployeeCode;
    property tpParentTerms: WideString read Get_tpParentTerms write Set_tpParentTerms;
    property tpTermsInterimFlag: TTermsInterimType read Get_tpTermsInterimFlag write Set_tpTermsInterimFlag;
    property tpAppsInterimFlag: TAppsInterimType read Get_tpAppsInterimFlag write Set_tpAppsInterimFlag;
    property tpPeriod: Integer read Get_tpPeriod write Set_tpPeriod;
    property tpYear: Integer read Get_tpYear write Set_tpYear;
    property tpCurrency: Integer read Get_tpCurrency write Set_tpCurrency;
    property tpDailyRate: Double read Get_tpDailyRate write Set_tpDailyRate;
    property tpCompanyRate: Double read Get_tpCompanyRate write Set_tpCompanyRate;
    property tpOurRef: WideString read Get_tpOurRef write Set_tpOurRef;
    property tpYourRef: WideString read Get_tpYourRef write Set_tpYourRef;
    property tpTotalCertYTD: Double read Get_tpTotalCertYTD;
    property tpApplied: Double read Get_tpApplied;
    property tpTotalBudget: Double read Get_tpTotalBudget;
    property tpTotalDeduct: Double read Get_tpTotalDeduct;
    property tpTotalRetain: Double read Get_tpTotalRetain;
    property tpTotalDeductYTD: Double read Get_tpTotalDeductYTD;
    property tpTotalRetainYTD: Double read Get_tpTotalRetainYTD;
    property tpTotalAppliedYTD: Double read Get_tpTotalAppliedYTD;
    property tpTotalContra: Double read Get_tpTotalContra;
    property tpCertifiedValue: Double read Get_tpCertifiedValue;
    property tpATR: WordBool read Get_tpATR write Set_tpATR;
    property tpDeferVAT: WordBool read Get_tpDeferVAT write Set_tpDeferVAT;
    property tpCertified: WordBool read Get_tpCertified write Set_tpCertified;
    property tpDate: WideString read Get_tpDate write Set_tpDate;
    property tpDeliveryAddress: IAddress read Get_tpDeliveryAddress;
    property tpTotalVAT: Double read Get_tpTotalVAT;
    property tpVATAnalysis[const Index: WideString]: Double read Get_tpVATAnalysis;
    property tpManualVAT: WordBool read Get_tpManualVAT write Set_tpManualVAT;
    property tpCISTaxDue: Double read Get_tpCISTaxDue write Set_tpCISTaxDue;
    property tpCISTaxDeclared: Double read Get_tpCISTaxDeclared;
    property tpCISManualTax: WordBool read Get_tpCISManualTax write Set_tpCISManualTax;
    property tpCISDate: WideString read Get_tpCISDate write Set_tpCISDate;
    property tpCISTotalGross: Double read Get_tpCISTotalGross;
    property tpCISSource: Integer read Get_tpCISSource;
    property tpDeductionLines: ITransactionLines read Get_tpDeductionLines;
    property tpRetentionLines: ITransactionLines read Get_tpRetentionLines;
    property tpUserField1: WideString read Get_tpUserField1 write Set_tpUserField1;
    property tpUserField2: WideString read Get_tpUserField2 write Set_tpUserField2;
    property tpUserField3: WideString read Get_tpUserField3 write Set_tpUserField3;
    property tpUserfield4: WideString read Get_tpUserfield4 write Set_tpUserfield4;
    property tpTermsStage: TAppsInterimType read Get_tpTermsStage;
    property tpApplicationBasis: TTermsInterimType read Get_tpApplicationBasis;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsApplicationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DC881D0-54B5-4F8C-B97F-BF0E1B2ECC95}
// *********************************************************************//
  ITransactionAsApplicationDisp = dispinterface
    ['{6DC881D0-54B5-4F8C-B97F-BF0E1B2ECC95}']
    property tpFolioNum: Integer readonly dispid 12;
    property tpJobCode: WideString readonly dispid 13;
    property tpAcCode: WideString dispid 14;
    property tpRunNo: Integer readonly dispid 15;
    property tpEmployeeCode: WideString dispid 16;
    property tpParentTerms: WideString dispid 17;
    property tpTermsInterimFlag: TTermsInterimType dispid 18;
    property tpAppsInterimFlag: TAppsInterimType dispid 19;
    property tpPeriod: Integer dispid 21;
    property tpYear: Integer dispid 22;
    property tpCurrency: Integer dispid 23;
    property tpDailyRate: Double dispid 24;
    property tpCompanyRate: Double dispid 25;
    property tpOurRef: WideString dispid 26;
    property tpYourRef: WideString dispid 27;
    property tpTotalCertYTD: Double readonly dispid 28;
    property tpApplied: Double readonly dispid 30;
    property tpTotalBudget: Double readonly dispid 31;
    property tpTotalDeduct: Double readonly dispid 32;
    property tpTotalRetain: Double readonly dispid 33;
    property tpTotalDeductYTD: Double readonly dispid 34;
    property tpTotalRetainYTD: Double readonly dispid 35;
    property tpTotalAppliedYTD: Double readonly dispid 36;
    property tpTotalContra: Double readonly dispid 37;
    property tpCertifiedValue: Double readonly dispid 38;
    property tpATR: WordBool dispid 39;
    property tpDeferVAT: WordBool dispid 40;
    property tpCertified: WordBool dispid 41;
    property tpDate: WideString dispid 42;
    property tpDeliveryAddress: IAddress readonly dispid 43;
    property tpTotalVAT: Double readonly dispid 45;
    property tpVATAnalysis[const Index: WideString]: Double readonly dispid 46;
    property tpManualVAT: WordBool dispid 47;
    property tpCISTaxDue: Double dispid 49;
    property tpCISTaxDeclared: Double readonly dispid 50;
    property tpCISManualTax: WordBool dispid 51;
    property tpCISDate: WideString dispid 52;
    property tpCISTotalGross: Double readonly dispid 53;
    property tpCISSource: Integer readonly dispid 54;
    property tpDeductionLines: ITransactionLines readonly dispid 1;
    property tpRetentionLines: ITransactionLines readonly dispid 2;
    property tpUserField1: WideString dispid 3;
    property tpUserField2: WideString dispid 4;
    property tpUserField3: WideString dispid 5;
    property tpUserfield4: WideString dispid 6;
    property tpTermsStage: TAppsInterimType readonly dispid 7;
    property tpApplicationBasis: TTermsInterimType readonly dispid 8;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsApplication
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E0455F4E-8429-47EF-A612-457D56D8B025}
// *********************************************************************//
  ITransactionLineAsApplication = interface(IDispatch)
    ['{E0455F4E-8429-47EF-A612-457D56D8B025}']
    function Get_tplFolioNum: Integer; safecall;
    function Get_tplAnalysisCode: WideString; safecall;
    procedure Set_tplAnalysisCode(const Value: WideString); safecall;
    function Get_tplDescr: WideString; safecall;
    procedure Set_tplDescr(const Value: WideString); safecall;
    function Get_tplAcCode: WideString; safecall;
    procedure Set_tplAcCode(const Value: WideString); safecall;
    function Get_tplQty: Double; safecall;
    procedure Set_tplQty(Value: Double); safecall;
    function Get_tplBudgetJCT: Double; safecall;
    procedure Set_tplBudgetJCT(Value: Double); safecall;
    function Get_tplApplied: Double; safecall;
    procedure Set_tplApplied(Value: Double); safecall;
    function Get_tplAppliedYTD: Double; safecall;
    procedure Set_tplAppliedYTD(Value: Double); safecall;
    function Get_tplCertifiedAmount: Double; safecall;
    procedure Set_tplCertifiedAmount(Value: Double); safecall;
    function Get_tplPaid: Double; safecall;
    procedure Set_tplPaid(Value: Double); safecall;
    function Get_tplVATCode: WideString; safecall;
    procedure Set_tplVATCode(const Value: WideString); safecall;
    function Get_tplCostCentre: WideString; safecall;
    procedure Set_tplCostCentre(const Value: WideString); safecall;
    function Get_tplDepartment: WideString; safecall;
    procedure Set_tplDepartment(const Value: WideString); safecall;
    function Get_tplRetention: Double; safecall;
    procedure Set_tplRetention(Value: Double); safecall;
    function Get_tplLineMode: TLineModeType; safecall;
    function Get_tplLineType: TTransactionLineType; safecall;
    procedure Set_tplLineType(Value: TTransactionLineType); safecall;
    function Get_tplRetentionExpiry: Smallint; safecall;
    procedure Set_tplRetentionExpiry(Value: Smallint); safecall;
    function Get_tplRetentionExpiryBasis: Smallint; safecall;
    procedure Set_tplRetentionExpiryBasis(Value: Smallint); safecall;
    function Get_tplRetentionType: TRetentionType; safecall;
    procedure Set_tplRetentionType(Value: TRetentionType); safecall;
    function Get_tplOverrideValue: WordBool; safecall;
    procedure Set_tplOverrideValue(Value: WordBool); safecall;
    function Get_tplCalculateBeforeRetention: WordBool; safecall;
    procedure Set_tplCalculateBeforeRetention(Value: WordBool); safecall;
    function Get_tplDeductionAppliesTo: TDeductionApplyToType; safecall;
    procedure Set_tplDeductionAppliesTo(Value: TDeductionApplyToType); safecall;
    function Get_tplDeductionType: TDeductionType; safecall;
    procedure Set_tplDeductionType(Value: TDeductionType); safecall;
    function Get_tplDeductValue: Double; safecall;
    procedure Set_tplDeductValue(Value: Double); safecall;
    function Get_tplTermsLink: Integer; safecall;
    function Get_tplTermsLineNo: Integer; safecall;
    procedure Set_tplTermsLineNo(Value: Integer); safecall;
    function Get_tplCertified: WordBool; safecall;
    function Get_tplCertifiedYTD: Double; safecall;
    procedure Set_tplCertifiedYTD(Value: Double); safecall;
    function Get_tplJobCode: WideString; safecall;
    procedure Set_tplJobCode(const Value: WideString); safecall;
    property tplFolioNum: Integer read Get_tplFolioNum;
    property tplAnalysisCode: WideString read Get_tplAnalysisCode write Set_tplAnalysisCode;
    property tplDescr: WideString read Get_tplDescr write Set_tplDescr;
    property tplAcCode: WideString read Get_tplAcCode write Set_tplAcCode;
    property tplQty: Double read Get_tplQty write Set_tplQty;
    property tplBudgetJCT: Double read Get_tplBudgetJCT write Set_tplBudgetJCT;
    property tplApplied: Double read Get_tplApplied write Set_tplApplied;
    property tplAppliedYTD: Double read Get_tplAppliedYTD write Set_tplAppliedYTD;
    property tplCertifiedAmount: Double read Get_tplCertifiedAmount write Set_tplCertifiedAmount;
    property tplPaid: Double read Get_tplPaid write Set_tplPaid;
    property tplVATCode: WideString read Get_tplVATCode write Set_tplVATCode;
    property tplCostCentre: WideString read Get_tplCostCentre write Set_tplCostCentre;
    property tplDepartment: WideString read Get_tplDepartment write Set_tplDepartment;
    property tplRetention: Double read Get_tplRetention write Set_tplRetention;
    property tplLineMode: TLineModeType read Get_tplLineMode;
    property tplLineType: TTransactionLineType read Get_tplLineType write Set_tplLineType;
    property tplRetentionExpiry: Smallint read Get_tplRetentionExpiry write Set_tplRetentionExpiry;
    property tplRetentionExpiryBasis: Smallint read Get_tplRetentionExpiryBasis write Set_tplRetentionExpiryBasis;
    property tplRetentionType: TRetentionType read Get_tplRetentionType write Set_tplRetentionType;
    property tplOverrideValue: WordBool read Get_tplOverrideValue write Set_tplOverrideValue;
    property tplCalculateBeforeRetention: WordBool read Get_tplCalculateBeforeRetention write Set_tplCalculateBeforeRetention;
    property tplDeductionAppliesTo: TDeductionApplyToType read Get_tplDeductionAppliesTo write Set_tplDeductionAppliesTo;
    property tplDeductionType: TDeductionType read Get_tplDeductionType write Set_tplDeductionType;
    property tplDeductValue: Double read Get_tplDeductValue write Set_tplDeductValue;
    property tplTermsLink: Integer read Get_tplTermsLink;
    property tplTermsLineNo: Integer read Get_tplTermsLineNo write Set_tplTermsLineNo;
    property tplCertified: WordBool read Get_tplCertified;
    property tplCertifiedYTD: Double read Get_tplCertifiedYTD write Set_tplCertifiedYTD;
    property tplJobCode: WideString read Get_tplJobCode write Set_tplJobCode;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsApplicationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E0455F4E-8429-47EF-A612-457D56D8B025}
// *********************************************************************//
  ITransactionLineAsApplicationDisp = dispinterface
    ['{E0455F4E-8429-47EF-A612-457D56D8B025}']
    property tplFolioNum: Integer readonly dispid 1;
    property tplAnalysisCode: WideString dispid 3;
    property tplDescr: WideString dispid 4;
    property tplAcCode: WideString dispid 5;
    property tplQty: Double dispid 6;
    property tplBudgetJCT: Double dispid 7;
    property tplApplied: Double dispid 8;
    property tplAppliedYTD: Double dispid 9;
    property tplCertifiedAmount: Double dispid 10;
    property tplPaid: Double dispid 12;
    property tplVATCode: WideString dispid 13;
    property tplCostCentre: WideString dispid 14;
    property tplDepartment: WideString dispid 15;
    property tplRetention: Double dispid 16;
    property tplLineMode: TLineModeType readonly dispid 17;
    property tplLineType: TTransactionLineType dispid 18;
    property tplRetentionExpiry: Smallint dispid 19;
    property tplRetentionExpiryBasis: Smallint dispid 20;
    property tplRetentionType: TRetentionType dispid 21;
    property tplOverrideValue: WordBool dispid 22;
    property tplCalculateBeforeRetention: WordBool dispid 23;
    property tplDeductionAppliesTo: TDeductionApplyToType dispid 24;
    property tplDeductionType: TDeductionType dispid 25;
    property tplDeductValue: Double dispid 26;
    property tplTermsLink: Integer readonly dispid 29;
    property tplTermsLineNo: Integer dispid 27;
    property tplCertified: WordBool readonly dispid 28;
    property tplCertifiedYTD: Double dispid 11;
    property tplJobCode: WideString dispid 2;
  end;

// *********************************************************************//
// Interface: IJobAnalysis3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22B54059-BFC0-458F-86C4-798EC93B43AB}
// *********************************************************************//
  IJobAnalysis3 = interface(IJobAnalysis2)
    ['{22B54059-BFC0-458F-86C4-798EC93B43AB}']
    function Get_anDeductionBase: TJobDeductionBaseType; safecall;
    procedure Set_anDeductionBase(Value: TJobDeductionBaseType); safecall;
    function Get_anCalcBeforeRetention: WordBool; safecall;
    procedure Set_anCalcBeforeRetention(Value: WordBool); safecall;
    function Get_anDeduction: Double; safecall;
    procedure Set_anDeduction(Value: Double); safecall;
    function Get_anApplyDeduction: TDeductionApplyToType; safecall;
    procedure Set_anApplyDeduction(Value: TDeductionApplyToType); safecall;
    function Get_anRetentionType: TAppsInterimType; safecall;
    procedure Set_anRetentionType(Value: TAppsInterimType); safecall;
    function Get_anRetentionValue: Double; safecall;
    procedure Set_anRetentionValue(Value: Double); safecall;
    function Get_anRetentionExpiryType: TRetentionExpiryType; safecall;
    procedure Set_anRetentionExpiryType(Value: TRetentionExpiryType); safecall;
    function Get_anRetentionExpiryInterval: Integer; safecall;
    procedure Set_anRetentionExpiryInterval(Value: Integer); safecall;
    function Get_anPreserveRetention: WordBool; safecall;
    procedure Set_anPreserveRetention(Value: WordBool); safecall;
    function Get_anCalcDeductionAs: TDeductionType; safecall;
    procedure Set_anCalcDeductionAs(Value: TDeductionType); safecall;
    function Get_anPayrollCode: WideString; safecall;
    procedure Set_anPayrollCode(const Value: WideString); safecall;
    function Get_anRevenueType: TRevenueType; safecall;
    procedure Set_anRevenueType(Value: TRevenueType); safecall;
    property anDeductionBase: TJobDeductionBaseType read Get_anDeductionBase write Set_anDeductionBase;
    property anCalcBeforeRetention: WordBool read Get_anCalcBeforeRetention write Set_anCalcBeforeRetention;
    property anDeduction: Double read Get_anDeduction write Set_anDeduction;
    property anApplyDeduction: TDeductionApplyToType read Get_anApplyDeduction write Set_anApplyDeduction;
    property anRetentionType: TAppsInterimType read Get_anRetentionType write Set_anRetentionType;
    property anRetentionValue: Double read Get_anRetentionValue write Set_anRetentionValue;
    property anRetentionExpiryType: TRetentionExpiryType read Get_anRetentionExpiryType write Set_anRetentionExpiryType;
    property anRetentionExpiryInterval: Integer read Get_anRetentionExpiryInterval write Set_anRetentionExpiryInterval;
    property anPreserveRetention: WordBool read Get_anPreserveRetention write Set_anPreserveRetention;
    property anCalcDeductionAs: TDeductionType read Get_anCalcDeductionAs write Set_anCalcDeductionAs;
    property anPayrollCode: WideString read Get_anPayrollCode write Set_anPayrollCode;
    property anRevenueType: TRevenueType read Get_anRevenueType write Set_anRevenueType;
  end;

// *********************************************************************//
// DispIntf:  IJobAnalysis3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22B54059-BFC0-458F-86C4-798EC93B43AB}
// *********************************************************************//
  IJobAnalysis3Disp = dispinterface
    ['{22B54059-BFC0-458F-86C4-798EC93B43AB}']
    property anDeductionBase: TJobDeductionBaseType dispid 19;
    property anCalcBeforeRetention: WordBool dispid 20;
    property anDeduction: Double dispid 21;
    property anApplyDeduction: TDeductionApplyToType dispid 22;
    property anRetentionType: TAppsInterimType dispid 23;
    property anRetentionValue: Double dispid 24;
    property anRetentionExpiryType: TRetentionExpiryType dispid 25;
    property anRetentionExpiryInterval: Integer dispid 26;
    property anPreserveRetention: WordBool dispid 27;
    property anCalcDeductionAs: TDeductionType dispid 28;
    property anPayrollCode: WideString dispid 29;
    property anRevenueType: TRevenueType dispid 18;
    function Update: IJobAnalysis2; dispid 101;
    function Add: IJobAnalysis2; dispid 102;
    function Save: Integer; dispid 103;
    procedure Cancel; dispid 104;
    property anCISTaxRate: TCISTaxType dispid 15;
    property anUplift: Double dispid 16;
    property anUpliftGL: Integer dispid 17;
    property anCode: WideString dispid 1;
    property anDescription: WideString dispid 2;
    property anType: TAnalysisType dispid 3;
    property anCategory: TAnalysisCategory dispid 4;
    property anWIPGL: Integer dispid 5;
    property anPandLGL: Integer dispid 6;
    property anLineType: TTransactionLineType dispid 7;
    property Index: TJobAnalysisIndex dispid 8;
    function Clone: IJobAnalysis; dispid 9;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 10;
    function BuildDescriptionIndex(const Description: WideString): WideString; dispid 11;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property anTypeString: WideString readonly dispid 12;
    property anCategoryString: WideString readonly dispid 13;
    property anLineTypeString: WideString readonly dispid 14;
  end;

// *********************************************************************//
// Interface: IJobApplications
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13980D90-0A9C-412F-9467-97FACD42AF24}
// *********************************************************************//
  IJobApplications = interface(IDispatch)
    ['{13980D90-0A9C-412F-9467-97FACD42AF24}']
    function Get_jbaPurchaseTerms: ITransaction3; safecall;
    function Get_jbaMasterSalesTerms: ITransaction3; safecall;
    function Get_jbaContractTerms: ITermsList; safecall;
    function Get_jbaSalesTerms: ITermsList; safecall;
    function Get_jbaPurchaseApplication: IApplicationsList; safecall;
    function Get_jbaSalesApplication: IApplicationsList; safecall;
    function AddPurchaseTerms(UseBudgets: WordBool): ITransaction3; safecall;
    function AddMasterSalesTerms(UseBudgets: WordBool): ITransaction3; safecall;
    property jbaPurchaseTerms: ITransaction3 read Get_jbaPurchaseTerms;
    property jbaMasterSalesTerms: ITransaction3 read Get_jbaMasterSalesTerms;
    property jbaContractTerms: ITermsList read Get_jbaContractTerms;
    property jbaSalesTerms: ITermsList read Get_jbaSalesTerms;
    property jbaPurchaseApplication: IApplicationsList read Get_jbaPurchaseApplication;
    property jbaSalesApplication: IApplicationsList read Get_jbaSalesApplication;
  end;

// *********************************************************************//
// DispIntf:  IJobApplicationsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13980D90-0A9C-412F-9467-97FACD42AF24}
// *********************************************************************//
  IJobApplicationsDisp = dispinterface
    ['{13980D90-0A9C-412F-9467-97FACD42AF24}']
    property jbaPurchaseTerms: ITransaction3 readonly dispid 1;
    property jbaMasterSalesTerms: ITransaction3 readonly dispid 2;
    property jbaContractTerms: ITermsList readonly dispid 3;
    property jbaSalesTerms: ITermsList readonly dispid 4;
    property jbaPurchaseApplication: IApplicationsList readonly dispid 5;
    property jbaSalesApplication: IApplicationsList readonly dispid 6;
    function AddPurchaseTerms(UseBudgets: WordBool): ITransaction3; dispid 7;
    function AddMasterSalesTerms(UseBudgets: WordBool): ITransaction3; dispid 8;
  end;

// *********************************************************************//
// Interface: IApplicationsList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF90B6C1-8C18-4FA0-974B-F918B2989261}
// *********************************************************************//
  IApplicationsList = interface(IDispatch)
    ['{BF90B6C1-8C18-4FA0-974B-F918B2989261}']
    function Get_Item: ITransaction3; safecall;
    function Add: ITransaction3; safecall;
    property Item: ITransaction3 read Get_Item;
  end;

// *********************************************************************//
// DispIntf:  IApplicationsListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF90B6C1-8C18-4FA0-974B-F918B2989261}
// *********************************************************************//
  IApplicationsListDisp = dispinterface
    ['{BF90B6C1-8C18-4FA0-974B-F918B2989261}']
    property Item: ITransaction3 readonly dispid 1;
    function Add: ITransaction3; dispid 2;
  end;

// *********************************************************************//
// Interface: ITermsList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8FAD525E-F2BF-4AD0-9EC0-F58D63C1EC38}
// *********************************************************************//
  ITermsList = interface(IDispatch)
    ['{8FAD525E-F2BF-4AD0-9EC0-F58D63C1EC38}']
    function Get_Item: ITransaction3; safecall;
    function Add: ITransaction3; safecall;
    property Item: ITransaction3 read Get_Item;
  end;

// *********************************************************************//
// DispIntf:  ITermsListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8FAD525E-F2BF-4AD0-9EC0-F58D63C1EC38}
// *********************************************************************//
  ITermsListDisp = dispinterface
    ['{8FAD525E-F2BF-4AD0-9EC0-F58D63C1EC38}']
    property Item: ITransaction3 readonly dispid 1;
    function Add: ITransaction3; dispid 2;
  end;

// *********************************************************************//
// Interface: IJob3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A7CA047-99B6-4550-91C3-36217803A1EC}
// *********************************************************************//
  IJob3 = interface(IJob2)
    ['{0A7CA047-99B6-4550-91C3-36217803A1EC}']
    function Get_jrApplications: IJobApplications; safecall;
    function Get_jrTimeRates: ITimeRates; safecall;
    property jrApplications: IJobApplications read Get_jrApplications;
    property jrTimeRates: ITimeRates read Get_jrTimeRates;
  end;

// *********************************************************************//
// DispIntf:  IJob3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A7CA047-99B6-4550-91C3-36217803A1EC}
// *********************************************************************//
  IJob3Disp = dispinterface
    ['{0A7CA047-99B6-4550-91C3-36217803A1EC}']
    property jrApplications: IJobApplications readonly dispid 47;
    property jrTimeRates: ITimeRates readonly dispid 48;
    property jrLinks: ILinks readonly dispid 38;
    property jrJobActual: IJobActual readonly dispid 39;
    property jrPurchaseRetention: IJobRetention readonly dispid 40;
    property jrSalesRetention: IJobRetention readonly dispid 41;
    property jrSummaryBudget: ISummaryJobBudget readonly dispid 42;
    property jrAnalysisBudget: IAnalysisJobBudget readonly dispid 43;
    property jrTimeAndStockBudget: ITimeAndStockJobBudget readonly dispid 44;
    function Invoice: IJobInvoice; dispid 45;
    function Print(PrintAs: TJobPrintMode): IPrintJob; dispid 46;
    property jrCode: WideString dispid 1;
    property jrDesc: WideString dispid 2;
    property jrFolio: Integer readonly dispid 3;
    property jrAcCode: WideString dispid 4;
    property jrParent: WideString dispid 5;
    property jrAltCode: WideString dispid 6;
    property jrCompleted: WordBool dispid 7;
    property jrContact: WideString dispid 8;
    property jrManager: WideString dispid 9;
    property jrChargeType: TJobChargeType dispid 10;
    property jrQuotePrice: Double dispid 11;
    property jrQuotePriceCurr: Smallint dispid 12;
    property jrStartDate: WideString dispid 13;
    property jrEndDate: WideString dispid 14;
    property jrRevisedEndDate: WideString dispid 15;
    property jrSORNumber: WideString dispid 16;
    property jrVATCode: WideString dispid 17;
    property jrJobType: WideString dispid 20;
    property jrType: TJobTypeType dispid 21;
    property jrStatus: TJobStatusType dispid 22;
    property jrUserField1: WideString dispid 23;
    property jrUserField2: WideString dispid 24;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TJobIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const JobCode: WideString): WideString; dispid 18;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 19;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; dispid 25;
    function Add: IJob; dispid 26;
    function Update: IJob; dispid 27;
    function Clone: IJob; dispid 28;
    function Save: Integer; dispid 29;
    procedure Cancel; dispid 30;
    function BuildDescIndex(const Description: WideString): WideString; dispid 31;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; dispid 32;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; dispid 33;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 34;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 35;
    property jrNotes: INotes readonly dispid 36;
    property jrJobTypeI: IJobType readonly dispid 37;
  end;

// *********************************************************************//
// Interface: IEmployee4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F12CC198-97C9-458A-8D09-3B236BFAE9CB}
// *********************************************************************//
  IEmployee4 = interface(IEmployee3)
    ['{F12CC198-97C9-458A-8D09-3B236BFAE9CB}']
    function Get_emTimeRateRules: TTimeRateRulesType; safecall;
    procedure Set_emTimeRateRules(Value: TTimeRateRulesType); safecall;
    property emTimeRateRules: TTimeRateRulesType read Get_emTimeRateRules write Set_emTimeRateRules;
  end;

// *********************************************************************//
// DispIntf:  IEmployee4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F12CC198-97C9-458A-8D09-3B236BFAE9CB}
// *********************************************************************//
  IEmployee4Disp = dispinterface
    ['{F12CC198-97C9-458A-8D09-3B236BFAE9CB}']
    property emTimeRateRules: TTimeRateRulesType dispid 35;
    property emLabourViaPL: WordBool dispid 34;
    function Update: IEmployee2; dispid 23;
    function Add: IEmployee2; dispid 24;
    function Save: Integer; dispid 25;
    procedure Cancel; dispid 26;
    property emSelfBilling: WordBool dispid 27;
    property emGroupCertificate: WordBool dispid 28;
    property emCertificateType: TEmployeeCertificateType dispid 29;
    property emUserField3: WideString dispid 30;
    property emUserField4: WideString dispid 31;
    property emNISerialNo: WideString dispid 32;
    property emLinks: ILinks readonly dispid 33;
    property emCode: WideString dispid 1;
    property emSupplier: WideString dispid 2;
    property emName: WideString dispid 3;
    property emAddress: IAddress readonly dispid 4;
    property emPhone: WideString dispid 5;
    property emFax: WideString dispid 6;
    property emMobile: WideString dispid 7;
    property emType: TEmployeeType dispid 8;
    property emPayrollNumber: WideString dispid 9;
    property emCertificateNumber: WideString dispid 10;
    property emCertificateExpiry: WideString dispid 11;
    property emUserField1: WideString dispid 12;
    property emUserField2: WideString dispid 13;
    property emTimeRates: ITimeRates readonly dispid 14;
    property emCostCentre: WideString dispid 15;
    property emDepartment: WideString dispid 16;
    property emOwnTimeRatesOnly: WordBool dispid 17;
    function Clone: IEmployee; dispid 18;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 19;
    function BuildSupplierIndex(const Supplier: WideString): WideString; dispid 20;
    property Index: TEmployeeIndex dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property emNotes: INotes readonly dispid 22;
  end;

// *********************************************************************//
// Interface: ISystemSetupCIS2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BC937B4-2A77-45D8-8769-784D81CB0D11}
// *********************************************************************//
  ISystemSetupCIS2 = interface(ISystemSetupCIS)
    ['{8BC937B4-2A77-45D8-8769-784D81CB0D11}']
    function Get_cisContractorCertType: TCISCertificateType; safecall;
    procedure Set_cisContractorCertType(Value: TCISCertificateType); safecall;
    function Get_cisContractorCertRef: WideString; safecall;
    procedure Set_cisContractorCertRef(const Value: WideString); safecall;
    function Get_cisContractorCertExpiry: WideString; safecall;
    procedure Set_cisContractorCertExpiry(const Value: WideString); safecall;
    property cisContractorCertType: TCISCertificateType read Get_cisContractorCertType write Set_cisContractorCertType;
    property cisContractorCertRef: WideString read Get_cisContractorCertRef write Set_cisContractorCertRef;
    property cisContractorCertExpiry: WideString read Get_cisContractorCertExpiry write Set_cisContractorCertExpiry;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupCIS2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BC937B4-2A77-45D8-8769-784D81CB0D11}
// *********************************************************************//
  ISystemSetupCIS2Disp = dispinterface
    ['{8BC937B4-2A77-45D8-8769-784D81CB0D11}']
    property cisContractorCertType: TCISCertificateType dispid 9;
    property cisContractorCertRef: WideString dispid 10;
    property cisContractorCertExpiry: WideString dispid 11;
    property cisInterval: Integer readonly dispid 1;
    property cisAutoSetPeriod: WordBool readonly dispid 2;
    property cisReturnDate: WideString readonly dispid 3;
    property cisTaxRef: WideString readonly dispid 4;
    property cisDefaultVatCode: WideString readonly dispid 5;
    property cisFolioNumber: Integer readonly dispid 6;
    property cisRate[TaxType: TCISTaxType]: ICISRate readonly dispid 7;
    property cisVoucherCounter[VoucherType: TCISVoucherType]: ICISVoucherCounter readonly dispid 8;
  end;

// *********************************************************************//
// Interface: IAnalysisJobBudget2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16700687-4C4D-42C4-8FD6-A3DEDA3A98E2}
// *********************************************************************//
  IAnalysisJobBudget2 = interface(IAnalysisJobBudget)
    ['{16700687-4C4D-42C4-8FD6-A3DEDA3A98E2}']
    function Get_jbApplyPercent: Double; safecall;
    procedure Set_jbApplyPercent(Value: Double); safecall;
    function Get_jbApplicationBasis: TBudgetAppBasisType; safecall;
    procedure Set_jbApplicationBasis(Value: TBudgetAppBasisType); safecall;
    property jbApplyPercent: Double read Get_jbApplyPercent write Set_jbApplyPercent;
    property jbApplicationBasis: TBudgetAppBasisType read Get_jbApplicationBasis write Set_jbApplicationBasis;
  end;

// *********************************************************************//
// DispIntf:  IAnalysisJobBudget2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16700687-4C4D-42C4-8FD6-A3DEDA3A98E2}
// *********************************************************************//
  IAnalysisJobBudget2Disp = dispinterface
    ['{16700687-4C4D-42C4-8FD6-A3DEDA3A98E2}']
    property jbApplyPercent: Double dispid 25;
    property jbApplicationBasis: TBudgetAppBasisType dispid 26;
    property jbAnalysisCode: WideString dispid 14;
    property jbAnalysisCodeI: IJobAnalysis readonly dispid 15;
    property jbFolio: Integer readonly dispid 18;
    property jbRecharge: WordBool dispid 19;
    function Add: IAnalysisJobBudget; dispid 1;
    function Delete: Integer; dispid 20;
    function BuildAnalysisCodeIndex(const AnalysisCode: WideString): WideString; dispid 11;
    function Update: IAnalysisJobBudget; dispid 2;
    function Clone: IAnalysisJobBudget; dispid 3;
    property jbCategory: TJobBudgetCategoryType dispid 21;
    property Index: TAnalysisJobBudgetIndex dispid 17;
    function BuildAnalysisCategoryIndex(Category: TJobBudgetCategoryType): WideString; dispid 22;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: IJobRetention2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEF13A40-AF40-4DA8-8507-1722F635D375}
// *********************************************************************//
  IJobRetention2 = interface(IJobRetention)
    ['{EEF13A40-AF40-4DA8-8507-1722F635D375}']
    function Get_jrtApplicationMode: TRetentionAppType; safecall;
    procedure Set_jrtApplicationMode(Value: TRetentionAppType); safecall;
    property jrtApplicationMode: TRetentionAppType read Get_jrtApplicationMode write Set_jrtApplicationMode;
  end;

// *********************************************************************//
// DispIntf:  IJobRetention2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEF13A40-AF40-4DA8-8507-1722F635D375}
// *********************************************************************//
  IJobRetention2Disp = dispinterface
    ['{EEF13A40-AF40-4DA8-8507-1722F635D375}']
    property jrtApplicationMode: TRetentionAppType dispid 34;
    property jrtAnalysisCode: WideString dispid 1;
    property jrtOriginalCurrency: Integer readonly dispid 2;
    property jrtYear: Integer dispid 3;
    property jrtPeriod: Integer dispid 4;
    property jrtPosted: WordBool readonly dispid 5;
    property jrtPercent: Double dispid 6;
    property jrtCurrency: Integer dispid 7;
    property jrtValue: Double dispid 8;
    property jrtJobCode: WideString dispid 9;
    property jrtCreditDoc: WideString readonly dispid 10;
    property jrtExpiryDate: WideString dispid 11;
    property jrtInvoiced: WordBool dispid 12;
    property jrtAcCode: WideString dispid 13;
    property jrtEntryDate: WideString dispid 14;
    property jrtCostCentre: WideString dispid 15;
    property jrtDepartment: WideString dispid 16;
    property jrtDefVatCode: WideString dispid 18;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IJobRetention; dispid 19;
    function Save: Integer; dispid 20;
    function Delete: Integer; dispid 21;
    function UpdateExpiryDate(const NewDate: WideString): Integer; dispid 22;
    function Clone: IJobRetention; dispid 17;
    property Index: TJobRetentionIndexType dispid 23;
    function BuildInvoicedIndex(Invoiced: WordBool; const ADate: WideString): WideString; dispid 24;
    function BuildDateIndex(const ADate: WideString): WideString; dispid 25;
    property jrtTransaction: WideString dispid 26;
    procedure ImportDefaults; dispid 27;
    property jrtTransactionI: ITransaction readonly dispid 28;
    property jrtAcCodeI: IAccount readonly dispid 29;
    property jrtCreditDocI: ITransaction readonly dispid 30;
    property jrtCISTax: Double readonly dispid 31;
    property jrtCISGross: Double readonly dispid 32;
    property jrtCISEmployee: WideString readonly dispid 33;
  end;

// *********************************************************************//
// Interface: ITransactionLineSerialBatch3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C07A04DC-FA75-4B38-8196-A6111EF1671E}
// *********************************************************************//
  ITransactionLineSerialBatch3 = interface(ITransactionLineSerialBatch2)
    ['{C07A04DC-FA75-4B38-8196-A6111EF1671E}']
    function UseBatch(const Batch: ISerialBatchDetails; Qty: Double): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineSerialBatch3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C07A04DC-FA75-4B38-8196-A6111EF1671E}
// *********************************************************************//
  ITransactionLineSerialBatch3Disp = dispinterface
    ['{C07A04DC-FA75-4B38-8196-A6111EF1671E}']
    function UseBatch(const Batch: ISerialBatchDetails; Qty: Double): Integer; dispid 7;
    function Print(PrintAs: TTransLineSerialPrintMode): IPrintJob; dispid 83;
    property tlCount: Integer readonly dispid 1;
    property tlUsedSerialBatch[Index: Integer]: ISerialBatchDetails readonly dispid 2;
    property tlUsesSerialBatchNo: WordBool readonly dispid 3;
    function Add: ISerialBatch; dispid 4;
    procedure Refresh; dispid 6;
    function UseSerialBatch(const SerialBatch: ISerialBatchDetails): Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: ISystemSetupReleaseCodes2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22AB4B9C-E5DD-4CE0-AFA2-4B43F8044CC1}
// *********************************************************************//
  ISystemSetupReleaseCodes2 = interface(ISystemSetupReleaseCodes)
    ['{22AB4B9C-E5DD-4CE0-AFA2-4B43F8044CC1}']
    function Get_rcTradeCounter: TReleaseCodeStatus; safecall;
    function Get_rcWOPStandard: TReleaseCodeStatus; safecall;
    function Get_rcWOPProfessional: TReleaseCodeStatus; safecall;
    function Get_rcSentimail: TReleaseCodeStatus; safecall;
    function Get_rcEnhancedSecurity: TReleaseCodeStatus; safecall;
    function Get_rcCISRCT: TReleaseCodeStatus; safecall;
    function Get_rcAppsAndVals: TReleaseCodeStatus; safecall;
    function Get_rcFullStockControl: TReleaseCodeStatus; safecall;
    function Get_rcVisualReportWriter: TReleaseCodeStatus; safecall;
    property rcTradeCounter: TReleaseCodeStatus read Get_rcTradeCounter;
    property rcWOPStandard: TReleaseCodeStatus read Get_rcWOPStandard;
    property rcWOPProfessional: TReleaseCodeStatus read Get_rcWOPProfessional;
    property rcSentimail: TReleaseCodeStatus read Get_rcSentimail;
    property rcEnhancedSecurity: TReleaseCodeStatus read Get_rcEnhancedSecurity;
    property rcCISRCT: TReleaseCodeStatus read Get_rcCISRCT;
    property rcAppsAndVals: TReleaseCodeStatus read Get_rcAppsAndVals;
    property rcFullStockControl: TReleaseCodeStatus read Get_rcFullStockControl;
    property rcVisualReportWriter: TReleaseCodeStatus read Get_rcVisualReportWriter;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupReleaseCodes2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22AB4B9C-E5DD-4CE0-AFA2-4B43F8044CC1}
// *********************************************************************//
  ISystemSetupReleaseCodes2Disp = dispinterface
    ['{22AB4B9C-E5DD-4CE0-AFA2-4B43F8044CC1}']
    property rcTradeCounter: TReleaseCodeStatus readonly dispid 11;
    property rcWOPStandard: TReleaseCodeStatus readonly dispid 12;
    property rcWOPProfessional: TReleaseCodeStatus readonly dispid 13;
    property rcSentimail: TReleaseCodeStatus readonly dispid 14;
    property rcEnhancedSecurity: TReleaseCodeStatus readonly dispid 15;
    property rcCISRCT: TReleaseCodeStatus readonly dispid 20;
    property rcAppsAndVals: TReleaseCodeStatus readonly dispid 21;
    property rcFullStockControl: TReleaseCodeStatus readonly dispid 22;
    property rcVisualReportWriter: TReleaseCodeStatus readonly dispid 23;
    property rcAccountStockAnalysis: TReleaseCodeStatus readonly dispid 1;
    property rcCommitment: TReleaseCodeStatus readonly dispid 2;
    property rcEBusiness: TReleaseCodeStatus readonly dispid 3;
    property rcJobCosting: TReleaseCodeStatus readonly dispid 4;
    property rcMultiCurrency: TReleaseCodeStatus readonly dispid 5;
    property rcOLESave: TReleaseCodeStatus readonly dispid 6;
    property rcPaperless: TReleaseCodeStatus readonly dispid 7;
    property rcReportWriter: TReleaseCodeStatus readonly dispid 8;
    property rcTelesales: TReleaseCodeStatus readonly dispid 9;
    property rcToolkitDLL: TReleaseCodeStatus readonly dispid 10;
  end;

// *********************************************************************//
// Interface: IJob4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74A904E2-801D-4E09-9758-7C531BEE2349}
// *********************************************************************//
  IJob4 = interface(IJob3)
    ['{74A904E2-801D-4E09-9758-7C531BEE2349}']
    function Get_jrUserField3: WideString; safecall;
    procedure Set_jrUserField3(const Value: WideString); safecall;
    function Get_jrUserField4: WideString; safecall;
    procedure Set_jrUserField4(const Value: WideString); safecall;
    property jrUserField3: WideString read Get_jrUserField3 write Set_jrUserField3;
    property jrUserField4: WideString read Get_jrUserField4 write Set_jrUserField4;
  end;

// *********************************************************************//
// DispIntf:  IJob4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74A904E2-801D-4E09-9758-7C531BEE2349}
// *********************************************************************//
  IJob4Disp = dispinterface
    ['{74A904E2-801D-4E09-9758-7C531BEE2349}']
    property jrUserField3: WideString dispid 49;
    property jrUserField4: WideString dispid 50;
    property jrApplications: IJobApplications readonly dispid 47;
    property jrTimeRates: ITimeRates readonly dispid 48;
    property jrLinks: ILinks readonly dispid 38;
    property jrJobActual: IJobActual readonly dispid 39;
    property jrPurchaseRetention: IJobRetention readonly dispid 40;
    property jrSalesRetention: IJobRetention readonly dispid 41;
    property jrSummaryBudget: ISummaryJobBudget readonly dispid 42;
    property jrAnalysisBudget: IAnalysisJobBudget readonly dispid 43;
    property jrTimeAndStockBudget: ITimeAndStockJobBudget readonly dispid 44;
    function Invoice: IJobInvoice; dispid 45;
    function Print(PrintAs: TJobPrintMode): IPrintJob; dispid 46;
    property jrCode: WideString dispid 1;
    property jrDesc: WideString dispid 2;
    property jrFolio: Integer readonly dispid 3;
    property jrAcCode: WideString dispid 4;
    property jrParent: WideString dispid 5;
    property jrAltCode: WideString dispid 6;
    property jrCompleted: WordBool dispid 7;
    property jrContact: WideString dispid 8;
    property jrManager: WideString dispid 9;
    property jrChargeType: TJobChargeType dispid 10;
    property jrQuotePrice: Double dispid 11;
    property jrQuotePriceCurr: Smallint dispid 12;
    property jrStartDate: WideString dispid 13;
    property jrEndDate: WideString dispid 14;
    property jrRevisedEndDate: WideString dispid 15;
    property jrSORNumber: WideString dispid 16;
    property jrVATCode: WideString dispid 17;
    property jrJobType: WideString dispid 20;
    property jrType: TJobTypeType dispid 21;
    property jrStatus: TJobStatusType dispid 22;
    property jrUserField1: WideString dispid 23;
    property jrUserField2: WideString dispid 24;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TJobIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const JobCode: WideString): WideString; dispid 18;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 19;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; dispid 25;
    function Add: IJob; dispid 26;
    function Update: IJob; dispid 27;
    function Clone: IJob; dispid 28;
    function Save: Integer; dispid 29;
    procedure Cancel; dispid 30;
    function BuildDescIndex(const Description: WideString): WideString; dispid 31;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; dispid 32;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; dispid 33;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 34;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 35;
    property jrNotes: INotes readonly dispid 36;
    property jrJobTypeI: IJobType readonly dispid 37;
  end;

// *********************************************************************//
// Interface: IAltStockCode2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A1BC7F6-3E78-4856-99D3-2A7297FB3712}
// *********************************************************************//
  IAltStockCode2 = interface(IAltStockCode)
    ['{7A1BC7F6-3E78-4856-99D3-2A7297FB3712}']
    function Get_ascUseReorderQty: WordBool; safecall;
    procedure Set_ascUseReorderQty(Value: WordBool); safecall;
    function Get_ascReorderQty: Double; safecall;
    procedure Set_ascReorderQty(Value: Double); safecall;
    function Get_ascUseReplacementQty: WordBool; safecall;
    procedure Set_ascUseReplacementQty(Value: WordBool); safecall;
    function Get_ascReplacementQty: Double; safecall;
    procedure Set_ascReplacementQty(Value: Double); safecall;
    function Get_ascDisplayOrder: Integer; safecall;
    procedure Set_ascDisplayOrder(Value: Integer); safecall;
    property ascUseReorderQty: WordBool read Get_ascUseReorderQty write Set_ascUseReorderQty;
    property ascReorderQty: Double read Get_ascReorderQty write Set_ascReorderQty;
    property ascUseReplacementQty: WordBool read Get_ascUseReplacementQty write Set_ascUseReplacementQty;
    property ascReplacementQty: Double read Get_ascReplacementQty write Set_ascReplacementQty;
    property ascDisplayOrder: Integer read Get_ascDisplayOrder write Set_ascDisplayOrder;
  end;

// *********************************************************************//
// DispIntf:  IAltStockCode2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A1BC7F6-3E78-4856-99D3-2A7297FB3712}
// *********************************************************************//
  IAltStockCode2Disp = dispinterface
    ['{7A1BC7F6-3E78-4856-99D3-2A7297FB3712}']
    property ascUseReorderQty: WordBool dispid 17;
    property ascReorderQty: Double dispid 18;
    property ascUseReplacementQty: WordBool dispid 19;
    property ascReplacementQty: Double dispid 20;
    property ascDisplayOrder: Integer dispid 21;
    property ascAcCode: WideString dispid 2;
    property ascAltCode: WideString dispid 3;
    property ascAltDesc: WideString dispid 4;
    property ascReorderPrice: Double dispid 5;
    property ascReorderCurrency: Integer dispid 6;
    property ascUseReorderPrice: WordBool dispid 7;
    property ascNotes: INotes readonly dispid 8;
    property ascLastDateUsed: WideString readonly dispid 9;
    property ascLastTimeUsed: WideString readonly dispid 10;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 11;
    function Delete: Integer; dispid 12;
    function Add: IAltStockCode; dispid 1;
    function Update: IAltStockCode; dispid 13;
    function Clone: IAltStockCode; dispid 14;
    function Save: Integer; dispid 15;
    procedure Cancel; dispid 16;
  end;

// *********************************************************************//
// Interface: IStock3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B01978FF-0E94-4593-B1C4-09164CBBDE05}
// *********************************************************************//
  IStock3 = interface(IStock2)
    ['{B01978FF-0E94-4593-B1C4-09164CBBDE05}']
    function Get_stEquivalent: IAltStockCode2; safecall;
    function Get_stSupersededBy: IAltStockCode2; safecall;
    function Get_stOpportunity: IAltStockCode2; safecall;
    property stEquivalent: IAltStockCode2 read Get_stEquivalent;
    property stSupersededBy: IAltStockCode2 read Get_stSupersededBy;
    property stOpportunity: IAltStockCode2 read Get_stOpportunity;
  end;

// *********************************************************************//
// DispIntf:  IStock3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B01978FF-0E94-4593-B1C4-09164CBBDE05}
// *********************************************************************//
  IStock3Disp = dispinterface
    ['{B01978FF-0E94-4593-B1C4-09164CBBDE05}']
    property stEquivalent: IAltStockCode2 readonly dispid 105;
    property stSupersededBy: IAltStockCode2 readonly dispid 106;
    property stOpportunity: IAltStockCode2 readonly dispid 107;
    property stBOMProductionTime: Integer readonly dispid 81;
    property stQtyAllocWOR: Double readonly dispid 82;
    property stQtyFreeze: Double readonly dispid 83;
    property stQtyIssuedWOR: Double readonly dispid 84;
    property stQtyPickedWOR: Double readonly dispid 85;
    property stQtyStockTake: Double dispid 86;
    property stWOPAssemblyDays: Integer dispid 87;
    property stWOPAssemblyHours: Integer dispid 88;
    property stWOPAssemblyMins: Integer dispid 89;
    property stWOPAutoCalcTime: WordBool dispid 90;
    property stWOPIssuedWIPGL: Integer dispid 91;
    property stWOPMinEconBuild: Double dispid 92;
    property stWOPRoLeadTime: Integer dispid 93;
    property stUsesBins: WordBool dispid 94;
    property stStockTakeQtyChanged: WordBool readonly dispid 95;
    property stShowKitOnSales: WordBool dispid 96;
    property stLinks: ILinks readonly dispid 97;
    property stAltStockCode: IAltStockCode readonly dispid 98;
    property stMultiBin: IMultiBin readonly dispid 99;
    property stSalesAnalysis: IStockSalesAnalysis readonly dispid 100;
    function Print(PrintAs: TStockPrintMode): IPrintJob; dispid 101;
    function Discontinue(RetainComponents: WordBool): Integer; dispid 102;
    property stCode: WideString dispid 1;
    property stDesc[Index: Integer]: WideString dispid 2;
    property stAltCode: WideString dispid 3;
    property stType: TStockType dispid 4;
    property stSalesGL: Integer dispid 5;
    property stCOSGL: Integer dispid 6;
    property stPandLGL: Integer dispid 7;
    property stBalSheetGL: Integer dispid 8;
    property stWIPGL: Integer dispid 9;
    property stBelowMinLevel: WordBool dispid 10;
    property stFolioNum: Integer readonly dispid 11;
    property stParentCode: WideString dispid 12;
    property stSuppTemp: WideString dispid 13;
    property stUnitOfStock: WideString dispid 14;
    property stUnitOfSale: WideString dispid 15;
    property stUnitOfPurch: WideString dispid 16;
    property stCostPriceCur: Integer dispid 17;
    property stCostPrice: Double dispid 18;
    property stSalesUnits: Double dispid 19;
    property stPurchUnits: Double dispid 20;
    property stVATCode: WideString dispid 21;
    property stCostCentre: WideString dispid 22;
    property stDepartment: WideString dispid 23;
    property stQtyInStock: Double readonly dispid 24;
    property stQtyPosted: Double readonly dispid 25;
    property stQtyAllocated: Double readonly dispid 26;
    property stQtyOnOrder: Double readonly dispid 27;
    property stQtyMin: Double dispid 28;
    property stQtyMax: Double dispid 29;
    property stBinLocation: WideString dispid 36;
    property stCover: IStockCover readonly dispid 37;
    property stIntrastat: IStockIntrastat readonly dispid 38;
    property stReorder: IStockReorder readonly dispid 39;
    property stAnalysisCode: WideString dispid 40;
    property stSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 41;
    property stTimeChange: WideString readonly dispid 42;
    property stInclusiveVATCode: WideString dispid 43;
    property stOperator: WideString dispid 44;
    property stSupplier: WideString dispid 45;
    property stSupplierI: IAccount readonly dispid 46;
    property stDefaultLineType: TTransactionLineType dispid 47;
    property stValuationMethod: TStockValuationType dispid 52;
    property stQtyPicked: Double readonly dispid 53;
    property stLastUsed: WideString readonly dispid 54;
    property stBarCode: WideString dispid 55;
    property stLocation: WideString dispid 56;
    property stPricingMethod: TStockPricingMethod dispid 57;
    property stShowQtyAsPacks: WordBool dispid 58;
    property stUseKitPrice: WordBool dispid 59;
    property stUserField1: WideString dispid 60;
    property stUserField2: WideString dispid 61;
    property stUserField3: WideString dispid 62;
    property stUserField4: WideString dispid 63;
    property stShowKitOnPurchase: WordBool dispid 64;
    property stImageFile: WideString dispid 65;
    property stWebLiveCatalog: WideString dispid 66;
    property stWebPrevCatalog: WideString dispid 67;
    property stUseForEbus: WordBool dispid 68;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TStockIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IStock; dispid 30;
    function Update: IStock; dispid 31;
    function Clone: IStock; dispid 32;
    function Save: Integer; dispid 33;
    procedure Cancel; dispid 34;
    function BuildCodeIndex(const StockCode: WideString): WideString; dispid 35;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 48;
    function BuildParentIndex(const ParentCode: WideString; const ChildCode: WideString): WideString; dispid 49;
    function BuildDescIndex(const Desc: WideString): WideString; dispid 50;
    property stLocationList: IStockLocation readonly dispid 51;
    function BuildSupplierIndex(const AccountCode: WideString; CostCurrency: Integer; 
                                const StockCode: WideString): WideString; dispid 69;
    function BuildPandLIndex(PandLGL: Integer; const StockCode: WideString): WideString; dispid 70;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 71;
    function BuildBinLocIndex(const BinLocation: WideString): WideString; dispid 72;
    function BuildBarCodeIndex(const BarCode: WideString): WideString; dispid 73;
    property stNotes: INotes readonly dispid 74;
    property stQtyFree: Double readonly dispid 75;
    property stQtyBreaks: IQuantityBreak readonly dispid 76;
    property stAnalysisCodeI: IJobAnalysis readonly dispid 77;
    property stWhereUsed: IStockWhereUsed readonly dispid 78;
    property stBillOfMaterials: IStockBOMList readonly dispid 79;
    property stSerialBatch: ISerialBatch readonly dispid 80;
  end;

// *********************************************************************//
// Interface: IQuantityBreak2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1745A08-B960-4ED3-94C9-D726C8F9C012}
// *********************************************************************//
  IQuantityBreak2 = interface(IQuantityBreak)
    ['{E1745A08-B960-4ED3-94C9-D726C8F9C012}']
    function Get_qbDateEffectiveFrom: WideString; safecall;
    procedure Set_qbDateEffectiveFrom(const Value: WideString); safecall;
    function Get_qbDateEffectiveTo: WideString; safecall;
    procedure Set_qbDateEffectiveTo(const Value: WideString); safecall;
    function Get_qbUseEffectiveDates: WordBool; safecall;
    procedure Set_qbUseEffectiveDates(Value: WordBool); safecall;
    property qbDateEffectiveFrom: WideString read Get_qbDateEffectiveFrom write Set_qbDateEffectiveFrom;
    property qbDateEffectiveTo: WideString read Get_qbDateEffectiveTo write Set_qbDateEffectiveTo;
    property qbUseEffectiveDates: WordBool read Get_qbUseEffectiveDates write Set_qbUseEffectiveDates;
  end;

// *********************************************************************//
// DispIntf:  IQuantityBreak2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1745A08-B960-4ED3-94C9-D726C8F9C012}
// *********************************************************************//
  IQuantityBreak2Disp = dispinterface
    ['{E1745A08-B960-4ED3-94C9-D726C8F9C012}']
    property qbDateEffectiveFrom: WideString dispid 4;
    property qbDateEffectiveTo: WideString dispid 15;
    property qbUseEffectiveDates: WordBool dispid 16;
    property qbQuantityFrom: Double dispid 1;
    property qbQuantityTo: Double dispid 2;
    property qbType: TDiscountType dispid 3;
    property qbPrice: Double dispid 5;
    property qbDiscPercent: Double dispid 6;
    property qbDiscValue: Double dispid 7;
    property qbMarkupMarginPercent: Double dispid 8;
    property qbCurrency: Smallint dispid 9;
    property qbPriceBand: WideString dispid 10;
    function Add: IQuantityBreak; dispid 11;
    function Update: IQuantityBreak; dispid 12;
    function Save: Integer; dispid 13;
    procedure Cancel; dispid 14;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
  end;

// *********************************************************************//
// Interface: IAccountDiscount2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D19F07F9-63A4-443F-91E0-91FD24BAD1D7}
// *********************************************************************//
  IAccountDiscount2 = interface(IAccountDiscount)
    ['{D19F07F9-63A4-443F-91E0-91FD24BAD1D7}']
    function Get_adDateEffectiveFrom: WideString; safecall;
    procedure Set_adDateEffectiveFrom(const Value: WideString); safecall;
    function Get_adDateEffectiveTo: WideString; safecall;
    procedure Set_adDateEffectiveTo(const Value: WideString); safecall;
    function Get_adUseEffectiveDates: WordBool; safecall;
    procedure Set_adUseEffectiveDates(Value: WordBool); safecall;
    property adDateEffectiveFrom: WideString read Get_adDateEffectiveFrom write Set_adDateEffectiveFrom;
    property adDateEffectiveTo: WideString read Get_adDateEffectiveTo write Set_adDateEffectiveTo;
    property adUseEffectiveDates: WordBool read Get_adUseEffectiveDates write Set_adUseEffectiveDates;
  end;

// *********************************************************************//
// DispIntf:  IAccountDiscount2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D19F07F9-63A4-443F-91E0-91FD24BAD1D7}
// *********************************************************************//
  IAccountDiscount2Disp = dispinterface
    ['{D19F07F9-63A4-443F-91E0-91FD24BAD1D7}']
    property adDateEffectiveFrom: WideString dispid 17;
    property adDateEffectiveTo: WideString dispid 18;
    property adUseEffectiveDates: WordBool dispid 19;
    property adStockCode: WideString dispid 2;
    property adType: TDiscountType dispid 3;
    property adCurrency: Smallint dispid 4;
    property adPrice: Double dispid 5;
    property adDiscPercent: Double dispid 6;
    property adDiscValue: Double dispid 7;
    property adMarkupMarginPercent: Double dispid 8;
    property adStockCodeI: IStock readonly dispid 9;
    function BuildIndex(const StockCode: WideString; Currency: Smallint): WideString; dispid 10;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property adPriceBand: WideString dispid 11;
    function Add: IAccountDiscount; dispid 12;
    function Update: IAccountDiscount; dispid 13;
    function Clone: IAccountDiscount; dispid 14;
    function Save: Integer; dispid 15;
    procedure Cancel; dispid 16;
    property adQtyBreaks: IQuantityBreak readonly dispid 1;
  end;

// *********************************************************************//
// Interface: IStock4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED4574B8-9F2E-4EC3-A1B6-0535803D70BE}
// *********************************************************************//
  IStock4 = interface(IStock3)
    ['{ED4574B8-9F2E-4EC3-A1B6-0535803D70BE}']
    function Get_stSalesWarrantyLength: Integer; safecall;
    procedure Set_stSalesWarrantyLength(Value: Integer); safecall;
    function Get_stSalesWarrantyUnits: TWarrantyUnitsType; safecall;
    procedure Set_stSalesWarrantyUnits(Value: TWarrantyUnitsType); safecall;
    function Get_stManufacturerWarrantyLength: Integer; safecall;
    procedure Set_stManufacturerWarrantyLength(Value: Integer); safecall;
    function Get_stManufacturerWarrantyUnits: TWarrantyUnitsType; safecall;
    procedure Set_stManufacturerWarrantyUnits(Value: TWarrantyUnitsType); safecall;
    function Get_stSalesReturnGL: Integer; safecall;
    procedure Set_stSalesReturnGL(Value: Integer); safecall;
    function Get_stPurchaseReturnGL: Integer; safecall;
    procedure Set_stPurchaseReturnGL(Value: Integer); safecall;
    function Get_stRestockCharge: Double; safecall;
    procedure Set_stRestockCharge(Value: Double); safecall;
    function Get_stSalesReturnQty: Double; safecall;
    function Get_stPurchaseReturnQty: Double; safecall;
    function Get_stRestockFlag: TRestockChargeType; safecall;
    procedure Set_stRestockFlag(Value: TRestockChargeType); safecall;
    property stSalesWarrantyLength: Integer read Get_stSalesWarrantyLength write Set_stSalesWarrantyLength;
    property stSalesWarrantyUnits: TWarrantyUnitsType read Get_stSalesWarrantyUnits write Set_stSalesWarrantyUnits;
    property stManufacturerWarrantyLength: Integer read Get_stManufacturerWarrantyLength write Set_stManufacturerWarrantyLength;
    property stManufacturerWarrantyUnits: TWarrantyUnitsType read Get_stManufacturerWarrantyUnits write Set_stManufacturerWarrantyUnits;
    property stSalesReturnGL: Integer read Get_stSalesReturnGL write Set_stSalesReturnGL;
    property stPurchaseReturnGL: Integer read Get_stPurchaseReturnGL write Set_stPurchaseReturnGL;
    property stRestockCharge: Double read Get_stRestockCharge write Set_stRestockCharge;
    property stSalesReturnQty: Double read Get_stSalesReturnQty;
    property stPurchaseReturnQty: Double read Get_stPurchaseReturnQty;
    property stRestockFlag: TRestockChargeType read Get_stRestockFlag write Set_stRestockFlag;
  end;

// *********************************************************************//
// DispIntf:  IStock4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED4574B8-9F2E-4EC3-A1B6-0535803D70BE}
// *********************************************************************//
  IStock4Disp = dispinterface
    ['{ED4574B8-9F2E-4EC3-A1B6-0535803D70BE}']
    property stSalesWarrantyLength: Integer dispid 103;
    property stSalesWarrantyUnits: TWarrantyUnitsType dispid 104;
    property stManufacturerWarrantyLength: Integer dispid 108;
    property stManufacturerWarrantyUnits: TWarrantyUnitsType dispid 109;
    property stSalesReturnGL: Integer dispid 111;
    property stPurchaseReturnGL: Integer dispid 112;
    property stRestockCharge: Double dispid 113;
    property stSalesReturnQty: Double readonly dispid 114;
    property stPurchaseReturnQty: Double readonly dispid 115;
    property stRestockFlag: TRestockChargeType dispid 110;
    property stEquivalent: IAltStockCode2 readonly dispid 105;
    property stSupersededBy: IAltStockCode2 readonly dispid 106;
    property stOpportunity: IAltStockCode2 readonly dispid 107;
    property stBOMProductionTime: Integer readonly dispid 81;
    property stQtyAllocWOR: Double readonly dispid 82;
    property stQtyFreeze: Double readonly dispid 83;
    property stQtyIssuedWOR: Double readonly dispid 84;
    property stQtyPickedWOR: Double readonly dispid 85;
    property stQtyStockTake: Double dispid 86;
    property stWOPAssemblyDays: Integer dispid 87;
    property stWOPAssemblyHours: Integer dispid 88;
    property stWOPAssemblyMins: Integer dispid 89;
    property stWOPAutoCalcTime: WordBool dispid 90;
    property stWOPIssuedWIPGL: Integer dispid 91;
    property stWOPMinEconBuild: Double dispid 92;
    property stWOPRoLeadTime: Integer dispid 93;
    property stUsesBins: WordBool dispid 94;
    property stStockTakeQtyChanged: WordBool readonly dispid 95;
    property stShowKitOnSales: WordBool dispid 96;
    property stLinks: ILinks readonly dispid 97;
    property stAltStockCode: IAltStockCode readonly dispid 98;
    property stMultiBin: IMultiBin readonly dispid 99;
    property stSalesAnalysis: IStockSalesAnalysis readonly dispid 100;
    function Print(PrintAs: TStockPrintMode): IPrintJob; dispid 101;
    function Discontinue(RetainComponents: WordBool): Integer; dispid 102;
    property stCode: WideString dispid 1;
    property stDesc[Index: Integer]: WideString dispid 2;
    property stAltCode: WideString dispid 3;
    property stType: TStockType dispid 4;
    property stSalesGL: Integer dispid 5;
    property stCOSGL: Integer dispid 6;
    property stPandLGL: Integer dispid 7;
    property stBalSheetGL: Integer dispid 8;
    property stWIPGL: Integer dispid 9;
    property stBelowMinLevel: WordBool dispid 10;
    property stFolioNum: Integer readonly dispid 11;
    property stParentCode: WideString dispid 12;
    property stSuppTemp: WideString dispid 13;
    property stUnitOfStock: WideString dispid 14;
    property stUnitOfSale: WideString dispid 15;
    property stUnitOfPurch: WideString dispid 16;
    property stCostPriceCur: Integer dispid 17;
    property stCostPrice: Double dispid 18;
    property stSalesUnits: Double dispid 19;
    property stPurchUnits: Double dispid 20;
    property stVATCode: WideString dispid 21;
    property stCostCentre: WideString dispid 22;
    property stDepartment: WideString dispid 23;
    property stQtyInStock: Double readonly dispid 24;
    property stQtyPosted: Double readonly dispid 25;
    property stQtyAllocated: Double readonly dispid 26;
    property stQtyOnOrder: Double readonly dispid 27;
    property stQtyMin: Double dispid 28;
    property stQtyMax: Double dispid 29;
    property stBinLocation: WideString dispid 36;
    property stCover: IStockCover readonly dispid 37;
    property stIntrastat: IStockIntrastat readonly dispid 38;
    property stReorder: IStockReorder readonly dispid 39;
    property stAnalysisCode: WideString dispid 40;
    property stSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 41;
    property stTimeChange: WideString readonly dispid 42;
    property stInclusiveVATCode: WideString dispid 43;
    property stOperator: WideString dispid 44;
    property stSupplier: WideString dispid 45;
    property stSupplierI: IAccount readonly dispid 46;
    property stDefaultLineType: TTransactionLineType dispid 47;
    property stValuationMethod: TStockValuationType dispid 52;
    property stQtyPicked: Double readonly dispid 53;
    property stLastUsed: WideString readonly dispid 54;
    property stBarCode: WideString dispid 55;
    property stLocation: WideString dispid 56;
    property stPricingMethod: TStockPricingMethod dispid 57;
    property stShowQtyAsPacks: WordBool dispid 58;
    property stUseKitPrice: WordBool dispid 59;
    property stUserField1: WideString dispid 60;
    property stUserField2: WideString dispid 61;
    property stUserField3: WideString dispid 62;
    property stUserField4: WideString dispid 63;
    property stShowKitOnPurchase: WordBool dispid 64;
    property stImageFile: WideString dispid 65;
    property stWebLiveCatalog: WideString dispid 66;
    property stWebPrevCatalog: WideString dispid 67;
    property stUseForEbus: WordBool dispid 68;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TStockIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IStock; dispid 30;
    function Update: IStock; dispid 31;
    function Clone: IStock; dispid 32;
    function Save: Integer; dispid 33;
    procedure Cancel; dispid 34;
    function BuildCodeIndex(const StockCode: WideString): WideString; dispid 35;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 48;
    function BuildParentIndex(const ParentCode: WideString; const ChildCode: WideString): WideString; dispid 49;
    function BuildDescIndex(const Desc: WideString): WideString; dispid 50;
    property stLocationList: IStockLocation readonly dispid 51;
    function BuildSupplierIndex(const AccountCode: WideString; CostCurrency: Integer; 
                                const StockCode: WideString): WideString; dispid 69;
    function BuildPandLIndex(PandLGL: Integer; const StockCode: WideString): WideString; dispid 70;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 71;
    function BuildBinLocIndex(const BinLocation: WideString): WideString; dispid 72;
    function BuildBarCodeIndex(const BarCode: WideString): WideString; dispid 73;
    property stNotes: INotes readonly dispid 74;
    property stQtyFree: Double readonly dispid 75;
    property stQtyBreaks: IQuantityBreak readonly dispid 76;
    property stAnalysisCodeI: IJobAnalysis readonly dispid 77;
    property stWhereUsed: IStockWhereUsed readonly dispid 78;
    property stBillOfMaterials: IStockBOMList readonly dispid 79;
    property stSerialBatch: ISerialBatch readonly dispid 80;
  end;

// *********************************************************************//
// Interface: ILocation2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {530477AD-F557-4159-A6DC-9927FE090353}
// *********************************************************************//
  ILocation2 = interface(ILocation)
    ['{530477AD-F557-4159-A6DC-9927FE090353}']
    function Get_loPurchaseReturnGL: Integer; safecall;
    procedure Set_loPurchaseReturnGL(Value: Integer); safecall;
    function Get_loSalesReturnGL: Integer; safecall;
    procedure Set_loSalesReturnGL(Value: Integer); safecall;
    function Get_loWOPFinishedWIPGL: Integer; safecall;
    procedure Set_loWOPFinishedWIPGL(Value: Integer); safecall;
    function Get_loNotes: INotes; safecall;
    function Get_loOverrideCostPrice: WordBool; safecall;
    procedure Set_loOverrideCostPrice(Value: WordBool); safecall;
    function Get_loOverrideReorderPrice: WordBool; safecall;
    procedure Set_loOverrideReorderPrice(Value: WordBool); safecall;
    property loPurchaseReturnGL: Integer read Get_loPurchaseReturnGL write Set_loPurchaseReturnGL;
    property loSalesReturnGL: Integer read Get_loSalesReturnGL write Set_loSalesReturnGL;
    property loWOPFinishedWIPGL: Integer read Get_loWOPFinishedWIPGL write Set_loWOPFinishedWIPGL;
    property loNotes: INotes read Get_loNotes;
    property loOverrideCostPrice: WordBool read Get_loOverrideCostPrice write Set_loOverrideCostPrice;
    property loOverrideReorderPrice: WordBool read Get_loOverrideReorderPrice write Set_loOverrideReorderPrice;
  end;

// *********************************************************************//
// DispIntf:  ILocation2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {530477AD-F557-4159-A6DC-9927FE090353}
// *********************************************************************//
  ILocation2Disp = dispinterface
    ['{530477AD-F557-4159-A6DC-9927FE090353}']
    property loPurchaseReturnGL: Integer dispid 33;
    property loSalesReturnGL: Integer dispid 34;
    property loWOPFinishedWIPGL: Integer dispid 35;
    property loNotes: INotes readonly dispid 36;
    property loOverrideCostPrice: WordBool dispid 37;
    property loOverrideReorderPrice: WordBool dispid 38;
    property loCode: WideString dispid 1;
    property loName: WideString dispid 2;
    property loAddress: IAddress readonly dispid 3;
    property loPhone: WideString dispid 4;
    property loFax: WideString dispid 5;
    property loEmailAddr: WideString dispid 6;
    property loModem: WideString dispid 7;
    property loContact: WideString dispid 8;
    property loCurrency: Smallint dispid 9;
    property loArea: WideString dispid 10;
    property loRep: WideString dispid 11;
    property loTagged: WordBool dispid 12;
    property loCostCentre: WideString dispid 13;
    property loDepartment: WideString dispid 14;
    property loOverrideSalesPrice: WordBool dispid 15;
    property loOverrideGLCodes: WordBool dispid 16;
    property loOverrideCCDept: WordBool dispid 17;
    property loOverrideSupplier: WordBool dispid 18;
    property loOverrideBinLocation: WordBool dispid 19;
    property loSalesGL: Integer dispid 20;
    property loCostOfSalesGL: Integer dispid 21;
    property loPandLGL: Integer dispid 22;
    property loBalSheetGL: Integer dispid 23;
    property loWIPGL: Integer dispid 24;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 25;
    function BuildNameIndex(const Name: WideString): WideString; dispid 26;
    function Add: ILocation; dispid 27;
    function Update: ILocation; dispid 28;
    function Clone: ILocation; dispid 29;
    function Save: Integer; dispid 30;
    procedure Cancel; dispid 31;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TLocationIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property loStockList: IStockLocation readonly dispid 32;
  end;

// *********************************************************************//
// Interface: IStockLocation2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55702475-BF68-4694-AC64-9C8B77702D54}
// *********************************************************************//
  IStockLocation2 = interface(IStockLocation)
    ['{55702475-BF68-4694-AC64-9C8B77702D54}']
    function Get_slPurchaseReturnGL: Integer; safecall;
    procedure Set_slPurchaseReturnGL(Value: Integer); safecall;
    function Get_slPurchaseReturnQty: Double; safecall;
    function Get_slManufacturerWarrantyLength: Integer; safecall;
    procedure Set_slManufacturerWarrantyLength(Value: Integer); safecall;
    function Get_slManufacturerWarrantyUnits: TWarrantyUnitsType; safecall;
    procedure Set_slManufacturerWarrantyUnits(Value: TWarrantyUnitsType); safecall;
    function Get_slRestockCharge: Double; safecall;
    procedure Set_slRestockCharge(Value: Double); safecall;
    function Get_slSalesReturnGL: Integer; safecall;
    procedure Set_slSalesReturnGL(Value: Integer); safecall;
    function Get_slSalesReturnQty: Double; safecall;
    function Get_slSalesWarrantyLength: Integer; safecall;
    procedure Set_slSalesWarrantyLength(Value: Integer); safecall;
    function Get_slSalesWarrantyUnits: TWarrantyUnitsType; safecall;
    procedure Set_slSalesWarrantyUnits(Value: TWarrantyUnitsType); safecall;
    function Get_slWOPIssuedWIPGL: Integer; safecall;
    procedure Set_slWOPIssuedWIPGL(Value: Integer); safecall;
    property slPurchaseReturnGL: Integer read Get_slPurchaseReturnGL write Set_slPurchaseReturnGL;
    property slPurchaseReturnQty: Double read Get_slPurchaseReturnQty;
    property slManufacturerWarrantyLength: Integer read Get_slManufacturerWarrantyLength write Set_slManufacturerWarrantyLength;
    property slManufacturerWarrantyUnits: TWarrantyUnitsType read Get_slManufacturerWarrantyUnits write Set_slManufacturerWarrantyUnits;
    property slRestockCharge: Double read Get_slRestockCharge write Set_slRestockCharge;
    property slSalesReturnGL: Integer read Get_slSalesReturnGL write Set_slSalesReturnGL;
    property slSalesReturnQty: Double read Get_slSalesReturnQty;
    property slSalesWarrantyLength: Integer read Get_slSalesWarrantyLength write Set_slSalesWarrantyLength;
    property slSalesWarrantyUnits: TWarrantyUnitsType read Get_slSalesWarrantyUnits write Set_slSalesWarrantyUnits;
    property slWOPIssuedWIPGL: Integer read Get_slWOPIssuedWIPGL write Set_slWOPIssuedWIPGL;
  end;

// *********************************************************************//
// DispIntf:  IStockLocation2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55702475-BF68-4694-AC64-9C8B77702D54}
// *********************************************************************//
  IStockLocation2Disp = dispinterface
    ['{55702475-BF68-4694-AC64-9C8B77702D54}']
    property slPurchaseReturnGL: Integer dispid 44;
    property slPurchaseReturnQty: Double readonly dispid 45;
    property slManufacturerWarrantyLength: Integer dispid 46;
    property slManufacturerWarrantyUnits: TWarrantyUnitsType dispid 47;
    property slRestockCharge: Double dispid 48;
    property slSalesReturnGL: Integer dispid 49;
    property slSalesReturnQty: Double readonly dispid 50;
    property slSalesWarrantyLength: Integer dispid 51;
    property slSalesWarrantyUnits: TWarrantyUnitsType dispid 52;
    property slWOPIssuedWIPGL: Integer dispid 53;
    property slStockCode: WideString dispid 1;
    property slLocationCode: WideString dispid 2;
    property slStockCodeI: IStock readonly dispid 3;
    property slLocationCodeI: ILocation readonly dispid 4;
    property slQtyInStock: Double readonly dispid 5;
    property slQtyOnOrder: Double readonly dispid 6;
    property slQtyAllocated: Double readonly dispid 7;
    property slQtyPicked: Double readonly dispid 8;
    property slQtyMin: Double dispid 9;
    property slQtyMax: Double dispid 10;
    property slQtyFreeze: Double readonly dispid 11;
    property slReorderQty: Double dispid 12;
    property slReorderCur: Smallint dispid 13;
    property slReorderPrice: Double dispid 14;
    property slReorderDate: WideString dispid 15;
    property slReorderCostCentre: WideString dispid 16;
    property slReorderDepartment: WideString dispid 17;
    property slCostCentre: WideString dispid 18;
    property slDepartment: WideString dispid 19;
    property slBinLocation: WideString dispid 20;
    property slCostPriceCur: Integer dispid 21;
    property slCostPrice: Double dispid 22;
    property slBelowMinLevel: WordBool dispid 23;
    property slSuppTemp: WideString dispid 24;
    property slSupplier: WideString dispid 25;
    property slSupplierI: IAccount readonly dispid 26;
    property slLastUsed: WideString readonly dispid 27;
    property slQtyPosted: Double readonly dispid 28;
    property slQtyStockTake: Double dispid 29;
    property slTimeChange: WideString readonly dispid 30;
    property slSalesGL: Integer dispid 31;
    property slCostOfSalesGL: Integer dispid 32;
    property slPandLGL: Integer dispid 33;
    property slBalSheetGL: Integer dispid 34;
    property slWIPGL: Integer dispid 35;
    property slSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 36;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property slQtyFree: Double readonly dispid 37;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 38;
    function Add: IStockLocation; dispid 39;
    function Update: IStockLocation; dispid 40;
    function Clone: IStockLocation; dispid 41;
    function Save: Integer; dispid 42;
    procedure Cancel; dispid 43;
  end;

// *********************************************************************//
// Interface: ISerialBatch3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53B30DE8-1822-4788-AFBA-6DCB6067E7CA}
// *********************************************************************//
  ISerialBatch3 = interface(ISerialBatch2)
    ['{53B30DE8-1822-4788-AFBA-6DCB6067E7CA}']
    function Get_snReturned: WordBool; safecall;
    procedure Set_snReturned(Value: WordBool); safecall;
    function Get_snReturnOurRef: WideString; safecall;
    procedure Set_snReturnOurRef(const Value: WideString); safecall;
    function Get_snBatchReturnedQty: Double; safecall;
    procedure Set_snBatchReturnedQty(Value: Double); safecall;
    function Get_snReturnLineNo: Integer; safecall;
    procedure Set_snReturnLineNo(Value: Integer); safecall;
    property snReturned: WordBool read Get_snReturned write Set_snReturned;
    property snReturnOurRef: WideString read Get_snReturnOurRef write Set_snReturnOurRef;
    property snBatchReturnedQty: Double read Get_snBatchReturnedQty write Set_snBatchReturnedQty;
    property snReturnLineNo: Integer read Get_snReturnLineNo write Set_snReturnLineNo;
  end;

// *********************************************************************//
// DispIntf:  ISerialBatch3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53B30DE8-1822-4788-AFBA-6DCB6067E7CA}
// *********************************************************************//
  ISerialBatch3Disp = dispinterface
    ['{53B30DE8-1822-4788-AFBA-6DCB6067E7CA}']
    property snReturned: WordBool dispid 16;
    property snReturnOurRef: WideString dispid 17;
    property snBatchReturnedQty: Double dispid 18;
    property snReturnLineNo: Integer dispid 19;
    property snBinCode: WideString dispid 15;
    function BuildUsedSerialIndex(Sold: WordBool; const SerialNo: WideString): WideString; dispid 257;
    function Add: ISerialBatch; dispid 258;
    function Clone: ISerialBatch; dispid 260;
    function Save: Integer; dispid 261;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildSerialIndex(const SerialNo: WideString): WideString; dispid 6;
    function BuildBatchIndex(const BatchNo: WideString): WideString; dispid 7;
    property Index: TSerialBatchIndex dispid 8;
    property snSerialNo: WideString dispid 1;
    property snBatchNo: WideString dispid 2;
    property snType: TSerialBatchType readonly dispid 3;
    property snSold: WordBool dispid 4;
    property snUseByDate: WideString dispid 5;
    property snInDate: WideString dispid 9;
    property snInOrderRef: WideString dispid 10;
    property snInOrderLine: Integer dispid 11;
    property snInDocRef: WideString dispid 12;
    property snInDocLine: Integer dispid 13;
    property snInLocation: WideString dispid 14;
    property snOutDate: WideString dispid 21;
    property snOutOrderRef: WideString dispid 22;
    property snOutOrderLine: Integer dispid 23;
    property snOutDocRef: WideString dispid 24;
    property snOutDocLine: Integer dispid 25;
    property snOutLocation: WideString dispid 26;
    property snCostPrice: Double dispid 27;
    property snCostPriceCurrency: Smallint dispid 28;
    property snSalesPrice: Double dispid 29;
    property snSalesPriceCurrency: Smallint dispid 30;
    property snBatchQuantity: Double dispid 31;
    property snBatchQuantitySold: Double dispid 32;
    property snDailyRate: Double dispid 33;
    property snCompanyRate: Double dispid 34;
    property snNotes: INotes readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ISerialBatchDetails3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A443B12-50FC-4A98-9C6B-F741058ABC84}
// *********************************************************************//
  ISerialBatchDetails3 = interface(ISerialBatchDetails2)
    ['{4A443B12-50FC-4A98-9C6B-F741058ABC84}']
    function Get_snReturned: WordBool; safecall;
    procedure Set_snReturned(Value: WordBool); safecall;
    function Get_snReturnOurRef: WideString; safecall;
    procedure Set_snReturnOurRef(const Value: WideString); safecall;
    function Get_snBatchReturnedQty: Double; safecall;
    procedure Set_snBatchReturnedQty(Value: Double); safecall;
    function Get_snReturnLineNo: Integer; safecall;
    procedure Set_snReturnLineNo(Value: Integer); safecall;
    property snReturned: WordBool read Get_snReturned write Set_snReturned;
    property snReturnOurRef: WideString read Get_snReturnOurRef write Set_snReturnOurRef;
    property snBatchReturnedQty: Double read Get_snBatchReturnedQty write Set_snBatchReturnedQty;
    property snReturnLineNo: Integer read Get_snReturnLineNo write Set_snReturnLineNo;
  end;

// *********************************************************************//
// DispIntf:  ISerialBatchDetails3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A443B12-50FC-4A98-9C6B-F741058ABC84}
// *********************************************************************//
  ISerialBatchDetails3Disp = dispinterface
    ['{4A443B12-50FC-4A98-9C6B-F741058ABC84}']
    property snReturned: WordBool dispid 7;
    property snReturnOurRef: WideString dispid 8;
    property snBatchReturnedQty: Double dispid 15;
    property snReturnLineNo: Integer dispid 16;
    property snBinCode: WideString dispid 6;
    property snSerialNo: WideString dispid 1;
    property snBatchNo: WideString dispid 2;
    property snType: TSerialBatchType readonly dispid 3;
    property snSold: WordBool dispid 4;
    property snUseByDate: WideString dispid 5;
    property snInDate: WideString dispid 9;
    property snInOrderRef: WideString dispid 10;
    property snInOrderLine: Integer dispid 11;
    property snInDocRef: WideString dispid 12;
    property snInDocLine: Integer dispid 13;
    property snInLocation: WideString dispid 14;
    property snOutDate: WideString dispid 21;
    property snOutOrderRef: WideString dispid 22;
    property snOutOrderLine: Integer dispid 23;
    property snOutDocRef: WideString dispid 24;
    property snOutDocLine: Integer dispid 25;
    property snOutLocation: WideString dispid 26;
    property snCostPrice: Double dispid 27;
    property snCostPriceCurrency: Smallint dispid 28;
    property snSalesPrice: Double dispid 29;
    property snSalesPriceCurrency: Smallint dispid 30;
    property snBatchQuantity: Double dispid 31;
    property snBatchQuantitySold: Double dispid 32;
    property snDailyRate: Double dispid 33;
    property snCompanyRate: Double dispid 34;
    property snNotes: INotes readonly dispid 35;
  end;

// *********************************************************************//
// Interface: IMultiBin2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5EC63CCD-4A7A-43C4-867D-6357F5F4794D}
// *********************************************************************//
  IMultiBin2 = interface(IMultiBin)
    ['{5EC63CCD-4A7A-43C4-867D-6357F5F4794D}']
    function Get_mbReturned: WordBool; safecall;
    procedure Set_mbReturned(Value: WordBool); safecall;
    property mbReturned: WordBool read Get_mbReturned write Set_mbReturned;
  end;

// *********************************************************************//
// DispIntf:  IMultiBin2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5EC63CCD-4A7A-43C4-867D-6357F5F4794D}
// *********************************************************************//
  IMultiBin2Disp = dispinterface
    ['{5EC63CCD-4A7A-43C4-867D-6357F5F4794D}']
    property mbReturned: WordBool dispid 37;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function Add: IMultiBin; dispid 31;
    function Update: IMultiBin; dispid 32;
    function Clone: IMultiBin; dispid 33;
    function Save: Integer; dispid 34;
    function BuildFullIndex(Sold: WordBool; const Location: WideString; const Priority: WideString; 
                            const DateIn: WideString; const Code: WideString): WideString; dispid 35;
    property KeyString: WideString readonly dispid 36;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property mbCode: WideString dispid 1;
    property mbInDocRef: WideString dispid 2;
    property mbOutDocRef: WideString dispid 3;
    property mbSold: WordBool dispid 4;
    property mbInDate: WideString dispid 5;
    property mbOutDate: WideString dispid 6;
    property mbCostPrice: Double dispid 7;
    property mbCapacity: Double dispid 8;
    property mbInDocLine: Integer dispid 9;
    property mbOutDocLine: Integer dispid 10;
    property mbQty: Double dispid 11;
    property mbQtyUsed: Double dispid 12;
    property mbUsed: WordBool dispid 13;
    property mbInLocation: WideString dispid 14;
    property mbOutLocation: WideString dispid 15;
    property mbInOrderRef: WideString dispid 16;
    property mbOutOrderRef: WideString dispid 17;
    property mbInOrderLine: Integer dispid 18;
    property mbOutOrderLine: Integer dispid 19;
    property mbCostPriceCurrency: Integer dispid 20;
    property mbSalesPriceCurrency: Integer dispid 21;
    property mbSalesPrice: Double dispid 22;
    property mbCompanyRate: Double dispid 23;
    property mbDailyRate: Double dispid 24;
    property mbUseOwnRates: WordBool dispid 25;
    property mbUnitOfMeasurement: WideString dispid 26;
    property mbTagNo: Integer dispid 27;
    property mbAutoPickMode: TAutoPickModeType dispid 28;
    property mbPickingPriority: WideString dispid 29;
    property mbUseByDate: WideString dispid 30;
  end;

// *********************************************************************//
// Interface: IMultiBinDetails2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B880F4CA-2A19-41B4-A85A-98923ADAAAA5}
// *********************************************************************//
  IMultiBinDetails2 = interface(IMultiBinDetails)
    ['{B880F4CA-2A19-41B4-A85A-98923ADAAAA5}']
    function Get_mbReturned: WordBool; safecall;
    procedure Set_mbReturned(Value: WordBool); safecall;
    property mbReturned: WordBool read Get_mbReturned write Set_mbReturned;
  end;

// *********************************************************************//
// DispIntf:  IMultiBinDetails2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B880F4CA-2A19-41B4-A85A-98923ADAAAA5}
// *********************************************************************//
  IMultiBinDetails2Disp = dispinterface
    ['{B880F4CA-2A19-41B4-A85A-98923ADAAAA5}']
    property mbReturned: WordBool dispid 31;
    property mbCode: WideString dispid 1;
    property mbInDocRef: WideString dispid 2;
    property mbOutDocRef: WideString dispid 3;
    property mbSold: WordBool dispid 4;
    property mbInDate: WideString dispid 5;
    property mbOutDate: WideString dispid 6;
    property mbCostPrice: Double dispid 7;
    property mbCapacity: Double dispid 8;
    property mbInDocLine: Integer dispid 9;
    property mbOutDocLine: Integer dispid 10;
    property mbQty: Double dispid 11;
    property mbQtyUsed: Double dispid 12;
    property mbUsed: WordBool dispid 13;
    property mbInLocation: WideString dispid 14;
    property mbOutLocation: WideString dispid 15;
    property mbInOrderRef: WideString dispid 16;
    property mbOutOrderRef: WideString dispid 17;
    property mbInOrderLine: Integer dispid 18;
    property mbOutOrderLine: Integer dispid 19;
    property mbCostPriceCurrency: Integer dispid 20;
    property mbSalesPriceCurrency: Integer dispid 21;
    property mbSalesPrice: Double dispid 22;
    property mbCompanyRate: Double dispid 23;
    property mbDailyRate: Double dispid 24;
    property mbUseOwnRates: WordBool dispid 25;
    property mbUnitOfMeasurement: WideString dispid 26;
    property mbTagNo: Integer dispid 27;
    property mbAutoPickMode: TAutoPickModeType dispid 28;
    property mbPickingPriority: WideString dispid 29;
    property mbUseByDate: WideString dispid 30;
  end;

// *********************************************************************//
// Interface: ISystemSetupReturnLineReason
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA534D4D-333A-4510-BC62-09986A45280D}
// *********************************************************************//
  ISystemSetupReturnLineReason = interface(IDispatch)
    ['{BA534D4D-333A-4510-BC62-09986A45280D}']
    function Get_rlrNumber: Integer; safecall;
    function Get_rlrDescription: WideString; safecall;
    function BuildNumberIndex(Number: Integer): WideString; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    property rlrNumber: Integer read Get_rlrNumber;
    property rlrDescription: WideString read Get_rlrDescription;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupReturnLineReasonDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA534D4D-333A-4510-BC62-09986A45280D}
// *********************************************************************//
  ISystemSetupReturnLineReasonDisp = dispinterface
    ['{BA534D4D-333A-4510-BC62-09986A45280D}']
    property rlrNumber: Integer readonly dispid 1;
    property rlrDescription: WideString readonly dispid 2;
    function BuildNumberIndex(Number: Integer): WideString; dispid 3;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: ISystemSetup4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21E5CE8E-B159-4FDF-B6D9-D8DB2FAA6BF3}
// *********************************************************************//
  ISystemSetup4 = interface(ISystemSetup3)
    ['{21E5CE8E-B159-4FDF-B6D9-D8DB2FAA6BF3}']
    function Get_ssReturnLineReason: ISystemSetupReturnLineReason; safecall;
    property ssReturnLineReason: ISystemSetupReturnLineReason read Get_ssReturnLineReason;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetup4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21E5CE8E-B159-4FDF-B6D9-D8DB2FAA6BF3}
// *********************************************************************//
  ISystemSetup4Disp = dispinterface
    ['{21E5CE8E-B159-4FDF-B6D9-D8DB2FAA6BF3}']
    property ssReturnLineReason: ISystemSetupReturnLineReason readonly dispid 121;
    property ssFilterByBinLocation: WordBool readonly dispid 116;
    property ssKeepBinHistory: WordBool readonly dispid 117;
    property ssBinMask: WideString readonly dispid 118;
    property ssBudgetByCCDeptEx: TBudgetByCCDeptType readonly dispid 119;
    property ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType readonly dispid 120;
    property ssWOPDisableWIP: WordBool readonly dispid 109;
    property ssWORAllocStockOnPick: WordBool readonly dispid 110;
    property ssWORCopyStkNotes: TWOPStockNotesType readonly dispid 111;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet readonly dispid 114;
    property ssCISSetup: ISystemSetupCIS readonly dispid 115;
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ITransactionLineAsReturn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCD40575-B974-4395-89B9-AE12EF378AC3}
// *********************************************************************//
  ITransactionLineAsReturn = interface(IDispatch)
    ['{FCD40575-B974-4395-89B9-AE12EF378AC3}']
    function Get_tlrQtyExpected: Double; safecall;
    procedure Set_tlrQtyExpected(Value: Double); safecall;
    function Get_tlrQtyReturned: Double; safecall;
    procedure Set_tlrQtyReturned(Value: Double); safecall;
    function Get_tlrQtyRepaired: Double; safecall;
    procedure Set_tlrQtyRepaired(Value: Double); safecall;
    function Get_tlrQtyWrittenOff: Double; safecall;
    procedure Set_tlrQtyWrittenOff(Value: Double); safecall;
    function Get_tlrTotalQtyRepaired: Double; safecall;
    function Get_tlrTotalQtyWrittenOff: Double; safecall;
    function Get_tlrUnderWarranty: WordBool; safecall;
    procedure Set_tlrUnderWarranty(Value: WordBool); safecall;
    function Get_tlrReason: Integer; safecall;
    procedure Set_tlrReason(Value: Integer); safecall;
    function Get_tlrStockCode: WideString; safecall;
    procedure Set_tlrStockCode(const Value: WideString); safecall;
    function Get_tlrDescr: WideString; safecall;
    procedure Set_tlrDescr(const Value: WideString); safecall;
    function Get_tlrLocation: WideString; safecall;
    procedure Set_tlrLocation(const Value: WideString); safecall;
    function Get_tlrNetValue: Double; safecall;
    procedure Set_tlrNetValue(Value: Double); safecall;
    function Get_tlrRepairPrice: Double; safecall;
    function Get_tlrDiscount: Double; safecall;
    procedure Set_tlrDiscount(Value: Double); safecall;
    function Get_tlrGLCode: Integer; safecall;
    procedure Set_tlrGLCode(Value: Integer); safecall;
    function Get_tlrVatCode: WideString; safecall;
    procedure Set_tlrVatCode(const Value: WideString); safecall;
    function Get_tlrCostCentre: WideString; safecall;
    procedure Set_tlrCostCentre(const Value: WideString); safecall;
    function Get_tlrDepartment: WideString; safecall;
    procedure Set_tlrDepartment(const Value: WideString); safecall;
    function Get_tlrCost: Double; safecall;
    function Get_tlrUserField1: WideString; safecall;
    procedure Set_tlrUserField1(const Value: WideString); safecall;
    function Get_tlrUserField2: WideString; safecall;
    procedure Set_tlrUserField2(const Value: WideString); safecall;
    function Get_tlrUserField3: WideString; safecall;
    procedure Set_tlrUserField3(const Value: WideString); safecall;
    function Get_tlrUserField4: WideString; safecall;
    procedure Set_tlrUserField4(const Value: WideString); safecall;
    function Get_tlrDiscFlag: WideString; safecall;
    procedure Set_tlrDiscFlag(const Value: WideString); safecall;
    property tlrQtyExpected: Double read Get_tlrQtyExpected write Set_tlrQtyExpected;
    property tlrQtyReturned: Double read Get_tlrQtyReturned write Set_tlrQtyReturned;
    property tlrQtyRepaired: Double read Get_tlrQtyRepaired write Set_tlrQtyRepaired;
    property tlrQtyWrittenOff: Double read Get_tlrQtyWrittenOff write Set_tlrQtyWrittenOff;
    property tlrTotalQtyRepaired: Double read Get_tlrTotalQtyRepaired;
    property tlrTotalQtyWrittenOff: Double read Get_tlrTotalQtyWrittenOff;
    property tlrUnderWarranty: WordBool read Get_tlrUnderWarranty write Set_tlrUnderWarranty;
    property tlrReason: Integer read Get_tlrReason write Set_tlrReason;
    property tlrStockCode: WideString read Get_tlrStockCode write Set_tlrStockCode;
    property tlrDescr: WideString read Get_tlrDescr write Set_tlrDescr;
    property tlrLocation: WideString read Get_tlrLocation write Set_tlrLocation;
    property tlrNetValue: Double read Get_tlrNetValue write Set_tlrNetValue;
    property tlrRepairPrice: Double read Get_tlrRepairPrice;
    property tlrDiscount: Double read Get_tlrDiscount write Set_tlrDiscount;
    property tlrGLCode: Integer read Get_tlrGLCode write Set_tlrGLCode;
    property tlrVatCode: WideString read Get_tlrVatCode write Set_tlrVatCode;
    property tlrCostCentre: WideString read Get_tlrCostCentre write Set_tlrCostCentre;
    property tlrDepartment: WideString read Get_tlrDepartment write Set_tlrDepartment;
    property tlrCost: Double read Get_tlrCost;
    property tlrUserField1: WideString read Get_tlrUserField1 write Set_tlrUserField1;
    property tlrUserField2: WideString read Get_tlrUserField2 write Set_tlrUserField2;
    property tlrUserField3: WideString read Get_tlrUserField3 write Set_tlrUserField3;
    property tlrUserField4: WideString read Get_tlrUserField4 write Set_tlrUserField4;
    property tlrDiscFlag: WideString read Get_tlrDiscFlag write Set_tlrDiscFlag;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineAsReturnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCD40575-B974-4395-89B9-AE12EF378AC3}
// *********************************************************************//
  ITransactionLineAsReturnDisp = dispinterface
    ['{FCD40575-B974-4395-89B9-AE12EF378AC3}']
    property tlrQtyExpected: Double dispid 1;
    property tlrQtyReturned: Double dispid 2;
    property tlrQtyRepaired: Double dispid 3;
    property tlrQtyWrittenOff: Double dispid 4;
    property tlrTotalQtyRepaired: Double readonly dispid 5;
    property tlrTotalQtyWrittenOff: Double readonly dispid 6;
    property tlrUnderWarranty: WordBool dispid 7;
    property tlrReason: Integer dispid 8;
    property tlrStockCode: WideString dispid 9;
    property tlrDescr: WideString dispid 10;
    property tlrLocation: WideString dispid 11;
    property tlrNetValue: Double dispid 12;
    property tlrRepairPrice: Double readonly dispid 13;
    property tlrDiscount: Double dispid 14;
    property tlrGLCode: Integer dispid 15;
    property tlrVatCode: WideString dispid 16;
    property tlrCostCentre: WideString dispid 17;
    property tlrDepartment: WideString dispid 18;
    property tlrCost: Double readonly dispid 19;
    property tlrUserField1: WideString dispid 21;
    property tlrUserField2: WideString dispid 22;
    property tlrUserField3: WideString dispid 23;
    property tlrUserField4: WideString dispid 24;
    property tlrDiscFlag: WideString dispid 20;
  end;

// *********************************************************************//
// Interface: ITransactionLine4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDB509E4-1A97-4F85-9679-8D63D0F0919B}
// *********************************************************************//
  ITransactionLine4 = interface(ITransactionLine3)
    ['{EDB509E4-1A97-4F85-9679-8D63D0F0919B}']
    function Get_tlAsReturn: ITransactionLineAsReturn; safecall;
    function CreateReturn: ITransactionLineReturnCreate; safecall;
    function Get_tlSerialReturnQty: Double; safecall;
    function Get_tlBinReturnQty: Double; safecall;
    property tlAsReturn: ITransactionLineAsReturn read Get_tlAsReturn;
    property tlSerialReturnQty: Double read Get_tlSerialReturnQty;
    property tlBinReturnQty: Double read Get_tlBinReturnQty;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDB509E4-1A97-4F85-9679-8D63D0F0919B}
// *********************************************************************//
  ITransactionLine4Disp = dispinterface
    ['{EDB509E4-1A97-4F85-9679-8D63D0F0919B}']
    property tlAsReturn: ITransactionLineAsReturn readonly dispid 86;
    function CreateReturn: ITransactionLineReturnCreate; dispid 88;
    property tlSerialReturnQty: Double readonly dispid 89;
    property tlBinReturnQty: Double readonly dispid 90;
    property tlMultiBin: ITransactionLineMultiBin readonly dispid 70;
    property tlAltStockCodeI: IAltStockCode readonly dispid 71;
    property tlRunNo: Integer readonly dispid 72;
    property tlStockDeductQty: Double readonly dispid 73;
    property tlUseQtyMul: WordBool readonly dispid 74;
    property tlReconciliationDate: WideString readonly dispid 76;
    property tlB2BLinkFolio: Integer readonly dispid 77;
    property tlB2BLineNo: Integer readonly dispid 78;
    property tlCOSDailyRate: Double readonly dispid 79;
    property tlVATIncValue: Double dispid 80;
    property tlBinQty: Double readonly dispid 81;
    procedure ExplodeBOM; dispid 82;
    property tlQtyPack: Double readonly dispid 84;
    property tlAsApplication: ITransactionLineAsApplication readonly dispid 87;
    procedure AddDescriptionLines; dispid 85;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: ITransactionAsReturn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6C15F6E-2A21-441B-98F7-41871D28AB5E}
// *********************************************************************//
  ITransactionAsReturn = interface(IDispatch)
    ['{C6C15F6E-2A21-441B-98F7-41871D28AB5E}']
    function Get_trPurchaseReturnStatus: TPurchaseReturnStatus; safecall;
    procedure Set_trPurchaseReturnStatus(Value: TPurchaseReturnStatus); safecall;
    function Get_trTotalQtyExpected: Double; safecall;
    function Get_trTotalQtyReturned: Double; safecall;
    function Get_trTotalQtyRepaired: Double; safecall;
    function Get_trTotalQtyWrittenOff: Double; safecall;
    function Get_trTotalAmountRepaired: Double; safecall;
    function Action: IReturnAction; safecall;
    function Get_trAcCode: WideString; safecall;
    procedure Set_trAcCode(const Value: WideString); safecall;
    function Get_trTransDate: WideString; safecall;
    procedure Set_trTransDate(const Value: WideString); safecall;
    function Get_trPeriod: Integer; safecall;
    procedure Set_trPeriod(Value: Integer); safecall;
    function Get_trYear: Integer; safecall;
    procedure Set_trYear(Value: Integer); safecall;
    function Get_trYourRef: WideString; safecall;
    procedure Set_trYourRef(const Value: WideString); safecall;
    function Get_trLongYourRef: WideString; safecall;
    procedure Set_trLongYourRef(const Value: WideString); safecall;
    function Get_trCurrency: Integer; safecall;
    procedure Set_trCurrency(Value: Integer); safecall;
    function Get_trDailyRate: Double; safecall;
    procedure Set_trDailyRate(Value: Double); safecall;
    function Get_trCompanyRate: Double; safecall;
    procedure Set_trCompanyRate(Value: Double); safecall;
    function Get_trUserField1: WideString; safecall;
    procedure Set_trUserField1(const Value: WideString); safecall;
    function Get_trUserField2: WideString; safecall;
    procedure Set_trUserField2(const Value: WideString); safecall;
    function Get_trUserField3: WideString; safecall;
    procedure Set_trUserField3(const Value: WideString); safecall;
    function Get_trUserField4: WideString; safecall;
    procedure Set_trUserField4(const Value: WideString); safecall;
    function Get_trDelAddress: IAddress; safecall;
    function Get_trFixedRate: WordBool; safecall;
    procedure Set_trFixedRate(Value: WordBool); safecall;
    function Get_trSalesReturnStatus: TSalesReturnStatus; safecall;
    procedure Set_trSalesReturnStatus(Value: TSalesReturnStatus); safecall;
    property trPurchaseReturnStatus: TPurchaseReturnStatus read Get_trPurchaseReturnStatus write Set_trPurchaseReturnStatus;
    property trTotalQtyExpected: Double read Get_trTotalQtyExpected;
    property trTotalQtyReturned: Double read Get_trTotalQtyReturned;
    property trTotalQtyRepaired: Double read Get_trTotalQtyRepaired;
    property trTotalQtyWrittenOff: Double read Get_trTotalQtyWrittenOff;
    property trTotalAmountRepaired: Double read Get_trTotalAmountRepaired;
    property trAcCode: WideString read Get_trAcCode write Set_trAcCode;
    property trTransDate: WideString read Get_trTransDate write Set_trTransDate;
    property trPeriod: Integer read Get_trPeriod write Set_trPeriod;
    property trYear: Integer read Get_trYear write Set_trYear;
    property trYourRef: WideString read Get_trYourRef write Set_trYourRef;
    property trLongYourRef: WideString read Get_trLongYourRef write Set_trLongYourRef;
    property trCurrency: Integer read Get_trCurrency write Set_trCurrency;
    property trDailyRate: Double read Get_trDailyRate write Set_trDailyRate;
    property trCompanyRate: Double read Get_trCompanyRate write Set_trCompanyRate;
    property trUserField1: WideString read Get_trUserField1 write Set_trUserField1;
    property trUserField2: WideString read Get_trUserField2 write Set_trUserField2;
    property trUserField3: WideString read Get_trUserField3 write Set_trUserField3;
    property trUserField4: WideString read Get_trUserField4 write Set_trUserField4;
    property trDelAddress: IAddress read Get_trDelAddress;
    property trFixedRate: WordBool read Get_trFixedRate write Set_trFixedRate;
    property trSalesReturnStatus: TSalesReturnStatus read Get_trSalesReturnStatus write Set_trSalesReturnStatus;
  end;

// *********************************************************************//
// DispIntf:  ITransactionAsReturnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6C15F6E-2A21-441B-98F7-41871D28AB5E}
// *********************************************************************//
  ITransactionAsReturnDisp = dispinterface
    ['{C6C15F6E-2A21-441B-98F7-41871D28AB5E}']
    property trPurchaseReturnStatus: TPurchaseReturnStatus dispid 1;
    property trTotalQtyExpected: Double readonly dispid 2;
    property trTotalQtyReturned: Double readonly dispid 3;
    property trTotalQtyRepaired: Double readonly dispid 4;
    property trTotalQtyWrittenOff: Double readonly dispid 5;
    property trTotalAmountRepaired: Double readonly dispid 6;
    function Action: IReturnAction; dispid 7;
    property trAcCode: WideString dispid 8;
    property trTransDate: WideString dispid 9;
    property trPeriod: Integer dispid 10;
    property trYear: Integer dispid 11;
    property trYourRef: WideString dispid 12;
    property trLongYourRef: WideString dispid 13;
    property trCurrency: Integer dispid 14;
    property trDailyRate: Double dispid 15;
    property trCompanyRate: Double dispid 16;
    property trUserField1: WideString dispid 17;
    property trUserField2: WideString dispid 18;
    property trUserField3: WideString dispid 19;
    property trUserField4: WideString dispid 20;
    property trDelAddress: IAddress readonly dispid 21;
    property trFixedRate: WordBool dispid 22;
    property trSalesReturnStatus: TSalesReturnStatus dispid 23;
  end;

// *********************************************************************//
// Interface: ITransaction4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83903181-27C6-415B-A4E3-2745D5658A81}
// *********************************************************************//
  ITransaction4 = interface(ITransaction3)
    ['{83903181-27C6-415B-A4E3-2745D5658A81}']
    function Get_thAsReturn: ITransactionAsReturn; safecall;
    function CreateReturn: ITransactionReturnCreate; safecall;
    property thAsReturn: ITransactionAsReturn read Get_thAsReturn;
  end;

// *********************************************************************//
// DispIntf:  ITransaction4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83903181-27C6-415B-A4E3-2745D5658A81}
// *********************************************************************//
  ITransaction4Disp = dispinterface
    ['{83903181-27C6-415B-A4E3-2745D5658A81}']
    property thAsReturn: ITransactionAsReturn readonly dispid 122;
    function CreateReturn: ITransactionReturnCreate; dispid 123;
    property thAutoTransaction: WordBool readonly dispid 106;
    property thDeliveryRunNo: WideString readonly dispid 107;
    property thExternal: WordBool readonly dispid 108;
    property thSettledVAT: Double readonly dispid 109;
    property thVATClaimed: Double readonly dispid 110;
    property thPickingRunNo: Integer readonly dispid 111;
    property thDeliveryNoteRef: WideString readonly dispid 112;
    property thVATCompanyRate: Double readonly dispid 113;
    property thVATDailyRate: Double readonly dispid 114;
    property thPostCompanyRate: Double readonly dispid 115;
    property thPostDailyRate: Double readonly dispid 116;
    property thPostDiscAmount: Double readonly dispid 117;
    property thPostDiscTaken: WordBool readonly dispid 118;
    property thLastDebtChaseLetter: Integer readonly dispid 119;
    property thExported: WordBool dispid 120;
    property thAsApplication: ITransactionAsApplication readonly dispid 121;
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: IReturnCreate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCA8569B-7044-4F86-B221-F8423CCF8CC7}
// *********************************************************************//
  IReturnCreate = interface(IDispatch)
    ['{DCA8569B-7044-4F86-B221-F8423CCF8CC7}']
    function Get_rcUnderWarranty: WordBool; safecall;
    procedure Set_rcUnderWarranty(Value: WordBool); safecall;
    function Get_rcDate: WideString; safecall;
    procedure Set_rcDate(const Value: WideString); safecall;
    function Get_rcPeriod: Integer; safecall;
    procedure Set_rcPeriod(Value: Integer); safecall;
    function Get_rcYear: Integer; safecall;
    procedure Set_rcYear(Value: Integer); safecall;
    function Get_rcYourRef: WideString; safecall;
    procedure Set_rcYourRef(const Value: WideString); safecall;
    function Get_rcReason: Integer; safecall;
    procedure Set_rcReason(Value: Integer); safecall;
    function Get_rcQty: Double; safecall;
    procedure Set_rcQty(Value: Double); safecall;
    function Get_rcSetReturnedQty: WordBool; safecall;
    procedure Set_rcSetReturnedQty(Value: WordBool); safecall;
    function Get_rcAddToExistingReturn: WordBool; safecall;
    procedure Set_rcAddToExistingReturn(Value: WordBool); safecall;
    function Get_rcReturnOurRef: WideString; safecall;
    procedure Set_rcReturnOurRef(const Value: WideString); safecall;
    function Get_rcSupplier: WideString; safecall;
    procedure Set_rcSupplier(const Value: WideString); safecall;
    function Get_rcDirectCustomerRepair: WordBool; safecall;
    procedure Set_rcDirectCustomerRepair(Value: WordBool); safecall;
    function Get_rcLocation: WideString; safecall;
    procedure Set_rcLocation(const Value: WideString); safecall;
    property rcUnderWarranty: WordBool read Get_rcUnderWarranty write Set_rcUnderWarranty;
    property rcDate: WideString read Get_rcDate write Set_rcDate;
    property rcPeriod: Integer read Get_rcPeriod write Set_rcPeriod;
    property rcYear: Integer read Get_rcYear write Set_rcYear;
    property rcYourRef: WideString read Get_rcYourRef write Set_rcYourRef;
    property rcReason: Integer read Get_rcReason write Set_rcReason;
    property rcQty: Double read Get_rcQty write Set_rcQty;
    property rcSetReturnedQty: WordBool read Get_rcSetReturnedQty write Set_rcSetReturnedQty;
    property rcAddToExistingReturn: WordBool read Get_rcAddToExistingReturn write Set_rcAddToExistingReturn;
    property rcReturnOurRef: WideString read Get_rcReturnOurRef write Set_rcReturnOurRef;
    property rcSupplier: WideString read Get_rcSupplier write Set_rcSupplier;
    property rcDirectCustomerRepair: WordBool read Get_rcDirectCustomerRepair write Set_rcDirectCustomerRepair;
    property rcLocation: WideString read Get_rcLocation write Set_rcLocation;
  end;

// *********************************************************************//
// DispIntf:  IReturnCreateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCA8569B-7044-4F86-B221-F8423CCF8CC7}
// *********************************************************************//
  IReturnCreateDisp = dispinterface
    ['{DCA8569B-7044-4F86-B221-F8423CCF8CC7}']
    property rcUnderWarranty: WordBool dispid 15;
    property rcDate: WideString dispid 2;
    property rcPeriod: Integer dispid 3;
    property rcYear: Integer dispid 4;
    property rcYourRef: WideString dispid 5;
    property rcReason: Integer dispid 6;
    property rcQty: Double dispid 7;
    property rcSetReturnedQty: WordBool dispid 8;
    property rcAddToExistingReturn: WordBool dispid 9;
    property rcReturnOurRef: WideString dispid 10;
    property rcSupplier: WideString dispid 12;
    property rcDirectCustomerRepair: WordBool dispid 11;
    property rcLocation: WideString dispid 1;
  end;

// *********************************************************************//
// Interface: ITransactionReturnCreate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1428FDDD-1C9B-4A8E-91A1-D1B164FD0139}
// *********************************************************************//
  ITransactionReturnCreate = interface(IReturnCreate)
    ['{1428FDDD-1C9B-4A8E-91A1-D1B164FD0139}']
    function Execute: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITransactionReturnCreateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1428FDDD-1C9B-4A8E-91A1-D1B164FD0139}
// *********************************************************************//
  ITransactionReturnCreateDisp = dispinterface
    ['{1428FDDD-1C9B-4A8E-91A1-D1B164FD0139}']
    function Execute: Integer; dispid 16;
    property rcUnderWarranty: WordBool dispid 15;
    property rcDate: WideString dispid 2;
    property rcPeriod: Integer dispid 3;
    property rcYear: Integer dispid 4;
    property rcYourRef: WideString dispid 5;
    property rcReason: Integer dispid 6;
    property rcQty: Double dispid 7;
    property rcSetReturnedQty: WordBool dispid 8;
    property rcAddToExistingReturn: WordBool dispid 9;
    property rcReturnOurRef: WideString dispid 10;
    property rcSupplier: WideString dispid 12;
    property rcDirectCustomerRepair: WordBool dispid 11;
    property rcLocation: WideString dispid 1;
  end;

// *********************************************************************//
// Interface: ITransactionLineReturnCreate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F537BDC-E75E-4B59-9C3E-0A87516C7CC9}
// *********************************************************************//
  ITransactionLineReturnCreate = interface(IReturnCreate)
    ['{2F537BDC-E75E-4B59-9C3E-0A87516C7CC9}']
    function Execute: ITransaction; safecall;
    function Get_rcStatus: Integer; safecall;
    property rcStatus: Integer read Get_rcStatus;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLineReturnCreateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F537BDC-E75E-4B59-9C3E-0A87516C7CC9}
// *********************************************************************//
  ITransactionLineReturnCreateDisp = dispinterface
    ['{2F537BDC-E75E-4B59-9C3E-0A87516C7CC9}']
    function Execute: ITransaction; dispid 13;
    property rcStatus: Integer readonly dispid 14;
    property rcUnderWarranty: WordBool dispid 15;
    property rcDate: WideString dispid 2;
    property rcPeriod: Integer dispid 3;
    property rcYear: Integer dispid 4;
    property rcYourRef: WideString dispid 5;
    property rcReason: Integer dispid 6;
    property rcQty: Double dispid 7;
    property rcSetReturnedQty: WordBool dispid 8;
    property rcAddToExistingReturn: WordBool dispid 9;
    property rcReturnOurRef: WideString dispid 10;
    property rcSupplier: WideString dispid 12;
    property rcDirectCustomerRepair: WordBool dispid 11;
    property rcLocation: WideString dispid 1;
  end;

// *********************************************************************//
// Interface: IReturnAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1319E714-F451-4FC8-A67A-F7B14C1A8921}
// *********************************************************************//
  IReturnAction = interface(IDispatch)
    ['{1319E714-F451-4FC8-A67A-F7B14C1A8921}']
    function Execute: Integer; safecall;
    function Get_raReplacementDocType: TDocTypes; safecall;
    procedure Set_raReplacementDocType(Value: TDocTypes); safecall;
    function Get_raAction: TReturnActionType; safecall;
    procedure Set_raAction(Value: TReturnActionType); safecall;
    function Get_raApplyRestockingCharge: WordBool; safecall;
    procedure Set_raApplyRestockingCharge(Value: WordBool); safecall;
    function Get_raReturnedItems: TReturnedItemsDisposalType; safecall;
    procedure Set_raReturnedItems(Value: TReturnedItemsDisposalType); safecall;
    function Get_raApplyCurrentPrice: WordBool; safecall;
    procedure Set_raApplyCurrentPrice(Value: WordBool); safecall;
    function Get_raAllocCreditToOriginalDoc: WordBool; safecall;
    procedure Set_raAllocCreditToOriginalDoc(Value: WordBool); safecall;
    function Get_raBackToBack: IBackToBackOrder; safecall;
    property raReplacementDocType: TDocTypes read Get_raReplacementDocType write Set_raReplacementDocType;
    property raAction: TReturnActionType read Get_raAction write Set_raAction;
    property raApplyRestockingCharge: WordBool read Get_raApplyRestockingCharge write Set_raApplyRestockingCharge;
    property raReturnedItems: TReturnedItemsDisposalType read Get_raReturnedItems write Set_raReturnedItems;
    property raApplyCurrentPrice: WordBool read Get_raApplyCurrentPrice write Set_raApplyCurrentPrice;
    property raAllocCreditToOriginalDoc: WordBool read Get_raAllocCreditToOriginalDoc write Set_raAllocCreditToOriginalDoc;
    property raBackToBack: IBackToBackOrder read Get_raBackToBack;
  end;

// *********************************************************************//
// DispIntf:  IReturnActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1319E714-F451-4FC8-A67A-F7B14C1A8921}
// *********************************************************************//
  IReturnActionDisp = dispinterface
    ['{1319E714-F451-4FC8-A67A-F7B14C1A8921}']
    function Execute: Integer; dispid 1;
    property raReplacementDocType: TDocTypes dispid 2;
    property raAction: TReturnActionType dispid 3;
    property raApplyRestockingCharge: WordBool dispid 4;
    property raReturnedItems: TReturnedItemsDisposalType dispid 5;
    property raApplyCurrentPrice: WordBool dispid 6;
    property raAllocCreditToOriginalDoc: WordBool dispid 7;
    property raBackToBack: IBackToBackOrder readonly dispid 8;
  end;

// *********************************************************************//
// Interface: ISystemSetupReleaseCodes3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4390350-CCF4-4056-90BC-A5F22984C631}
// *********************************************************************//
  ISystemSetupReleaseCodes3 = interface(ISystemSetupReleaseCodes2)
    ['{E4390350-CCF4-4056-90BC-A5F22984C631}']
    function Get_rcGoodsReturns: TReleaseCodeStatus; safecall;
    property rcGoodsReturns: TReleaseCodeStatus read Get_rcGoodsReturns;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupReleaseCodes3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4390350-CCF4-4056-90BC-A5F22984C631}
// *********************************************************************//
  ISystemSetupReleaseCodes3Disp = dispinterface
    ['{E4390350-CCF4-4056-90BC-A5F22984C631}']
    property rcGoodsReturns: TReleaseCodeStatus readonly dispid 16;
    property rcTradeCounter: TReleaseCodeStatus readonly dispid 11;
    property rcWOPStandard: TReleaseCodeStatus readonly dispid 12;
    property rcWOPProfessional: TReleaseCodeStatus readonly dispid 13;
    property rcSentimail: TReleaseCodeStatus readonly dispid 14;
    property rcEnhancedSecurity: TReleaseCodeStatus readonly dispid 15;
    property rcCISRCT: TReleaseCodeStatus readonly dispid 20;
    property rcAppsAndVals: TReleaseCodeStatus readonly dispid 21;
    property rcFullStockControl: TReleaseCodeStatus readonly dispid 22;
    property rcVisualReportWriter: TReleaseCodeStatus readonly dispid 23;
    property rcAccountStockAnalysis: TReleaseCodeStatus readonly dispid 1;
    property rcCommitment: TReleaseCodeStatus readonly dispid 2;
    property rcEBusiness: TReleaseCodeStatus readonly dispid 3;
    property rcJobCosting: TReleaseCodeStatus readonly dispid 4;
    property rcMultiCurrency: TReleaseCodeStatus readonly dispid 5;
    property rcOLESave: TReleaseCodeStatus readonly dispid 6;
    property rcPaperless: TReleaseCodeStatus readonly dispid 7;
    property rcReportWriter: TReleaseCodeStatus readonly dispid 8;
    property rcTelesales: TReleaseCodeStatus readonly dispid 9;
    property rcToolkitDLL: TReleaseCodeStatus readonly dispid 10;
  end;

// *********************************************************************//
// Interface: IBankAccount
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B4B0430-239F-47A0-BDAA-46A59C24F707}
// *********************************************************************//
  IBankAccount = interface(IDispatch)
    ['{7B4B0430-239F-47A0-BDAA-46A59C24F707}']
    function Get_baGLCode: Integer; safecall;
    procedure Set_baGLCode(Value: Integer); safecall;
    function Get_baProduct: Integer; safecall;
    procedure Set_baProduct(Value: Integer); safecall;
    function Get_baOutputPath: WideString; safecall;
    procedure Set_baOutputPath(const Value: WideString); safecall;
    function Get_baPayFileName: WideString; safecall;
    procedure Set_baPayFileName(const Value: WideString); safecall;
    function Get_baRecFileName: WideString; safecall;
    procedure Set_baRecFileName(const Value: WideString); safecall;
    function Get_baStatementPath: WideString; safecall;
    procedure Set_baStatementPath(const Value: WideString); safecall;
    function Get_baSortCode: WideString; safecall;
    procedure Set_baSortCode(const Value: WideString); safecall;
    function Get_baAccountNo: WideString; safecall;
    procedure Set_baAccountNo(const Value: WideString); safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function BuildGLCodeIndex(glCode: Integer): WideString; safecall;
    function Get_baProductString: WideString; safecall;
    function Add: IBankAccount; safecall;
    function Update: IBankAccount; safecall;
    function Delete: Integer; safecall;
    function Clone: IBankAccount; safecall;
    function Get_Index: TBankAccountIndex; safecall;
    procedure Set_Index(Value: TBankAccountIndex); safecall;
    function Get_baStatement: IBankStatement; safecall;
    function Get_baUserID: WideString; safecall;
    procedure Set_baUserID(const Value: WideString); safecall;
    function Get_baReference: WideString; safecall;
    procedure Set_baReference(const Value: WideString); safecall;
    function Get_baLastDate: WideString; safecall;
    procedure Set_baLastDate(const Value: WideString); safecall;
    function Get_baOutputCurrency: Integer; safecall;
    procedure Set_baOutputCurrency(Value: Integer); safecall;
    property baGLCode: Integer read Get_baGLCode write Set_baGLCode;
    property baProduct: Integer read Get_baProduct write Set_baProduct;
    property baOutputPath: WideString read Get_baOutputPath write Set_baOutputPath;
    property baPayFileName: WideString read Get_baPayFileName write Set_baPayFileName;
    property baRecFileName: WideString read Get_baRecFileName write Set_baRecFileName;
    property baStatementPath: WideString read Get_baStatementPath write Set_baStatementPath;
    property baSortCode: WideString read Get_baSortCode write Set_baSortCode;
    property baAccountNo: WideString read Get_baAccountNo write Set_baAccountNo;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property baProductString: WideString read Get_baProductString;
    property Index: TBankAccountIndex read Get_Index write Set_Index;
    property baStatement: IBankStatement read Get_baStatement;
    property baUserID: WideString read Get_baUserID write Set_baUserID;
    property baReference: WideString read Get_baReference write Set_baReference;
    property baLastDate: WideString read Get_baLastDate write Set_baLastDate;
    property baOutputCurrency: Integer read Get_baOutputCurrency write Set_baOutputCurrency;
  end;

// *********************************************************************//
// DispIntf:  IBankAccountDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B4B0430-239F-47A0-BDAA-46A59C24F707}
// *********************************************************************//
  IBankAccountDisp = dispinterface
    ['{7B4B0430-239F-47A0-BDAA-46A59C24F707}']
    property baGLCode: Integer dispid 1;
    property baProduct: Integer dispid 2;
    property baOutputPath: WideString dispid 3;
    property baPayFileName: WideString dispid 4;
    property baRecFileName: WideString dispid 5;
    property baStatementPath: WideString dispid 6;
    property baSortCode: WideString dispid 7;
    property baAccountNo: WideString dispid 8;
    function Save: Integer; dispid 72;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildGLCodeIndex(glCode: Integer): WideString; dispid 9;
    property baProductString: WideString readonly dispid 10;
    function Add: IBankAccount; dispid 12;
    function Update: IBankAccount; dispid 13;
    function Delete: Integer; dispid 14;
    function Clone: IBankAccount; dispid 15;
    property Index: TBankAccountIndex dispid 16;
    property baStatement: IBankStatement readonly dispid 17;
    property baUserID: WideString dispid 18;
    property baReference: WideString dispid 19;
    property baLastDate: WideString dispid 11;
    property baOutputCurrency: Integer dispid 20;
  end;

// *********************************************************************//
// Interface: IBanking
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC0A55BA-BD9D-4EDB-AAAB-9CDFCCE343DE}
// *********************************************************************//
  IBanking = interface(IDispatch)
    ['{BC0A55BA-BD9D-4EDB-AAAB-9CDFCCE343DE}']
    function Get_BankAccount: IBankAccount; safecall;
    function Get_BankProducts: IBankProducts; safecall;
    property BankAccount: IBankAccount read Get_BankAccount;
    property BankProducts: IBankProducts read Get_BankProducts;
  end;

// *********************************************************************//
// DispIntf:  IBankingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC0A55BA-BD9D-4EDB-AAAB-9CDFCCE343DE}
// *********************************************************************//
  IBankingDisp = dispinterface
    ['{BC0A55BA-BD9D-4EDB-AAAB-9CDFCCE343DE}']
    property BankAccount: IBankAccount readonly dispid 1;
    property BankProducts: IBankProducts readonly dispid 3;
  end;

// *********************************************************************//
// Interface: IBankProducts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1E9492A-4CEB-460C-B514-6882AD946456}
// *********************************************************************//
  IBankProducts = interface(IDispatch)
    ['{A1E9492A-4CEB-460C-B514-6882AD946456}']
    function Get_bpCount: Integer; safecall;
    function Get_bpName(Index: Integer): WideString; safecall;
    function Get_bpStatementFormat(Index: Integer): WideString; safecall;
    property bpCount: Integer read Get_bpCount;
    property bpName[Index: Integer]: WideString read Get_bpName;
    property bpStatementFormat[Index: Integer]: WideString read Get_bpStatementFormat;
  end;

// *********************************************************************//
// DispIntf:  IBankProductsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1E9492A-4CEB-460C-B514-6882AD946456}
// *********************************************************************//
  IBankProductsDisp = dispinterface
    ['{A1E9492A-4CEB-460C-B514-6882AD946456}']
    property bpCount: Integer readonly dispid 1;
    property bpName[Index: Integer]: WideString readonly dispid 2;
    property bpStatementFormat[Index: Integer]: WideString readonly dispid 3;
  end;

// *********************************************************************//
// Interface: IGeneralLedger2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5FAB995-C1EA-4958-80D8-9AC7A505B0AB}
// *********************************************************************//
  IGeneralLedger2 = interface(IGeneralLedger)
    ['{F5FAB995-C1EA-4958-80D8-9AC7A505B0AB}']
    function Get_glClass: TGeneralLedgerClass; safecall;
    procedure Set_glClass(Value: TGeneralLedgerClass); safecall;
    function Get_glInactive: WordBool; safecall;
    procedure Set_glInactive(Value: WordBool); safecall;
    function Get_glForceJobCode: WordBool; safecall;
    procedure Set_glForceJobCode(Value: WordBool); safecall;
    property glClass: TGeneralLedgerClass read Get_glClass write Set_glClass;
    property glInactive: WordBool read Get_glInactive write Set_glInactive;
    property glForceJobCode: WordBool read Get_glForceJobCode write Set_glForceJobCode;
  end;

// *********************************************************************//
// DispIntf:  IGeneralLedger2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5FAB995-C1EA-4958-80D8-9AC7A505B0AB}
// *********************************************************************//
  IGeneralLedger2Disp = dispinterface
    ['{F5FAB995-C1EA-4958-80D8-9AC7A505B0AB}']
    property glClass: TGeneralLedgerClass dispid 22;
    property glInactive: WordBool dispid 23;
    property glForceJobCode: WordBool dispid 24;
    property glCode: Integer dispid 1;
    property glName: WideString dispid 2;
    property glParent: Integer dispid 3;
    property glType: TGeneralLedgerType dispid 4;
    property glAltCode: WideString dispid 5;
    property glPage: WordBool dispid 6;
    property glSubtotal: WordBool dispid 7;
    property glTotal: WordBool dispid 8;
    property glCarryFwd: Integer dispid 9;
    property glRevalue: WordBool dispid 10;
    property glCurrency: Smallint dispid 11;
    function Add: IGeneralLedger; dispid 12;
    function Update: IGeneralLedger; dispid 13;
    function Clone: IGeneralLedger; dispid 14;
    function Save: Integer; dispid 15;
    procedure Cancel; dispid 16;
    property glParentI: IGeneralLedger readonly dispid 18;
    function BuildCodeIndex(glCode: Integer): WideString; dispid 17;
    function BuildNameIndex(const Name: WideString): WideString; dispid 19;
    function BuildParentIndex(ParentCode: Integer; ChildCode: Integer): WideString; dispid 20;
    function BuildAltCodeIndex(const AltCode: WideString): WideString; dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TGeneralLedgerIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: IBankStatementLine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38AD7F52-A324-41A7-AA7F-595795A69F4D}
// *********************************************************************//
  IBankStatementLine = interface(IDispatch)
    ['{38AD7F52-A324-41A7-AA7F-595795A69F4D}']
    function Get_bslLineDate: WideString; safecall;
    procedure Set_bslLineDate(const Value: WideString); safecall;
    function Get_bslReference: WideString; safecall;
    procedure Set_bslReference(const Value: WideString); safecall;
    function Get_bslValue: Double; safecall;
    procedure Set_bslValue(Value: Double); safecall;
    function Get_Index: TBankStatementLineIndex; safecall;
    procedure Set_Index(Value: TBankStatementLineIndex); safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Add: IBankStatementLine; safecall;
    function Update: IBankStatementLine; safecall;
    function Delete: Integer; safecall;
    function Clone: IBankStatementLine; safecall;
    function BuildLineDateIndex(const LineDate: WideString): WideString; safecall;
    function BuildLineRefIndex(const LineRef: WideString): WideString; safecall;
    function Get_bslReference2: WideString; safecall;
    procedure Set_bslReference2(const Value: WideString); safecall;
    function Get_bslFolio: Integer; safecall;
    function Get_bslLineNo: Integer; safecall;
    procedure Set_bslLineNo(Value: Integer); safecall;
    function Get_bslStatus: TBankStatementLineStatus; safecall;
    procedure Set_bslStatus(Value: TBankStatementLineStatus); safecall;
    property bslLineDate: WideString read Get_bslLineDate write Set_bslLineDate;
    property bslReference: WideString read Get_bslReference write Set_bslReference;
    property bslValue: Double read Get_bslValue write Set_bslValue;
    property Index: TBankStatementLineIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property bslReference2: WideString read Get_bslReference2 write Set_bslReference2;
    property bslFolio: Integer read Get_bslFolio;
    property bslLineNo: Integer read Get_bslLineNo write Set_bslLineNo;
    property bslStatus: TBankStatementLineStatus read Get_bslStatus write Set_bslStatus;
  end;

// *********************************************************************//
// DispIntf:  IBankStatementLineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38AD7F52-A324-41A7-AA7F-595795A69F4D}
// *********************************************************************//
  IBankStatementLineDisp = dispinterface
    ['{38AD7F52-A324-41A7-AA7F-595795A69F4D}']
    property bslLineDate: WideString dispid 1;
    property bslReference: WideString dispid 2;
    property bslValue: Double dispid 3;
    property Index: TBankStatementLineIndex dispid 4;
    function Save: Integer; dispid 72;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IBankStatementLine; dispid 12;
    function Update: IBankStatementLine; dispid 13;
    function Delete: Integer; dispid 14;
    function Clone: IBankStatementLine; dispid 15;
    function BuildLineDateIndex(const LineDate: WideString): WideString; dispid 5;
    function BuildLineRefIndex(const LineRef: WideString): WideString; dispid 6;
    property bslReference2: WideString dispid 7;
    property bslFolio: Integer readonly dispid 8;
    property bslLineNo: Integer dispid 9;
    property bslStatus: TBankStatementLineStatus dispid 10;
  end;

// *********************************************************************//
// Interface: IBankStatement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADAF0232-3F91-4360-99F9-8BC3B594FCC2}
// *********************************************************************//
  IBankStatement = interface(IDispatch)
    ['{ADAF0232-3F91-4360-99F9-8BC3B594FCC2}']
    function Get_bsDate: WideString; safecall;
    procedure Set_bsDate(const Value: WideString); safecall;
    function Get_bsReference: WideString; safecall;
    procedure Set_bsReference(const Value: WideString); safecall;
    function Get_bsStatus: TBankStatementStatus; safecall;
    procedure Set_bsStatus(Value: TBankStatementStatus); safecall;
    function Get_Index: TBankStatementIndex; safecall;
    procedure Set_Index(Value: TBankStatementIndex); safecall;
    function Save: Integer; safecall;
    procedure Cancel; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function Add: IBankStatement; safecall;
    function Update: IBankStatement; safecall;
    function Delete: Integer; safecall;
    function Clone: IBankStatement; safecall;
    function Get_bsStatementLine: IBankStatementLine; safecall;
    function BuildReferenceIndex(const Reference: WideString): WideString; safecall;
    function BuildStatusIndex(Status: TBankStatementStatus): WideString; safecall;
    function Get_bsFolio: Integer; safecall;
    function Get_bsBalance: Double; safecall;
    function BuildDateAndFolioIndex(const ADate: WideString; Folio: Integer): WideString; safecall;
    property bsDate: WideString read Get_bsDate write Set_bsDate;
    property bsReference: WideString read Get_bsReference write Set_bsReference;
    property bsStatus: TBankStatementStatus read Get_bsStatus write Set_bsStatus;
    property Index: TBankStatementIndex read Get_Index write Set_Index;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
    property bsStatementLine: IBankStatementLine read Get_bsStatementLine;
    property bsFolio: Integer read Get_bsFolio;
    property bsBalance: Double read Get_bsBalance;
  end;

// *********************************************************************//
// DispIntf:  IBankStatementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADAF0232-3F91-4360-99F9-8BC3B594FCC2}
// *********************************************************************//
  IBankStatementDisp = dispinterface
    ['{ADAF0232-3F91-4360-99F9-8BC3B594FCC2}']
    property bsDate: WideString dispid 1;
    property bsReference: WideString dispid 2;
    property bsStatus: TBankStatementStatus dispid 3;
    property Index: TBankStatementIndex dispid 4;
    function Save: Integer; dispid 72;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IBankStatement; dispid 12;
    function Update: IBankStatement; dispid 13;
    function Delete: Integer; dispid 14;
    function Clone: IBankStatement; dispid 15;
    property bsStatementLine: IBankStatementLine readonly dispid 5;
    function BuildReferenceIndex(const Reference: WideString): WideString; dispid 7;
    function BuildStatusIndex(Status: TBankStatementStatus): WideString; dispid 8;
    property bsFolio: Integer readonly dispid 9;
    property bsBalance: Double readonly dispid 10;
    function BuildDateAndFolioIndex(const ADate: WideString; Folio: Integer): WideString; dispid 11;
  end;

// *********************************************************************//
// Interface: IAutoTransactionSettings2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE5C886E-53A9-48DD-94E1-562B5CF8F839}
// *********************************************************************//
  IAutoTransactionSettings2 = interface(IAutoTransactionSettings)
    ['{AE5C886E-53A9-48DD-94E1-562B5CF8F839}']
    function Get_atKeepDate: WordBool; safecall;
    procedure Set_atKeepDate(Value: WordBool); safecall;
    property atKeepDate: WordBool read Get_atKeepDate write Set_atKeepDate;
  end;

// *********************************************************************//
// DispIntf:  IAutoTransactionSettings2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE5C886E-53A9-48DD-94E1-562B5CF8F839}
// *********************************************************************//
  IAutoTransactionSettings2Disp = dispinterface
    ['{AE5C886E-53A9-48DD-94E1-562B5CF8F839}']
    property atKeepDate: WordBool dispid 11;
    property atIncrementType: TAutoIncrementType dispid 1;
    property atIncrement: Integer dispid 2;
    property atAutoCreateOnPost: WordBool dispid 3;
    property atStartDate: WideString dispid 4;
    property atStartPeriod: Integer dispid 5;
    property atStartYear: Integer dispid 6;
    property atEndDate: WideString dispid 7;
    property atEndPeriod: Integer dispid 8;
    property atEndYear: Integer dispid 9;
    property atAutoTransaction: WordBool dispid 10;
  end;

// *********************************************************************//
// Interface: IToolkitRecord
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F50A838-E7BA-4C4A-BC9A-EC2D26C67D12}
// *********************************************************************//
  IToolkitRecord = interface(IDispatch)
    ['{4F50A838-E7BA-4C4A-BC9A-EC2D26C67D12}']
    function GetData: WideString; safecall;
    function ConvertData(const DataRec: WideString): WideString; safecall;
  end;

// *********************************************************************//
// DispIntf:  IToolkitRecordDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F50A838-E7BA-4C4A-BC9A-EC2D26C67D12}
// *********************************************************************//
  IToolkitRecordDisp = dispinterface
    ['{4F50A838-E7BA-4C4A-BC9A-EC2D26C67D12}']
    function GetData: WideString; dispid 1;
    function ConvertData(const DataRec: WideString): WideString; dispid 2;
  end;

// *********************************************************************//
// Interface: IBankReconciliationHeader
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DACCD3BB-ECBF-4C1F-BC0A-4DA045B0D053}
// *********************************************************************//
  IBankReconciliationHeader = interface(IDispatch)
    ['{DACCD3BB-ECBF-4C1F-BC0A-4DA045B0D053}']
    function Get_brhStatementDate: WideString; safecall;
    procedure Set_brhStatementDate(const Value: WideString); safecall;
    function Get_brhStatementRef: WideString; safecall;
    procedure Set_brhStatementRef(const Value: WideString); safecall;
    function Get_brhBankAccount: WideString; safecall;
    procedure Set_brhBankAccount(const Value: WideString); safecall;
    function Get_brhCurrency: Integer; safecall;
    procedure Set_brhCurrency(Value: Integer); safecall;
    function Get_brhUserID: Integer; safecall;
    procedure Set_brhUserID(Value: Integer); safecall;
    function Get_brhDateCreated: WideString; safecall;
    function Get_brhTimeCreated: WideString; safecall;
    function Get_brhStatementBalance: Double; safecall;
    procedure Set_brhStatementBalance(Value: Double); safecall;
    function Get_brhOpeningBalance: Double; safecall;
    procedure Set_brhOpeningBalance(Value: Double); safecall;
    function Get_brhClosingBalance: Double; safecall;
    procedure Set_brhClosingBalance(Value: Double); safecall;
    function Get_brhStatus: Integer; safecall;
    procedure Set_brhStatus(Value: Integer); safecall;
    function Get_brhGLCode: Integer; safecall;
    procedure Set_brhGLCode(Value: Integer); safecall;
    function Get_brhStatementFolio: Integer; safecall;
    function Get_brhDate: WideString; safecall;
    procedure Set_brhDate(const Value: WideString); safecall;
    function Get_brhReference: WideString; safecall;
    procedure Set_brhReference(const Value: WideString); safecall;
    function Get_brhInitialSequence: Integer; safecall;
    procedure Set_brhInitialSequence(Value: Integer); safecall;
    property brhStatementDate: WideString read Get_brhStatementDate write Set_brhStatementDate;
    property brhStatementRef: WideString read Get_brhStatementRef write Set_brhStatementRef;
    property brhBankAccount: WideString read Get_brhBankAccount write Set_brhBankAccount;
    property brhCurrency: Integer read Get_brhCurrency write Set_brhCurrency;
    property brhUserID: Integer read Get_brhUserID write Set_brhUserID;
    property brhDateCreated: WideString read Get_brhDateCreated;
    property brhTimeCreated: WideString read Get_brhTimeCreated;
    property brhStatementBalance: Double read Get_brhStatementBalance write Set_brhStatementBalance;
    property brhOpeningBalance: Double read Get_brhOpeningBalance write Set_brhOpeningBalance;
    property brhClosingBalance: Double read Get_brhClosingBalance write Set_brhClosingBalance;
    property brhStatus: Integer read Get_brhStatus write Set_brhStatus;
    property brhGLCode: Integer read Get_brhGLCode write Set_brhGLCode;
    property brhStatementFolio: Integer read Get_brhStatementFolio;
    property brhDate: WideString read Get_brhDate write Set_brhDate;
    property brhReference: WideString read Get_brhReference write Set_brhReference;
    property brhInitialSequence: Integer read Get_brhInitialSequence write Set_brhInitialSequence;
  end;

// *********************************************************************//
// DispIntf:  IBankReconciliationHeaderDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DACCD3BB-ECBF-4C1F-BC0A-4DA045B0D053}
// *********************************************************************//
  IBankReconciliationHeaderDisp = dispinterface
    ['{DACCD3BB-ECBF-4C1F-BC0A-4DA045B0D053}']
    property brhStatementDate: WideString dispid 1;
    property brhStatementRef: WideString dispid 2;
    property brhBankAccount: WideString dispid 3;
    property brhCurrency: Integer dispid 4;
    property brhUserID: Integer dispid 5;
    property brhDateCreated: WideString readonly dispid 6;
    property brhTimeCreated: WideString readonly dispid 7;
    property brhStatementBalance: Double dispid 10;
    property brhOpeningBalance: Double dispid 11;
    property brhClosingBalance: Double dispid 12;
    property brhStatus: Integer dispid 13;
    property brhGLCode: Integer dispid 14;
    property brhStatementFolio: Integer readonly dispid 15;
    property brhDate: WideString dispid 16;
    property brhReference: WideString dispid 17;
    property brhInitialSequence: Integer dispid 18;
  end;

// *********************************************************************//
// Interface: IBankReconciliationDetail
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FA404081-38FC-474D-8288-0E82FC7AA9CB}
// *********************************************************************//
  IBankReconciliationDetail = interface(IDispatch)
    ['{FA404081-38FC-474D-8288-0E82FC7AA9CB}']
    function Get_brdPaymentRef: WideString; safecall;
    procedure Set_brdPaymentRef(const Value: WideString); safecall;
    function Get_brdLineDate: WideString; safecall;
    procedure Set_brdLineDate(const Value: WideString); safecall;
    function Get_brdMatchingOurRef: WideString; safecall;
    procedure Set_brdMatchingOurRef(const Value: WideString); safecall;
    function Get_brdValue: Double; safecall;
    procedure Set_brdValue(Value: Double); safecall;
    function Get_brdLineNo: Integer; safecall;
    procedure Set_brdLineNo(Value: Integer); safecall;
    function Get_brdStatementLineNo: Integer; safecall;
    procedure Set_brdStatementLineNo(Value: Integer); safecall;
    function Get_brdAcCode: WideString; safecall;
    procedure Set_brdAcCode(const Value: WideString); safecall;
    function Get_brdPeriod: Integer; safecall;
    procedure Set_brdPeriod(Value: Integer); safecall;
    function Get_brdYear: Integer; safecall;
    procedure Set_brdYear(Value: Integer); safecall;
    function Get_brdDailyRate: Double; safecall;
    procedure Set_brdDailyRate(Value: Double); safecall;
    function Get_brdCompanyRate: Double; safecall;
    procedure Set_brdCompanyRate(Value: Double); safecall;
    function Get_brdMatchingYourRef: WideString; safecall;
    procedure Set_brdMatchingYourRef(const Value: WideString); safecall;
    function Get_brdCostCentre: WideString; safecall;
    procedure Set_brdCostCentre(const Value: WideString); safecall;
    function Get_brdDepartment: WideString; safecall;
    procedure Set_brdDepartment(const Value: WideString); safecall;
    function Get_brdGLCode: Integer; safecall;
    procedure Set_brdGLCode(Value: Integer); safecall;
    function Get_brdFolio: Integer; safecall;
    function Get_brdVATCode: WideString; safecall;
    procedure Set_brdVATCode(const Value: WideString); safecall;
    function Get_brdVatAmount: Double; safecall;
    procedure Set_brdVatAmount(Value: Double); safecall;
    function Get_brdTransDate: WideString; safecall;
    procedure Set_brdTransDate(const Value: WideString); safecall;
    function Get_brdLineStatus: Integer; safecall;
    procedure Set_brdLineStatus(Value: Integer); safecall;
    property brdPaymentRef: WideString read Get_brdPaymentRef write Set_brdPaymentRef;
    property brdLineDate: WideString read Get_brdLineDate write Set_brdLineDate;
    property brdMatchingOurRef: WideString read Get_brdMatchingOurRef write Set_brdMatchingOurRef;
    property brdValue: Double read Get_brdValue write Set_brdValue;
    property brdLineNo: Integer read Get_brdLineNo write Set_brdLineNo;
    property brdStatementLineNo: Integer read Get_brdStatementLineNo write Set_brdStatementLineNo;
    property brdAcCode: WideString read Get_brdAcCode write Set_brdAcCode;
    property brdPeriod: Integer read Get_brdPeriod write Set_brdPeriod;
    property brdYear: Integer read Get_brdYear write Set_brdYear;
    property brdDailyRate: Double read Get_brdDailyRate write Set_brdDailyRate;
    property brdCompanyRate: Double read Get_brdCompanyRate write Set_brdCompanyRate;
    property brdMatchingYourRef: WideString read Get_brdMatchingYourRef write Set_brdMatchingYourRef;
    property brdCostCentre: WideString read Get_brdCostCentre write Set_brdCostCentre;
    property brdDepartment: WideString read Get_brdDepartment write Set_brdDepartment;
    property brdGLCode: Integer read Get_brdGLCode write Set_brdGLCode;
    property brdFolio: Integer read Get_brdFolio;
    property brdVATCode: WideString read Get_brdVATCode write Set_brdVATCode;
    property brdVatAmount: Double read Get_brdVatAmount write Set_brdVatAmount;
    property brdTransDate: WideString read Get_brdTransDate write Set_brdTransDate;
    property brdLineStatus: Integer read Get_brdLineStatus write Set_brdLineStatus;
  end;

// *********************************************************************//
// DispIntf:  IBankReconciliationDetailDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FA404081-38FC-474D-8288-0E82FC7AA9CB}
// *********************************************************************//
  IBankReconciliationDetailDisp = dispinterface
    ['{FA404081-38FC-474D-8288-0E82FC7AA9CB}']
    property brdPaymentRef: WideString dispid 1;
    property brdLineDate: WideString dispid 2;
    property brdMatchingOurRef: WideString dispid 3;
    property brdValue: Double dispid 4;
    property brdLineNo: Integer dispid 5;
    property brdStatementLineNo: Integer dispid 6;
    property brdAcCode: WideString dispid 7;
    property brdPeriod: Integer dispid 8;
    property brdYear: Integer dispid 9;
    property brdDailyRate: Double dispid 10;
    property brdCompanyRate: Double dispid 11;
    property brdMatchingYourRef: WideString dispid 12;
    property brdCostCentre: WideString dispid 13;
    property brdDepartment: WideString dispid 14;
    property brdGLCode: Integer dispid 16;
    property brdFolio: Integer readonly dispid 17;
    property brdVATCode: WideString dispid 18;
    property brdVatAmount: Double dispid 19;
    property brdTransDate: WideString dispid 20;
    property brdLineStatus: Integer dispid 21;
  end;

// *********************************************************************//
// Interface: IConvertList2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {556AAC23-9D51-46E5-A07E-65DCC79A6193}
// *********************************************************************//
  IConvertList2 = interface(IConvertList)
    ['{556AAC23-9D51-46E5-A07E-65DCC79A6193}']
    function Get_clDate: WideString; safecall;
    procedure Set_clDate(const Value: WideString); safecall;
    property clDate: WideString read Get_clDate write Set_clDate;
  end;

// *********************************************************************//
// DispIntf:  IConvertList2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {556AAC23-9D51-46E5-A07E-65DCC79A6193}
// *********************************************************************//
  IConvertList2Disp = dispinterface
    ['{556AAC23-9D51-46E5-A07E-65DCC79A6193}']
    property clDate: WideString dispid 9;
    property clConversions[Index: Integer]: IConvert readonly dispid 1;
    property clCount: Integer readonly dispid 2;
    procedure Add(const OurRef: WideString); dispid 3;
    procedure Delete(Index: Integer); dispid 4;
    procedure Clear; dispid 5;
    function Check(var ProblemIndex: Integer): Integer; dispid 6;
    function Execute: Integer; dispid 7;
    property clConsolidate: WordBool dispid 8;
  end;

// *********************************************************************//
// Interface: ICCDept2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B6903A2-7C5C-48E6-A548-080DF0003302}
// *********************************************************************//
  ICCDept2 = interface(ICCDept)
    ['{8B6903A2-7C5C-48E6-A548-080DF0003302}']
    function Get_cdInactive: WordBool; safecall;
    procedure Set_cdInactive(Value: WordBool); safecall;
    function Save: Integer; safecall;
    function Add: ICCDept2; safecall;
    function Update: ICCDept2; safecall;
    procedure Cancel; safecall;
    function Get_cdCodeW: WideString; safecall;
    procedure Set_cdCodeW(const Value: WideString); safecall;
    function Get_cdNameW: WideString; safecall;
    procedure Set_cdNameW(const Value: WideString); safecall;
    property cdInactive: WordBool read Get_cdInactive write Set_cdInactive;
    property cdCodeW: WideString read Get_cdCodeW write Set_cdCodeW;
    property cdNameW: WideString read Get_cdNameW write Set_cdNameW;
  end;

// *********************************************************************//
// DispIntf:  ICCDept2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B6903A2-7C5C-48E6-A548-080DF0003302}
// *********************************************************************//
  ICCDept2Disp = dispinterface
    ['{8B6903A2-7C5C-48E6-A548-080DF0003302}']
    property cdInactive: WordBool dispid 6;
    function Save: Integer; dispid 11;
    function Add: ICCDept2; dispid 13;
    function Update: ICCDept2; dispid 15;
    procedure Cancel; dispid 16;
    property cdCodeW: WideString dispid 7;
    property cdNameW: WideString dispid 8;
    property cdCode: WideString readonly dispid 1;
    property cdName: WideString readonly dispid 2;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 3;
    function BuildNameIndex(const Name: WideString): WideString; dispid 4;
    function Clone: ICCDept; dispid 5;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TCCDeptIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: ISystemSetup5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D07EF7C6-DF54-4A53-9D41-274A8E213FB4}
// *********************************************************************//
  ISystemSetup5 = interface(ISystemSetup4)
    ['{D07EF7C6-DF54-4A53-9D41-274A8E213FB4}']
    function Get_ssEnforceGLClasses: WordBool; safecall;
    property ssEnforceGLClasses: WordBool read Get_ssEnforceGLClasses;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetup5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D07EF7C6-DF54-4A53-9D41-274A8E213FB4}
// *********************************************************************//
  ISystemSetup5Disp = dispinterface
    ['{D07EF7C6-DF54-4A53-9D41-274A8E213FB4}']
    property ssEnforceGLClasses: WordBool readonly dispid 122;
    property ssReturnLineReason: ISystemSetupReturnLineReason readonly dispid 121;
    property ssFilterByBinLocation: WordBool readonly dispid 116;
    property ssKeepBinHistory: WordBool readonly dispid 117;
    property ssBinMask: WideString readonly dispid 118;
    property ssBudgetByCCDeptEx: TBudgetByCCDeptType readonly dispid 119;
    property ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType readonly dispid 120;
    property ssWOPDisableWIP: WordBool readonly dispid 109;
    property ssWORAllocStockOnPick: WordBool readonly dispid 110;
    property ssWORCopyStkNotes: TWOPStockNotesType readonly dispid 111;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet readonly dispid 114;
    property ssCISSetup: ISystemSetupCIS readonly dispid 115;
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: IEmployee5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F838A2E9-B451-4B49-A171-8FC0A9C6DD60}
// *********************************************************************//
  IEmployee5 = interface(IEmployee4)
    ['{F838A2E9-B451-4B49-A171-8FC0A9C6DD60}']
    function Get_emUTRCode: WideString; safecall;
    procedure Set_emUTRCode(const Value: WideString); safecall;
    function Get_emVerificationNo: WideString; safecall;
    procedure Set_emVerificationNo(const Value: WideString); safecall;
    function Get_emTagged: WordBool; safecall;
    procedure Set_emTagged(Value: WordBool); safecall;
    function Get_emContractorType: TContractorType; safecall;
    procedure Set_emContractorType(Value: TContractorType); safecall;
    property emUTRCode: WideString read Get_emUTRCode write Set_emUTRCode;
    property emVerificationNo: WideString read Get_emVerificationNo write Set_emVerificationNo;
    property emTagged: WordBool read Get_emTagged write Set_emTagged;
    property emContractorType: TContractorType read Get_emContractorType write Set_emContractorType;
  end;

// *********************************************************************//
// DispIntf:  IEmployee5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F838A2E9-B451-4B49-A171-8FC0A9C6DD60}
// *********************************************************************//
  IEmployee5Disp = dispinterface
    ['{F838A2E9-B451-4B49-A171-8FC0A9C6DD60}']
    property emUTRCode: WideString dispid 36;
    property emVerificationNo: WideString dispid 37;
    property emTagged: WordBool dispid 38;
    property emContractorType: TContractorType dispid 39;
    property emTimeRateRules: TTimeRateRulesType dispid 35;
    property emLabourViaPL: WordBool dispid 34;
    function Update: IEmployee2; dispid 23;
    function Add: IEmployee2; dispid 24;
    function Save: Integer; dispid 25;
    procedure Cancel; dispid 26;
    property emSelfBilling: WordBool dispid 27;
    property emGroupCertificate: WordBool dispid 28;
    property emCertificateType: TEmployeeCertificateType dispid 29;
    property emUserField3: WideString dispid 30;
    property emUserField4: WideString dispid 31;
    property emNISerialNo: WideString dispid 32;
    property emLinks: ILinks readonly dispid 33;
    property emCode: WideString dispid 1;
    property emSupplier: WideString dispid 2;
    property emName: WideString dispid 3;
    property emAddress: IAddress readonly dispid 4;
    property emPhone: WideString dispid 5;
    property emFax: WideString dispid 6;
    property emMobile: WideString dispid 7;
    property emType: TEmployeeType dispid 8;
    property emPayrollNumber: WideString dispid 9;
    property emCertificateNumber: WideString dispid 10;
    property emCertificateExpiry: WideString dispid 11;
    property emUserField1: WideString dispid 12;
    property emUserField2: WideString dispid 13;
    property emTimeRates: ITimeRates readonly dispid 14;
    property emCostCentre: WideString dispid 15;
    property emDepartment: WideString dispid 16;
    property emOwnTimeRatesOnly: WordBool dispid 17;
    function Clone: IEmployee; dispid 18;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 19;
    function BuildSupplierIndex(const Supplier: WideString): WideString; dispid 20;
    property Index: TEmployeeIndex dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property emNotes: INotes readonly dispid 22;
  end;

// *********************************************************************//
// Interface: ISystemSetupReleaseCodes4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B1991B6-0E7E-4FFD-B11E-AD3156B2035A}
// *********************************************************************//
  ISystemSetupReleaseCodes4 = interface(ISystemSetupReleaseCodes3)
    ['{9B1991B6-0E7E-4FFD-B11E-AD3156B2035A}']
    function Get_rcEBanking: TReleaseCodeStatus; safecall;
    property rcEBanking: TReleaseCodeStatus read Get_rcEBanking;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupReleaseCodes4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B1991B6-0E7E-4FFD-B11E-AD3156B2035A}
// *********************************************************************//
  ISystemSetupReleaseCodes4Disp = dispinterface
    ['{9B1991B6-0E7E-4FFD-B11E-AD3156B2035A}']
    property rcEBanking: TReleaseCodeStatus readonly dispid 17;
    property rcGoodsReturns: TReleaseCodeStatus readonly dispid 16;
    property rcTradeCounter: TReleaseCodeStatus readonly dispid 11;
    property rcWOPStandard: TReleaseCodeStatus readonly dispid 12;
    property rcWOPProfessional: TReleaseCodeStatus readonly dispid 13;
    property rcSentimail: TReleaseCodeStatus readonly dispid 14;
    property rcEnhancedSecurity: TReleaseCodeStatus readonly dispid 15;
    property rcCISRCT: TReleaseCodeStatus readonly dispid 20;
    property rcAppsAndVals: TReleaseCodeStatus readonly dispid 21;
    property rcFullStockControl: TReleaseCodeStatus readonly dispid 22;
    property rcVisualReportWriter: TReleaseCodeStatus readonly dispid 23;
    property rcAccountStockAnalysis: TReleaseCodeStatus readonly dispid 1;
    property rcCommitment: TReleaseCodeStatus readonly dispid 2;
    property rcEBusiness: TReleaseCodeStatus readonly dispid 3;
    property rcJobCosting: TReleaseCodeStatus readonly dispid 4;
    property rcMultiCurrency: TReleaseCodeStatus readonly dispid 5;
    property rcOLESave: TReleaseCodeStatus readonly dispid 6;
    property rcPaperless: TReleaseCodeStatus readonly dispid 7;
    property rcReportWriter: TReleaseCodeStatus readonly dispid 8;
    property rcTelesales: TReleaseCodeStatus readonly dispid 9;
    property rcToolkitDLL: TReleaseCodeStatus readonly dispid 10;
  end;

// *********************************************************************//
// Interface: ISystemSetupCIS3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D30A0BDE-4D94-42A1-A4F4-64ACA657B183}
// *********************************************************************//
  ISystemSetupCIS3 = interface(ISystemSetupCIS2)
    ['{D30A0BDE-4D94-42A1-A4F4-64ACA657B183}']
    function Get_cisCTR: WideString; safecall;
    function Get_cisUTR: WideString; safecall;
    function Get_cisContractorNINO: WideString; safecall;
    function Get_cisACOfficeRef: WideString; safecall;
    function Get_cisTaxOfficeNo: WideString; safecall;
    function Get_cisTaxOfficeRef: WideString; safecall;
    function Get_cisSenderID: WideString; safecall;
    function Get_cisSenderAuthentication: WideString; safecall;
    property cisCTR: WideString read Get_cisCTR;
    property cisUTR: WideString read Get_cisUTR;
    property cisContractorNINO: WideString read Get_cisContractorNINO;
    property cisACOfficeRef: WideString read Get_cisACOfficeRef;
    property cisTaxOfficeNo: WideString read Get_cisTaxOfficeNo;
    property cisTaxOfficeRef: WideString read Get_cisTaxOfficeRef;
    property cisSenderID: WideString read Get_cisSenderID;
    property cisSenderAuthentication: WideString read Get_cisSenderAuthentication;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupCIS3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D30A0BDE-4D94-42A1-A4F4-64ACA657B183}
// *********************************************************************//
  ISystemSetupCIS3Disp = dispinterface
    ['{D30A0BDE-4D94-42A1-A4F4-64ACA657B183}']
    property cisCTR: WideString readonly dispid 12;
    property cisUTR: WideString readonly dispid 13;
    property cisContractorNINO: WideString readonly dispid 14;
    property cisACOfficeRef: WideString readonly dispid 15;
    property cisTaxOfficeNo: WideString readonly dispid 16;
    property cisTaxOfficeRef: WideString readonly dispid 17;
    property cisSenderID: WideString readonly dispid 18;
    property cisSenderAuthentication: WideString readonly dispid 19;
    property cisContractorCertType: TCISCertificateType dispid 9;
    property cisContractorCertRef: WideString dispid 10;
    property cisContractorCertExpiry: WideString dispid 11;
    property cisInterval: Integer readonly dispid 1;
    property cisAutoSetPeriod: WordBool readonly dispid 2;
    property cisReturnDate: WideString readonly dispid 3;
    property cisTaxRef: WideString readonly dispid 4;
    property cisDefaultVatCode: WideString readonly dispid 5;
    property cisFolioNumber: Integer readonly dispid 6;
    property cisRate[TaxType: TCISTaxType]: ICISRate readonly dispid 7;
    property cisVoucherCounter[VoucherType: TCISVoucherType]: ICISVoucherCounter readonly dispid 8;
  end;

// *********************************************************************//
// Interface: ISystemSetupCIS4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47DE4A74-1A40-40DB-82DD-2444D9A04D8E}
// *********************************************************************//
  ISystemSetupCIS4 = interface(ISystemSetupCIS3)
    ['{47DE4A74-1A40-40DB-82DD-2444D9A04D8E}']
    function Get_cisTestMode: WordBool; safecall;
    function Get_cisSubmitterType: TCISSubmitterType; safecall;
    property cisTestMode: WordBool read Get_cisTestMode;
    property cisSubmitterType: TCISSubmitterType read Get_cisSubmitterType;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupCIS4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47DE4A74-1A40-40DB-82DD-2444D9A04D8E}
// *********************************************************************//
  ISystemSetupCIS4Disp = dispinterface
    ['{47DE4A74-1A40-40DB-82DD-2444D9A04D8E}']
    property cisTestMode: WordBool readonly dispid 20;
    property cisSubmitterType: TCISSubmitterType readonly dispid 21;
    property cisCTR: WideString readonly dispid 12;
    property cisUTR: WideString readonly dispid 13;
    property cisContractorNINO: WideString readonly dispid 14;
    property cisACOfficeRef: WideString readonly dispid 15;
    property cisTaxOfficeNo: WideString readonly dispid 16;
    property cisTaxOfficeRef: WideString readonly dispid 17;
    property cisSenderID: WideString readonly dispid 18;
    property cisSenderAuthentication: WideString readonly dispid 19;
    property cisContractorCertType: TCISCertificateType dispid 9;
    property cisContractorCertRef: WideString dispid 10;
    property cisContractorCertExpiry: WideString dispid 11;
    property cisInterval: Integer readonly dispid 1;
    property cisAutoSetPeriod: WordBool readonly dispid 2;
    property cisReturnDate: WideString readonly dispid 3;
    property cisTaxRef: WideString readonly dispid 4;
    property cisDefaultVatCode: WideString readonly dispid 5;
    property cisFolioNumber: Integer readonly dispid 6;
    property cisRate[TaxType: TCISTaxType]: ICISRate readonly dispid 7;
    property cisVoucherCounter[VoucherType: TCISVoucherType]: ICISVoucherCounter readonly dispid 8;
  end;

// *********************************************************************//
// Interface: ISystemSetupPaperless3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C88CBE75-D21A-45B2-B4E7-5A509180F3D2}
// *********************************************************************//
  ISystemSetupPaperless3 = interface(ISystemSetupPaperless2)
    ['{C88CBE75-D21A-45B2-B4E7-5A509180F3D2}']
    function Get_ssEmailAttachmentPrinter: WideString; safecall;
    function Get_ssFaxPrinter: WideString; safecall;
    property ssEmailAttachmentPrinter: WideString read Get_ssEmailAttachmentPrinter;
    property ssFaxPrinter: WideString read Get_ssFaxPrinter;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupPaperless3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C88CBE75-D21A-45B2-B4E7-5A509180F3D2}
// *********************************************************************//
  ISystemSetupPaperless3Disp = dispinterface
    ['{C88CBE75-D21A-45B2-B4E7-5A509180F3D2}']
    property ssEmailAttachmentPrinter: WideString readonly dispid 13;
    property ssFaxPrinter: WideString readonly dispid 14;
    property ssCompanyEmailSignature: WideString readonly dispid 11;
    property ssCompanyFaxSignature: WideString readonly dispid 12;
    property ssYourEmailName: WideString readonly dispid 1;
    property ssYourEmailAddress: WideString readonly dispid 2;
    property ssSMTPServer: WideString readonly dispid 3;
    property ssDefaultEmailPriority: TEmailPriority readonly dispid 4;
    property ssEmailUseMAPI: WordBool readonly dispid 5;
    property ssAttachMethod: TEmailAttachMethod readonly dispid 6;
    property ssFaxFromName: WideString readonly dispid 7;
    property ssFaxFromTelNo: WideString readonly dispid 8;
    property ssFaxInterfacePath: WideString readonly dispid 9;
    property ssFaxUsing: TFaxMethod readonly dispid 10;
  end;

// *********************************************************************//
// Interface: ITransaction5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41475514-DEFD-447E-923B-90882634D7C7}
// *********************************************************************//
  ITransaction5 = interface(ITransaction4)
    ['{41475514-DEFD-447E-923B-90882634D7C7}']
    function Get_thVatPostDate: WideString; safecall;
    function BuildOutstandingIndexWithAccount(const StatusChare: WideString; 
                                              const AccountCode: WideString): WideString; safecall;
    property thVatPostDate: WideString read Get_thVatPostDate;
  end;

// *********************************************************************//
// DispIntf:  ITransaction5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41475514-DEFD-447E-923B-90882634D7C7}
// *********************************************************************//
  ITransaction5Disp = dispinterface
    ['{41475514-DEFD-447E-923B-90882634D7C7}']
    property thVatPostDate: WideString readonly dispid 124;
    function BuildOutstandingIndexWithAccount(const StatusChare: WideString; 
                                              const AccountCode: WideString): WideString; dispid 126;
    property thAsReturn: ITransactionAsReturn readonly dispid 122;
    function CreateReturn: ITransactionReturnCreate; dispid 123;
    property thAutoTransaction: WordBool readonly dispid 106;
    property thDeliveryRunNo: WideString readonly dispid 107;
    property thExternal: WordBool readonly dispid 108;
    property thSettledVAT: Double readonly dispid 109;
    property thVATClaimed: Double readonly dispid 110;
    property thPickingRunNo: Integer readonly dispid 111;
    property thDeliveryNoteRef: WideString readonly dispid 112;
    property thVATCompanyRate: Double readonly dispid 113;
    property thVATDailyRate: Double readonly dispid 114;
    property thPostCompanyRate: Double readonly dispid 115;
    property thPostDailyRate: Double readonly dispid 116;
    property thPostDiscAmount: Double readonly dispid 117;
    property thPostDiscTaken: WordBool readonly dispid 118;
    property thLastDebtChaseLetter: Integer readonly dispid 119;
    property thExported: WordBool dispid 120;
    property thAsApplication: ITransactionAsApplication readonly dispid 121;
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ISystemSetup6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F17E5A9-7068-4AAA-8EDC-F6FE17334423}
// *********************************************************************//
  ISystemSetup6 = interface(ISystemSetup5)
    ['{0F17E5A9-7068-4AAA-8EDC-F6FE17334423}']
    function Get_ssCurrentVatPeriod: WideString; safecall;
    function Get_ssVatScheme: TVATSchemeType; safecall;
    function Get_ssVATReturnInterval: Integer; safecall;
    property ssCurrentVatPeriod: WideString read Get_ssCurrentVatPeriod;
    property ssVatScheme: TVATSchemeType read Get_ssVatScheme;
    property ssVATReturnInterval: Integer read Get_ssVATReturnInterval;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetup6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F17E5A9-7068-4AAA-8EDC-F6FE17334423}
// *********************************************************************//
  ISystemSetup6Disp = dispinterface
    ['{0F17E5A9-7068-4AAA-8EDC-F6FE17334423}']
    property ssCurrentVatPeriod: WideString readonly dispid 123;
    property ssVatScheme: TVATSchemeType readonly dispid 124;
    property ssVATReturnInterval: Integer readonly dispid 125;
    property ssEnforceGLClasses: WordBool readonly dispid 122;
    property ssReturnLineReason: ISystemSetupReturnLineReason readonly dispid 121;
    property ssFilterByBinLocation: WordBool readonly dispid 116;
    property ssKeepBinHistory: WordBool readonly dispid 117;
    property ssBinMask: WideString readonly dispid 118;
    property ssBudgetByCCDeptEx: TBudgetByCCDeptType readonly dispid 119;
    property ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType readonly dispid 120;
    property ssWOPDisableWIP: WordBool readonly dispid 109;
    property ssWORAllocStockOnPick: WordBool readonly dispid 110;
    property ssWORCopyStkNotes: TWOPStockNotesType readonly dispid 111;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet readonly dispid 114;
    property ssCISSetup: ISystemSetupCIS readonly dispid 115;
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: IBankAccount2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3D35FF7-FC50-41D3-B921-07C5EAD8A9BF}
// *********************************************************************//
  IBankAccount2 = interface(IBankAccount)
    ['{A3D35FF7-FC50-41D3-B921-07C5EAD8A9BF}']
    function Get_baReceiptUserID: WideString; safecall;
    procedure Set_baReceiptUserID(const Value: WideString); safecall;
    property baReceiptUserID: WideString read Get_baReceiptUserID write Set_baReceiptUserID;
  end;

// *********************************************************************//
// DispIntf:  IBankAccount2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3D35FF7-FC50-41D3-B921-07C5EAD8A9BF}
// *********************************************************************//
  IBankAccount2Disp = dispinterface
    ['{A3D35FF7-FC50-41D3-B921-07C5EAD8A9BF}']
    property baReceiptUserID: WideString dispid 21;
    property baGLCode: Integer dispid 1;
    property baProduct: Integer dispid 2;
    property baOutputPath: WideString dispid 3;
    property baPayFileName: WideString dispid 4;
    property baRecFileName: WideString dispid 5;
    property baStatementPath: WideString dispid 6;
    property baSortCode: WideString dispid 7;
    property baAccountNo: WideString dispid 8;
    function Save: Integer; dispid 72;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildGLCodeIndex(glCode: Integer): WideString; dispid 9;
    property baProductString: WideString readonly dispid 10;
    function Add: IBankAccount; dispid 12;
    function Update: IBankAccount; dispid 13;
    function Delete: Integer; dispid 14;
    function Clone: IBankAccount; dispid 15;
    property Index: TBankAccountIndex dispid 16;
    property baStatement: IBankStatement readonly dispid 17;
    property baUserID: WideString dispid 18;
    property baReference: WideString dispid 19;
    property baLastDate: WideString dispid 11;
    property baOutputCurrency: Integer dispid 20;
  end;

// *********************************************************************//
// Interface: ICompanyManager2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C48F7F8-CDB2-431F-A5AB-9B4B9AC9645A}
// *********************************************************************//
  ICompanyManager2 = interface(ICompanyManager)
    ['{5C48F7F8-CDB2-431F-A5AB-9B4B9AC9645A}']
    function IndexOf(SearchBy: TCompanyManagerSearchMode; const SearchFor: WideString): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ICompanyManager2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C48F7F8-CDB2-431F-A5AB-9B4B9AC9645A}
// *********************************************************************//
  ICompanyManager2Disp = dispinterface
    ['{5C48F7F8-CDB2-431F-A5AB-9B4B9AC9645A}']
    function IndexOf(SearchBy: TCompanyManagerSearchMode; const SearchFor: WideString): Integer; dispid 3;
    property cmCount: Integer readonly dispid 1;
    property cmCompany[Index: Integer]: ICompanyDetail readonly dispid 2;
  end;

// *********************************************************************//
// Interface: ICompanyDetail2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E16AFF4D-4001-4027-8B1F-9EB02F304F4B}
// *********************************************************************//
  ICompanyDetail2 = interface(ICompanyDetail)
    ['{E16AFF4D-4001-4027-8B1F-9EB02F304F4B}']
    function Get_coConnect: WideString; safecall;
    property coConnect: WideString read Get_coConnect;
  end;

// *********************************************************************//
// DispIntf:  ICompanyDetail2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E16AFF4D-4001-4027-8B1F-9EB02F304F4B}
// *********************************************************************//
  ICompanyDetail2Disp = dispinterface
    ['{E16AFF4D-4001-4027-8B1F-9EB02F304F4B}']
    property coConnect: WideString readonly dispid 4;
    property coCode: WideString readonly dispid 1;
    property coName: WideString readonly dispid 2;
    property coPath: WideString readonly dispid 3;
  end;

// *********************************************************************//
// Interface: IFunctions3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65DC3A8C-4BEE-49DC-9020-1136B94AE5EC}
// *********************************************************************//
  IFunctions3 = interface(IFunctions2)
    ['{65DC3A8C-4BEE-49DC-9020-1136B94AE5EC}']
    function entConvertAmountWithRatesEx(Amount: Double; ConvertToBase: WordBool; 
                                         RateCurrency: Integer; CompanyRate: Double; 
                                         DailyRate: Double; DecPlaces: Integer): Double; safecall;
  end;

// *********************************************************************//
// DispIntf:  IFunctions3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65DC3A8C-4BEE-49DC-9020-1136B94AE5EC}
// *********************************************************************//
  IFunctions3Disp = dispinterface
    ['{65DC3A8C-4BEE-49DC-9020-1136B94AE5EC}']
    function entConvertAmountWithRatesEx(Amount: Double; ConvertToBase: WordBool; 
                                         RateCurrency: Integer; CompanyRate: Double; 
                                         DailyRate: Double; DecPlaces: Integer): Double; dispid 11;
    function entDouble(Int2: Smallint; Int4: Integer): Double; dispid 10;
    function entFormatDate(const EntDateStr: WideString; const DateFormat: WideString): WideString; dispid 1;
    function entRound(Value: Double; Decs: Integer): Double; dispid 2;
    function entFormatPeriodYear(Period: Integer; Year: Integer): WideString; dispid 3;
    function entConvertAmount(Amount: Double; FromCurrency: Integer; ToCurrency: Integer; 
                              RateType: Integer): Double; dispid 4;
    function entConvertDateToPeriod(const DateString: WideString; var FinancialPeriod: Integer; 
                                    var FinancialYear: Integer): Integer; dispid 5;
    function entConvertAmountWithRates(Amount: Double; ConvertToBase: WordBool; 
                                       RateCurrency: Integer; CompanyRate: Double; DailyRate: Double): Double; dispid 6;
    procedure entBrowseObject(const ObjectToBrowse: IDispatch; ShowModal: WordBool); dispid 7;
    function entCheckPassword(const UserName: WideString; const UserPassword: WideString): Integer; dispid 8;
    function entCheckSecurity(const UserName: WideString; AreaCode: Integer): Integer; dispid 9;
  end;

// *********************************************************************//
// Interface: IGeneralLedger3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E12D4DB-EEA7-44D6-9D5F-3A4714027763}
// *********************************************************************//
  IGeneralLedger3 = interface(IGeneralLedger2)
    ['{9E12D4DB-EEA7-44D6-9D5F-3A4714027763}']
    function BuildCodeStringIndex(glCode: Integer): WideString; safecall;
  end;

// *********************************************************************//
// DispIntf:  IGeneralLedger3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E12D4DB-EEA7-44D6-9D5F-3A4714027763}
// *********************************************************************//
  IGeneralLedger3Disp = dispinterface
    ['{9E12D4DB-EEA7-44D6-9D5F-3A4714027763}']
    function BuildCodeStringIndex(glCode: Integer): WideString; dispid 25;
    property glClass: TGeneralLedgerClass dispid 22;
    property glInactive: WordBool dispid 23;
    property glForceJobCode: WordBool dispid 24;
    property glCode: Integer dispid 1;
    property glName: WideString dispid 2;
    property glParent: Integer dispid 3;
    property glType: TGeneralLedgerType dispid 4;
    property glAltCode: WideString dispid 5;
    property glPage: WordBool dispid 6;
    property glSubtotal: WordBool dispid 7;
    property glTotal: WordBool dispid 8;
    property glCarryFwd: Integer dispid 9;
    property glRevalue: WordBool dispid 10;
    property glCurrency: Smallint dispid 11;
    function Add: IGeneralLedger; dispid 12;
    function Update: IGeneralLedger; dispid 13;
    function Clone: IGeneralLedger; dispid 14;
    function Save: Integer; dispid 15;
    procedure Cancel; dispid 16;
    property glParentI: IGeneralLedger readonly dispid 18;
    function BuildCodeIndex(glCode: Integer): WideString; dispid 17;
    function BuildNameIndex(const Name: WideString): WideString; dispid 19;
    function BuildParentIndex(ParentCode: Integer; ChildCode: Integer): WideString; dispid 20;
    function BuildAltCodeIndex(const AltCode: WideString): WideString; dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TGeneralLedgerIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: ISQLFunctions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04E7194D-4DEF-4405-B9CC-AF1147FC11BA}
// *********************************************************************//
  ISQLFunctions = interface(IDispatch)
    ['{04E7194D-4DEF-4405-B9CC-AF1147FC11BA}']
    function LoadCache: Integer; safecall;
    function UnloadCache: Integer; safecall;
    function Get_sqlUseCache: WordBool; safecall;
    procedure Set_sqlUseCache(Value: WordBool); safecall;
    function Get_sqlQuery: WideString; safecall;
    procedure Set_sqlQuery(const Value: WideString); safecall;
    function Get_sqlRequiredFields: WideString; safecall;
    procedure Set_sqlRequiredFields(const Value: WideString); safecall;
    function Get_sqlAutoRefreshCache: WordBool; safecall;
    procedure Set_sqlAutoRefreshCache(Value: WordBool); safecall;
    function Get_sqlCacheRefreshInterval: Integer; safecall;
    procedure Set_sqlCacheRefreshInterval(Value: Integer); safecall;
    function TranslateFieldNames(const FieldNames: WideString): WideString; safecall;
    property sqlUseCache: WordBool read Get_sqlUseCache write Set_sqlUseCache;
    property sqlQuery: WideString read Get_sqlQuery write Set_sqlQuery;
    property sqlRequiredFields: WideString read Get_sqlRequiredFields write Set_sqlRequiredFields;
    property sqlAutoRefreshCache: WordBool read Get_sqlAutoRefreshCache write Set_sqlAutoRefreshCache;
    property sqlCacheRefreshInterval: Integer read Get_sqlCacheRefreshInterval write Set_sqlCacheRefreshInterval;
  end;

// *********************************************************************//
// DispIntf:  ISQLFunctionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04E7194D-4DEF-4405-B9CC-AF1147FC11BA}
// *********************************************************************//
  ISQLFunctionsDisp = dispinterface
    ['{04E7194D-4DEF-4405-B9CC-AF1147FC11BA}']
    function LoadCache: Integer; dispid 1;
    function UnloadCache: Integer; dispid 2;
    property sqlUseCache: WordBool dispid 3;
    property sqlQuery: WideString dispid 4;
    property sqlRequiredFields: WideString dispid 5;
    property sqlAutoRefreshCache: WordBool dispid 6;
    property sqlCacheRefreshInterval: Integer dispid 7;
    function TranslateFieldNames(const FieldNames: WideString): WideString; dispid 8;
  end;

// *********************************************************************//
// Interface: IAnalysisJobBudget3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB2A2034-A960-498D-8432-21E91B68DEB7}
// *********************************************************************//
  IAnalysisJobBudget3 = interface(IAnalysisJobBudget2)
    ['{EB2A2034-A960-498D-8432-21E91B68DEB7}']
    function Get_jbCurrency: Integer; safecall;
    procedure Set_jbCurrency(Value: Integer); safecall;
    property jbCurrency: Integer read Get_jbCurrency write Set_jbCurrency;
  end;

// *********************************************************************//
// DispIntf:  IAnalysisJobBudget3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB2A2034-A960-498D-8432-21E91B68DEB7}
// *********************************************************************//
  IAnalysisJobBudget3Disp = dispinterface
    ['{EB2A2034-A960-498D-8432-21E91B68DEB7}']
    property jbCurrency: Integer dispid 23;
    property jbApplyPercent: Double dispid 25;
    property jbApplicationBasis: TBudgetAppBasisType dispid 26;
    property jbAnalysisCode: WideString dispid 14;
    property jbAnalysisCodeI: IJobAnalysis readonly dispid 15;
    property jbFolio: Integer readonly dispid 18;
    property jbRecharge: WordBool dispid 19;
    function Add: IAnalysisJobBudget; dispid 1;
    function Delete: Integer; dispid 20;
    function BuildAnalysisCodeIndex(const AnalysisCode: WideString): WideString; dispid 11;
    function Update: IAnalysisJobBudget; dispid 2;
    function Clone: IAnalysisJobBudget; dispid 3;
    property jbCategory: TJobBudgetCategoryType dispid 21;
    property Index: TAnalysisJobBudgetIndex dispid 17;
    function BuildAnalysisCategoryIndex(Category: TJobBudgetCategoryType): WideString; dispid 22;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: ITimeAndStockJobBudget2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4FB2146-1B8F-4370-87FF-954BCDDB1A64}
// *********************************************************************//
  ITimeAndStockJobBudget2 = interface(ITimeAndStockJobBudget)
    ['{A4FB2146-1B8F-4370-87FF-954BCDDB1A64}']
    function Get_jbCurrency: Integer; safecall;
    procedure Set_jbCurrency(Value: Integer); safecall;
    property jbCurrency: Integer read Get_jbCurrency write Set_jbCurrency;
  end;

// *********************************************************************//
// DispIntf:  ITimeAndStockJobBudget2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4FB2146-1B8F-4370-87FF-954BCDDB1A64}
// *********************************************************************//
  ITimeAndStockJobBudget2Disp = dispinterface
    ['{A4FB2146-1B8F-4370-87FF-954BCDDB1A64}']
    property jbCurrency: Integer dispid 26;
    property jbPayRateMode: WordBool dispid 22;
    property jbPayRateCurrency: Integer dispid 23;
    property jbStockOrRateCode: WideString dispid 24;
    function BuildStockCodeIndex(const StockCode: WideString): WideString; dispid 21;
    function BuildTimeRateIndex(const TimeRate: WideString): WideString; dispid 25;
    property jbAnalysisCode: WideString dispid 14;
    property jbAnalysisCodeI: IJobAnalysis readonly dispid 15;
    property jbFolio: Integer readonly dispid 18;
    property jbRecharge: WordBool dispid 19;
    function Add: ITimeAndStockJobBudget; dispid 1;
    function Delete: Integer; dispid 20;
    function Update: ITimeAndStockJobBudget; dispid 2;
    function Clone: ITimeAndStockJobBudget; dispid 3;
    property jbCategory: TJobBudgetCategoryType dispid 11;
    property Index: TTimeAndStockJobBudgetIndex dispid 17;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: ISummaryJobBudget2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE256D05-EA84-4EAB-A799-E5273ED20421}
// *********************************************************************//
  ISummaryJobBudget2 = interface(ISummaryJobBudget)
    ['{AE256D05-EA84-4EAB-A799-E5273ED20421}']
    function Get_jbCurrency: Integer; safecall;
    procedure Set_jbCurrency(Value: Integer); safecall;
    property jbCurrency: Integer read Get_jbCurrency write Set_jbCurrency;
  end;

// *********************************************************************//
// DispIntf:  ISummaryJobBudget2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE256D05-EA84-4EAB-A799-E5273ED20421}
// *********************************************************************//
  ISummaryJobBudget2Disp = dispinterface
    ['{AE256D05-EA84-4EAB-A799-E5273ED20421}']
    property jbCurrency: Integer dispid 11;
    property jbCategory: TJobBudgetCategoryType readonly dispid 14;
    property jbCategoryString: WideString readonly dispid 15;
    function BuildCategoryIndex(Category: TJobBudgetCategoryType): WideString; dispid 1;
    function Update: ISummaryJobBudget; dispid 2;
    function Clone: ISummaryJobBudget; dispid 3;
    property Index: TSummaryJobBudgetIndex dispid 17;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// Interface: ICCDept3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A20D863E-9FA7-4322-B783-0B24243C78D2}
// *********************************************************************//
  ICCDept3 = interface(ICCDept2)
    ['{A20D863E-9FA7-4322-B783-0B24243C78D2}']
    function Get_cdNotes: INotes; safecall;
    property cdNotes: INotes read Get_cdNotes;
  end;

// *********************************************************************//
// DispIntf:  ICCDept3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A20D863E-9FA7-4322-B783-0B24243C78D2}
// *********************************************************************//
  ICCDept3Disp = dispinterface
    ['{A20D863E-9FA7-4322-B783-0B24243C78D2}']
    property cdNotes: INotes readonly dispid 9;
    property cdInactive: WordBool dispid 6;
    function Save: Integer; dispid 11;
    function Add: ICCDept2; dispid 13;
    function Update: ICCDept2; dispid 15;
    procedure Cancel; dispid 16;
    property cdCodeW: WideString dispid 7;
    property cdNameW: WideString dispid 8;
    property cdCode: WideString readonly dispid 1;
    property cdName: WideString readonly dispid 2;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 3;
    function BuildNameIndex(const Name: WideString): WideString; dispid 4;
    function Clone: ICCDept; dispid 5;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TCCDeptIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
  end;

// *********************************************************************//
// Interface: IMultiBuyDetails
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {602774B3-C86F-4716-9AA8-CC4D9528FA9F}
// *********************************************************************//
  IMultiBuyDetails = interface(IDispatch)
    ['{602774B3-C86F-4716-9AA8-CC4D9528FA9F}']
    function Get_mbdType: TMultiBuyDiscountType; safecall;
    procedure Set_mbdType(Value: TMultiBuyDiscountType); safecall;
    function Get_mbdStockCode: WideString; safecall;
    procedure Set_mbdStockCode(const Value: WideString); safecall;
    function Get_mbdCurrency: Integer; safecall;
    procedure Set_mbdCurrency(Value: Integer); safecall;
    function Get_mbdBuyQty: Double; safecall;
    procedure Set_mbdBuyQty(Value: Double); safecall;
    function Get_mbdRewardValue: Double; safecall;
    procedure Set_mbdRewardValue(Value: Double); safecall;
    function Get_mbdUseEffectiveDates: WordBool; safecall;
    procedure Set_mbdUseEffectiveDates(Value: WordBool); safecall;
    function Get_mbdDateEffectiveFrom: WideString; safecall;
    procedure Set_mbdDateEffectiveFrom(const Value: WideString); safecall;
    function Get_mbdDateEffectiveTo: WideString; safecall;
    procedure Set_mbdDateEffectiveTo(const Value: WideString); safecall;
    function Get_mbdApplyQty: Integer; safecall;
    procedure Set_mbdApplyQty(Value: Integer); safecall;
    property mbdType: TMultiBuyDiscountType read Get_mbdType write Set_mbdType;
    property mbdStockCode: WideString read Get_mbdStockCode write Set_mbdStockCode;
    property mbdCurrency: Integer read Get_mbdCurrency write Set_mbdCurrency;
    property mbdBuyQty: Double read Get_mbdBuyQty write Set_mbdBuyQty;
    property mbdRewardValue: Double read Get_mbdRewardValue write Set_mbdRewardValue;
    property mbdUseEffectiveDates: WordBool read Get_mbdUseEffectiveDates write Set_mbdUseEffectiveDates;
    property mbdDateEffectiveFrom: WideString read Get_mbdDateEffectiveFrom write Set_mbdDateEffectiveFrom;
    property mbdDateEffectiveTo: WideString read Get_mbdDateEffectiveTo write Set_mbdDateEffectiveTo;
    property mbdApplyQty: Integer read Get_mbdApplyQty write Set_mbdApplyQty;
  end;

// *********************************************************************//
// DispIntf:  IMultiBuyDetailsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {602774B3-C86F-4716-9AA8-CC4D9528FA9F}
// *********************************************************************//
  IMultiBuyDetailsDisp = dispinterface
    ['{602774B3-C86F-4716-9AA8-CC4D9528FA9F}']
    property mbdType: TMultiBuyDiscountType dispid 1;
    property mbdStockCode: WideString dispid 3;
    property mbdCurrency: Integer dispid 4;
    property mbdBuyQty: Double dispid 5;
    property mbdRewardValue: Double dispid 6;
    property mbdUseEffectiveDates: WordBool dispid 7;
    property mbdDateEffectiveFrom: WideString dispid 8;
    property mbdDateEffectiveTo: WideString dispid 9;
    property mbdApplyQty: Integer dispid 10;
  end;

// *********************************************************************//
// Interface: IMultiBuyDiscounts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {733F2FE4-30E0-4716-9A8B-B333288512FC}
// *********************************************************************//
  IMultiBuyDiscounts = interface(IDispatch)
    ['{733F2FE4-30E0-4716-9A8B-B333288512FC}']
    function Get_mbdCount: Integer; safecall;
    function Get_mbdDetails(Index: Integer): IMultiBuyDetails; safecall;
    property mbdCount: Integer read Get_mbdCount;
    property mbdDetails[Index: Integer]: IMultiBuyDetails read Get_mbdDetails;
  end;

// *********************************************************************//
// DispIntf:  IMultiBuyDiscountsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {733F2FE4-30E0-4716-9A8B-B333288512FC}
// *********************************************************************//
  IMultiBuyDiscountsDisp = dispinterface
    ['{733F2FE4-30E0-4716-9A8B-B333288512FC}']
    property mbdCount: Integer readonly dispid 1;
    property mbdDetails[Index: Integer]: IMultiBuyDetails readonly dispid 2;
  end;

// *********************************************************************//
// Interface: IMultiBuy
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE917271-45F7-46E6-B5E2-41461728E9EB}
// *********************************************************************//
  IMultiBuy = interface(IMultiBuyDetails)
    ['{FE917271-45F7-46E6-B5E2-41461728E9EB}']
    function Save: Integer; safecall;
    function Add: IMultiBuy; safecall;
    function Clone: IMultiBuy; safecall;
    function Update: IMultiBuy; safecall;
    procedure Cancel; safecall;
    function GetFirst: Integer; safecall;
    function GetPrevious: Integer; safecall;
    function GetNext: Integer; safecall;
    function GetLast: Integer; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Value: Integer); safecall;
    function RestorePosition: Integer; safecall;
    function SavePosition: Integer; safecall;
    function GetLessThan(const SearchKey: WideString): Integer; safecall;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; safecall;
    function GetEqual(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThan(const SearchKey: WideString): Integer; safecall;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; safecall;
    property KeyString: WideString read Get_KeyString;
    property Position: Integer read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  IMultiBuyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE917271-45F7-46E6-B5E2-41461728E9EB}
// *********************************************************************//
  IMultiBuyDisp = dispinterface
    ['{FE917271-45F7-46E6-B5E2-41461728E9EB}']
    function Save: Integer; dispid 72;
    function Add: IMultiBuy; dispid 74;
    function Clone: IMultiBuy; dispid 75;
    function Update: IMultiBuy; dispid 76;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property mbdType: TMultiBuyDiscountType dispid 1;
    property mbdStockCode: WideString dispid 3;
    property mbdCurrency: Integer dispid 4;
    property mbdBuyQty: Double dispid 5;
    property mbdRewardValue: Double dispid 6;
    property mbdUseEffectiveDates: WordBool dispid 7;
    property mbdDateEffectiveFrom: WideString dispid 8;
    property mbdDateEffectiveTo: WideString dispid 9;
    property mbdApplyQty: Integer dispid 10;
  end;

// *********************************************************************//
// Interface: IAccount3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1C6D083-67B7-4C90-823E-9355764803D1}
// *********************************************************************//
  IAccount3 = interface(IAccount2)
    ['{C1C6D083-67B7-4C90-823E-9355764803D1}']
    function Get_acMultiBuy: IMultiBuy; safecall;
    property acMultiBuy: IMultiBuy read Get_acMultiBuy;
  end;

// *********************************************************************//
// DispIntf:  IAccount3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1C6D083-67B7-4C90-823E-9355764803D1}
// *********************************************************************//
  IAccount3Disp = dispinterface
    ['{C1C6D083-67B7-4C90-823E-9355764803D1}']
    property acMultiBuy: IMultiBuy readonly dispid 94;
    property acDefTagNo: Integer dispid 87;
    property acOfficeType: TAccountOfficeType dispid 88;
    property acOrderConsolidationMode: TOrderConsolidationModeType dispid 90;
    property acVATCountryCode: WideString dispid 91;
    property acLinks: ILinks readonly dispid 89;
    property acSalesAnalysis: ICustomerSalesAnalysis readonly dispid 92;
    function Print(PrintAs: TAccountPrintMode): IPrintJob; dispid 93;
    property acCode: WideString dispid 1;
    property acCompany: WideString dispid 2;
    property acArea: WideString dispid 3;
    property acAccType: WideString dispid 4;
    property acStatementTo: WideString dispid 5;
    property acVATRegNo: WideString dispid 6;
    property acAddress: IAddress readonly dispid 7;
    property acDelAddress: IAddress readonly dispid 8;
    property acContact: WideString dispid 9;
    property acPhone: WideString dispid 10;
    property acFax: WideString dispid 11;
    property acTheirAcc: WideString dispid 12;
    property acOwnTradTerm: WordBool dispid 13;
    property acTradeTerms[Index: Integer]: WideString dispid 14;
    property acCurrency: Smallint dispid 15;
    property acVATCode: WideString dispid 16;
    property acPayTerms: Smallint dispid 17;
    property acCreditLimit: Double dispid 18;
    property acDiscount: Double dispid 19;
    property acCreditStatus: Smallint dispid 20;
    property acCostCentre: WideString dispid 21;
    property acDiscountBand: WideString dispid 22;
    property acDepartment: WideString dispid 23;
    property acECMember: WordBool dispid 24;
    property acStatement: WordBool dispid 25;
    property acSalesGL: Integer dispid 26;
    property acLocation: WideString dispid 27;
    property acAccStatus: TAccountStatus dispid 28;
    property acPayType: WideString dispid 29;
    property acBankSort: WideString dispid 30;
    property acBankAcc: WideString dispid 31;
    property acBankRef: WideString dispid 32;
    property acLastUsed: WideString readonly dispid 33;
    property acPhone2: WideString dispid 34;
    property acUserDef1: WideString dispid 35;
    property acUserDef2: WideString dispid 36;
    property acInvoiceTo: WideString dispid 37;
    property acSOPAutoWOff: WordBool dispid 38;
    property acBookOrdVal: Double dispid 39;
    property acCOSGL: Integer dispid 40;
    property acDrCrGL: Integer dispid 41;
    property acDirDebMode: Smallint dispid 42;
    property acCCStart: WideString dispid 43;
    property acCCEnd: WideString dispid 44;
    property acCCName: WideString dispid 45;
    property acCCNumber: WideString dispid 46;
    property acCCSwitch: WideString dispid 47;
    property acDefSettleDays: Integer dispid 49;
    property acDefSettleDisc: Double dispid 50;
    property acFormSet: Smallint dispid 51;
    property acStateDeliveryMode: Integer dispid 52;
    property acEmailAddr: WideString dispid 53;
    property acSendReader: WordBool dispid 54;
    property acEBusPword: WideString dispid 55;
    property acAltCode: WideString dispid 56;
    property acPostCode: WideString dispid 57;
    property acUseForEbus: Integer dispid 58;
    property acZIPAttachments: TEmailAttachmentZIPType dispid 59;
    property acUserDef3: WideString dispid 60;
    property acUserDef4: WideString dispid 61;
    property acTimeStamp: WideString readonly dispid 62;
    property acSSDDeliveryTerms: WideString dispid 63;
    property acInclusiveVATCode: WideString dispid 64;
    property acSSDModeOfTransport: Integer dispid 65;
    property acLastOperator: WideString dispid 66;
    property acDocDeliveryMode: Integer dispid 67;
    property acSendHTML: WordBool dispid 68;
    property acWebLiveCatalog: WideString dispid 69;
    property acWebPrevCatalog: WideString dispid 70;
    property acHistory: IAccountBalance readonly dispid 71;
    function Save: Integer; dispid 72;
    function Add: IAccount; dispid 74;
    function Clone: IAccount; dispid 75;
    function Update: IAccount; dispid 76;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TAccountIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const AccountCode: WideString): WideString; dispid 78;
    function BuildNameIndex(const AccountName: WideString): WideString; dispid 79;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 48;
    function BuildVatRegIndex(const VatRegNo: WideString; const AccountCode: WideString): WideString; dispid 73;
    function BuildEmailIndex(const EmailAddr: WideString): WideString; dispid 80;
    function BuildPhoneIndex(const PhoneNo: WideString): WideString; dispid 81;
    function BuildPostCodeIndex(const PostCode: WideString): WideString; dispid 82;
    function BuildOurCodeIndex(const OurCode: WideString): WideString; dispid 83;
    function BuildInvoiceToIndex(const AccountCode: WideString): WideString; dispid 84;
    property acNotes: INotes readonly dispid 85;
    property acDiscounts: IAccountDiscount readonly dispid 86;
  end;

// *********************************************************************//
// Interface: IStock5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE8E619D-5A0F-4816-BC81-04BDF5D987F3}
// *********************************************************************//
  IStock5 = interface(IStock4)
    ['{CE8E619D-5A0F-4816-BC81-04BDF5D987F3}']
    function Get_stMultiBuy: IMultiBuy; safecall;
    property stMultiBuy: IMultiBuy read Get_stMultiBuy;
  end;

// *********************************************************************//
// DispIntf:  IStock5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE8E619D-5A0F-4816-BC81-04BDF5D987F3}
// *********************************************************************//
  IStock5Disp = dispinterface
    ['{CE8E619D-5A0F-4816-BC81-04BDF5D987F3}']
    property stMultiBuy: IMultiBuy readonly dispid 116;
    property stSalesWarrantyLength: Integer dispid 103;
    property stSalesWarrantyUnits: TWarrantyUnitsType dispid 104;
    property stManufacturerWarrantyLength: Integer dispid 108;
    property stManufacturerWarrantyUnits: TWarrantyUnitsType dispid 109;
    property stSalesReturnGL: Integer dispid 111;
    property stPurchaseReturnGL: Integer dispid 112;
    property stRestockCharge: Double dispid 113;
    property stSalesReturnQty: Double readonly dispid 114;
    property stPurchaseReturnQty: Double readonly dispid 115;
    property stRestockFlag: TRestockChargeType dispid 110;
    property stEquivalent: IAltStockCode2 readonly dispid 105;
    property stSupersededBy: IAltStockCode2 readonly dispid 106;
    property stOpportunity: IAltStockCode2 readonly dispid 107;
    property stBOMProductionTime: Integer readonly dispid 81;
    property stQtyAllocWOR: Double readonly dispid 82;
    property stQtyFreeze: Double readonly dispid 83;
    property stQtyIssuedWOR: Double readonly dispid 84;
    property stQtyPickedWOR: Double readonly dispid 85;
    property stQtyStockTake: Double dispid 86;
    property stWOPAssemblyDays: Integer dispid 87;
    property stWOPAssemblyHours: Integer dispid 88;
    property stWOPAssemblyMins: Integer dispid 89;
    property stWOPAutoCalcTime: WordBool dispid 90;
    property stWOPIssuedWIPGL: Integer dispid 91;
    property stWOPMinEconBuild: Double dispid 92;
    property stWOPRoLeadTime: Integer dispid 93;
    property stUsesBins: WordBool dispid 94;
    property stStockTakeQtyChanged: WordBool readonly dispid 95;
    property stShowKitOnSales: WordBool dispid 96;
    property stLinks: ILinks readonly dispid 97;
    property stAltStockCode: IAltStockCode readonly dispid 98;
    property stMultiBin: IMultiBin readonly dispid 99;
    property stSalesAnalysis: IStockSalesAnalysis readonly dispid 100;
    function Print(PrintAs: TStockPrintMode): IPrintJob; dispid 101;
    function Discontinue(RetainComponents: WordBool): Integer; dispid 102;
    property stCode: WideString dispid 1;
    property stDesc[Index: Integer]: WideString dispid 2;
    property stAltCode: WideString dispid 3;
    property stType: TStockType dispid 4;
    property stSalesGL: Integer dispid 5;
    property stCOSGL: Integer dispid 6;
    property stPandLGL: Integer dispid 7;
    property stBalSheetGL: Integer dispid 8;
    property stWIPGL: Integer dispid 9;
    property stBelowMinLevel: WordBool dispid 10;
    property stFolioNum: Integer readonly dispid 11;
    property stParentCode: WideString dispid 12;
    property stSuppTemp: WideString dispid 13;
    property stUnitOfStock: WideString dispid 14;
    property stUnitOfSale: WideString dispid 15;
    property stUnitOfPurch: WideString dispid 16;
    property stCostPriceCur: Integer dispid 17;
    property stCostPrice: Double dispid 18;
    property stSalesUnits: Double dispid 19;
    property stPurchUnits: Double dispid 20;
    property stVATCode: WideString dispid 21;
    property stCostCentre: WideString dispid 22;
    property stDepartment: WideString dispid 23;
    property stQtyInStock: Double readonly dispid 24;
    property stQtyPosted: Double readonly dispid 25;
    property stQtyAllocated: Double readonly dispid 26;
    property stQtyOnOrder: Double readonly dispid 27;
    property stQtyMin: Double dispid 28;
    property stQtyMax: Double dispid 29;
    property stBinLocation: WideString dispid 36;
    property stCover: IStockCover readonly dispid 37;
    property stIntrastat: IStockIntrastat readonly dispid 38;
    property stReorder: IStockReorder readonly dispid 39;
    property stAnalysisCode: WideString dispid 40;
    property stSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 41;
    property stTimeChange: WideString readonly dispid 42;
    property stInclusiveVATCode: WideString dispid 43;
    property stOperator: WideString dispid 44;
    property stSupplier: WideString dispid 45;
    property stSupplierI: IAccount readonly dispid 46;
    property stDefaultLineType: TTransactionLineType dispid 47;
    property stValuationMethod: TStockValuationType dispid 52;
    property stQtyPicked: Double readonly dispid 53;
    property stLastUsed: WideString readonly dispid 54;
    property stBarCode: WideString dispid 55;
    property stLocation: WideString dispid 56;
    property stPricingMethod: TStockPricingMethod dispid 57;
    property stShowQtyAsPacks: WordBool dispid 58;
    property stUseKitPrice: WordBool dispid 59;
    property stUserField1: WideString dispid 60;
    property stUserField2: WideString dispid 61;
    property stUserField3: WideString dispid 62;
    property stUserField4: WideString dispid 63;
    property stShowKitOnPurchase: WordBool dispid 64;
    property stImageFile: WideString dispid 65;
    property stWebLiveCatalog: WideString dispid 66;
    property stWebPrevCatalog: WideString dispid 67;
    property stUseForEbus: WordBool dispid 68;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TStockIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IStock; dispid 30;
    function Update: IStock; dispid 31;
    function Clone: IStock; dispid 32;
    function Save: Integer; dispid 33;
    procedure Cancel; dispid 34;
    function BuildCodeIndex(const StockCode: WideString): WideString; dispid 35;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 48;
    function BuildParentIndex(const ParentCode: WideString; const ChildCode: WideString): WideString; dispid 49;
    function BuildDescIndex(const Desc: WideString): WideString; dispid 50;
    property stLocationList: IStockLocation readonly dispid 51;
    function BuildSupplierIndex(const AccountCode: WideString; CostCurrency: Integer; 
                                const StockCode: WideString): WideString; dispid 69;
    function BuildPandLIndex(PandLGL: Integer; const StockCode: WideString): WideString; dispid 70;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 71;
    function BuildBinLocIndex(const BinLocation: WideString): WideString; dispid 72;
    function BuildBarCodeIndex(const BarCode: WideString): WideString; dispid 73;
    property stNotes: INotes readonly dispid 74;
    property stQtyFree: Double readonly dispid 75;
    property stQtyBreaks: IQuantityBreak readonly dispid 76;
    property stAnalysisCodeI: IJobAnalysis readonly dispid 77;
    property stWhereUsed: IStockWhereUsed readonly dispid 78;
    property stBillOfMaterials: IStockBOMList readonly dispid 79;
    property stSerialBatch: ISerialBatch readonly dispid 80;
  end;

// *********************************************************************//
// Interface: ITransactionLine5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6B9BDD38-F7A8-497D-8456-E71632F7D841}
// *********************************************************************//
  ITransactionLine5 = interface(ITransactionLine4)
    ['{6B9BDD38-F7A8-497D-8456-E71632F7D841}']
    function Get_tlMultiBuyDiscounts: IMultiBuyDiscounts; safecall;
    function Get_tlTotals(Index: TTransLineTotalsType): Double; safecall;
    function Get_tlMultiBuyDiscount: Double; safecall;
    procedure Set_tlMultiBuyDiscount(Value: Double); safecall;
    function Get_tlMultiBuyDiscountFlag: WideString; safecall;
    procedure Set_tlMultiBuyDiscountFlag(const Value: WideString); safecall;
    function Get_tlTransValueDiscount: Double; safecall;
    procedure Set_tlTransValueDiscount(Value: Double); safecall;
    function Get_tlTransValueDiscountFlag: WideString; safecall;
    procedure Set_tlTransValueDiscountFlag(const Value: WideString); safecall;
    function Get_tlTransValueDiscountType: TTransValueDiscountType; safecall;
    procedure Set_tlTransValueDiscountType(Value: TTransValueDiscountType); safecall;
    property tlMultiBuyDiscounts: IMultiBuyDiscounts read Get_tlMultiBuyDiscounts;
    property tlTotals[Index: TTransLineTotalsType]: Double read Get_tlTotals;
    property tlMultiBuyDiscount: Double read Get_tlMultiBuyDiscount write Set_tlMultiBuyDiscount;
    property tlMultiBuyDiscountFlag: WideString read Get_tlMultiBuyDiscountFlag write Set_tlMultiBuyDiscountFlag;
    property tlTransValueDiscount: Double read Get_tlTransValueDiscount write Set_tlTransValueDiscount;
    property tlTransValueDiscountFlag: WideString read Get_tlTransValueDiscountFlag write Set_tlTransValueDiscountFlag;
    property tlTransValueDiscountType: TTransValueDiscountType read Get_tlTransValueDiscountType write Set_tlTransValueDiscountType;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6B9BDD38-F7A8-497D-8456-E71632F7D841}
// *********************************************************************//
  ITransactionLine5Disp = dispinterface
    ['{6B9BDD38-F7A8-497D-8456-E71632F7D841}']
    property tlMultiBuyDiscounts: IMultiBuyDiscounts readonly dispid 97;
    property tlTotals[Index: TTransLineTotalsType]: Double readonly dispid 98;
    property tlMultiBuyDiscount: Double dispid 91;
    property tlMultiBuyDiscountFlag: WideString dispid 92;
    property tlTransValueDiscount: Double dispid 93;
    property tlTransValueDiscountFlag: WideString dispid 94;
    property tlTransValueDiscountType: TTransValueDiscountType dispid 95;
    property tlAsReturn: ITransactionLineAsReturn readonly dispid 86;
    function CreateReturn: ITransactionLineReturnCreate; dispid 88;
    property tlSerialReturnQty: Double readonly dispid 89;
    property tlBinReturnQty: Double readonly dispid 90;
    property tlMultiBin: ITransactionLineMultiBin readonly dispid 70;
    property tlAltStockCodeI: IAltStockCode readonly dispid 71;
    property tlRunNo: Integer readonly dispid 72;
    property tlStockDeductQty: Double readonly dispid 73;
    property tlUseQtyMul: WordBool readonly dispid 74;
    property tlReconciliationDate: WideString readonly dispid 76;
    property tlB2BLinkFolio: Integer readonly dispid 77;
    property tlB2BLineNo: Integer readonly dispid 78;
    property tlCOSDailyRate: Double readonly dispid 79;
    property tlVATIncValue: Double dispid 80;
    property tlBinQty: Double readonly dispid 81;
    procedure ExplodeBOM; dispid 82;
    property tlQtyPack: Double readonly dispid 84;
    property tlAsApplication: ITransactionLineAsApplication readonly dispid 87;
    procedure AddDescriptionLines; dispid 85;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: ITransaction6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBC4B05A-DD27-4BBC-9CCE-B1F2D28CA08A}
// *********************************************************************//
  ITransaction6 = interface(ITransaction5)
    ['{DBC4B05A-DD27-4BBC-9CCE-B1F2D28CA08A}']
    function ApplyTTD(DiscountValue: Double; const DiscountFlag: WideString): Integer; safecall;
    procedure CalculateVBD(var VBDValue: Double; var VBDVAT: Double); safecall;
  end;

// *********************************************************************//
// DispIntf:  ITransaction6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBC4B05A-DD27-4BBC-9CCE-B1F2D28CA08A}
// *********************************************************************//
  ITransaction6Disp = dispinterface
    ['{DBC4B05A-DD27-4BBC-9CCE-B1F2D28CA08A}']
    function ApplyTTD(DiscountValue: Double; const DiscountFlag: WideString): Integer; dispid 125;
    procedure CalculateVBD(var VBDValue: Double; var VBDVAT: Double); dispid 127;
    property thVatPostDate: WideString readonly dispid 124;
    function BuildOutstandingIndexWithAccount(const StatusChare: WideString; 
                                              const AccountCode: WideString): WideString; dispid 126;
    property thAsReturn: ITransactionAsReturn readonly dispid 122;
    function CreateReturn: ITransactionReturnCreate; dispid 123;
    property thAutoTransaction: WordBool readonly dispid 106;
    property thDeliveryRunNo: WideString readonly dispid 107;
    property thExternal: WordBool readonly dispid 108;
    property thSettledVAT: Double readonly dispid 109;
    property thVATClaimed: Double readonly dispid 110;
    property thPickingRunNo: Integer readonly dispid 111;
    property thDeliveryNoteRef: WideString readonly dispid 112;
    property thVATCompanyRate: Double readonly dispid 113;
    property thVATDailyRate: Double readonly dispid 114;
    property thPostCompanyRate: Double readonly dispid 115;
    property thPostDailyRate: Double readonly dispid 116;
    property thPostDiscAmount: Double readonly dispid 117;
    property thPostDiscTaken: WordBool readonly dispid 118;
    property thLastDebtChaseLetter: Integer readonly dispid 119;
    property thExported: WordBool dispid 120;
    property thAsApplication: ITransactionAsApplication readonly dispid 121;
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ITransactionLine6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {76D28893-3356-4FB5-8210-DCAFE559AF8B}
// *********************************************************************//
  ITransactionLine6 = interface(ITransactionLine5)
    ['{76D28893-3356-4FB5-8210-DCAFE559AF8B}']
    function Get_tlECService: WordBool; safecall;
    procedure Set_tlECService(Value: WordBool); safecall;
    function Get_tlECServiceStartDate: WideString; safecall;
    procedure Set_tlECServiceStartDate(const Value: WideString); safecall;
    function Get_tlECServiceEndDate: WideString; safecall;
    procedure Set_tlECServiceEndDate(const Value: WideString); safecall;
    function Get_tlECSalesTaxReported: Double; safecall;
    function Get_tlECPurchaseServiceTax: Double; safecall;
    procedure LinkToSOR(const SORLine: ITransactionLine); safecall;
    property tlECService: WordBool read Get_tlECService write Set_tlECService;
    property tlECServiceStartDate: WideString read Get_tlECServiceStartDate write Set_tlECServiceStartDate;
    property tlECServiceEndDate: WideString read Get_tlECServiceEndDate write Set_tlECServiceEndDate;
    property tlECSalesTaxReported: Double read Get_tlECSalesTaxReported;
    property tlECPurchaseServiceTax: Double read Get_tlECPurchaseServiceTax;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {76D28893-3356-4FB5-8210-DCAFE559AF8B}
// *********************************************************************//
  ITransactionLine6Disp = dispinterface
    ['{76D28893-3356-4FB5-8210-DCAFE559AF8B}']
    property tlECService: WordBool dispid 99;
    property tlECServiceStartDate: WideString dispid 100;
    property tlECServiceEndDate: WideString dispid 101;
    property tlECSalesTaxReported: Double readonly dispid 102;
    property tlECPurchaseServiceTax: Double readonly dispid 103;
    procedure LinkToSOR(const SORLine: ITransactionLine); dispid 96;
    property tlMultiBuyDiscounts: IMultiBuyDiscounts readonly dispid 97;
    property tlTotals[Index: TTransLineTotalsType]: Double readonly dispid 98;
    property tlMultiBuyDiscount: Double dispid 91;
    property tlMultiBuyDiscountFlag: WideString dispid 92;
    property tlTransValueDiscount: Double dispid 93;
    property tlTransValueDiscountFlag: WideString dispid 94;
    property tlTransValueDiscountType: TTransValueDiscountType dispid 95;
    property tlAsReturn: ITransactionLineAsReturn readonly dispid 86;
    function CreateReturn: ITransactionLineReturnCreate; dispid 88;
    property tlSerialReturnQty: Double readonly dispid 89;
    property tlBinReturnQty: Double readonly dispid 90;
    property tlMultiBin: ITransactionLineMultiBin readonly dispid 70;
    property tlAltStockCodeI: IAltStockCode readonly dispid 71;
    property tlRunNo: Integer readonly dispid 72;
    property tlStockDeductQty: Double readonly dispid 73;
    property tlUseQtyMul: WordBool readonly dispid 74;
    property tlReconciliationDate: WideString readonly dispid 76;
    property tlB2BLinkFolio: Integer readonly dispid 77;
    property tlB2BLineNo: Integer readonly dispid 78;
    property tlCOSDailyRate: Double readonly dispid 79;
    property tlVATIncValue: Double dispid 80;
    property tlBinQty: Double readonly dispid 81;
    procedure ExplodeBOM; dispid 82;
    property tlQtyPack: Double readonly dispid 84;
    property tlAsApplication: ITransactionLineAsApplication readonly dispid 87;
    procedure AddDescriptionLines; dispid 85;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: ISystemSetup7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7EB7EA9D-51B1-4A11-BA15-BCC7F2F9A2D1}
// *********************************************************************//
  ISystemSetup7 = interface(ISystemSetup6)
    ['{7EB7EA9D-51B1-4A11-BA15-BCC7F2F9A2D1}']
    function Get_ssECServicesEnabled: WordBool; safecall;
    function Get_ssECSalesThreshold: Double; safecall;
    property ssECServicesEnabled: WordBool read Get_ssECServicesEnabled;
    property ssECSalesThreshold: Double read Get_ssECSalesThreshold;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetup7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7EB7EA9D-51B1-4A11-BA15-BCC7F2F9A2D1}
// *********************************************************************//
  ISystemSetup7Disp = dispinterface
    ['{7EB7EA9D-51B1-4A11-BA15-BCC7F2F9A2D1}']
    property ssECServicesEnabled: WordBool readonly dispid 126;
    property ssECSalesThreshold: Double readonly dispid 127;
    property ssCurrentVatPeriod: WideString readonly dispid 123;
    property ssVatScheme: TVATSchemeType readonly dispid 124;
    property ssVATReturnInterval: Integer readonly dispid 125;
    property ssEnforceGLClasses: WordBool readonly dispid 122;
    property ssReturnLineReason: ISystemSetupReturnLineReason readonly dispid 121;
    property ssFilterByBinLocation: WordBool readonly dispid 116;
    property ssKeepBinHistory: WordBool readonly dispid 117;
    property ssBinMask: WideString readonly dispid 118;
    property ssBudgetByCCDeptEx: TBudgetByCCDeptType readonly dispid 119;
    property ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType readonly dispid 120;
    property ssWOPDisableWIP: WordBool readonly dispid 109;
    property ssWORAllocStockOnPick: WordBool readonly dispid 110;
    property ssWORCopyStkNotes: TWOPStockNotesType readonly dispid 111;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet readonly dispid 114;
    property ssCISSetup: ISystemSetupCIS readonly dispid 115;
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ITransaction7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F734B9F-5FF9-483D-A07B-C131E374951F}
// *********************************************************************//
  ITransaction7 = interface(ITransaction6)
    ['{0F734B9F-5FF9-483D-A07B-C131E374951F}']
    function Get_thWeekMonth: Smallint; safecall;
    procedure Set_thWeekMonth(Value: Smallint); safecall;
    function Get_thWorkflowState: Integer; safecall;
    procedure Set_thWorkflowState(Value: Integer); safecall;
    property thWeekMonth: Smallint read Get_thWeekMonth write Set_thWeekMonth;
    property thWorkflowState: Integer read Get_thWorkflowState write Set_thWorkflowState;
  end;

// *********************************************************************//
// DispIntf:  ITransaction7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F734B9F-5FF9-483D-A07B-C131E374951F}
// *********************************************************************//
  ITransaction7Disp = dispinterface
    ['{0F734B9F-5FF9-483D-A07B-C131E374951F}']
    property thWeekMonth: Smallint dispid 128;
    property thWorkflowState: Integer dispid 129;
    function ApplyTTD(DiscountValue: Double; const DiscountFlag: WideString): Integer; dispid 125;
    procedure CalculateVBD(var VBDValue: Double; var VBDVAT: Double); dispid 127;
    property thVatPostDate: WideString readonly dispid 124;
    function BuildOutstandingIndexWithAccount(const StatusChare: WideString; 
                                              const AccountCode: WideString): WideString; dispid 126;
    property thAsReturn: ITransactionAsReturn readonly dispid 122;
    function CreateReturn: ITransactionReturnCreate; dispid 123;
    property thAutoTransaction: WordBool readonly dispid 106;
    property thDeliveryRunNo: WideString readonly dispid 107;
    property thExternal: WordBool readonly dispid 108;
    property thSettledVAT: Double readonly dispid 109;
    property thVATClaimed: Double readonly dispid 110;
    property thPickingRunNo: Integer readonly dispid 111;
    property thDeliveryNoteRef: WideString readonly dispid 112;
    property thVATCompanyRate: Double readonly dispid 113;
    property thVATDailyRate: Double readonly dispid 114;
    property thPostCompanyRate: Double readonly dispid 115;
    property thPostDailyRate: Double readonly dispid 116;
    property thPostDiscAmount: Double readonly dispid 117;
    property thPostDiscTaken: WordBool readonly dispid 118;
    property thLastDebtChaseLetter: Integer readonly dispid 119;
    property thExported: WordBool dispid 120;
    property thAsApplication: ITransactionAsApplication readonly dispid 121;
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ITransactionLine7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5955EC3D-364F-4BC8-9297-E7469A624EFA}
// *********************************************************************//
  ITransactionLine7 = interface(ITransactionLine6)
    ['{5955EC3D-364F-4BC8-9297-E7469A624EFA}']
    function Get_tlReference: WideString; safecall;
    procedure Set_tlReference(const Value: WideString); safecall;
    function Get_tlReceiptNo: WideString; safecall;
    procedure Set_tlReceiptNo(const Value: WideString); safecall;
    function Get_tlFromPostCode: WideString; safecall;
    procedure Set_tlFromPostCode(const Value: WideString); safecall;
    function Get_tlToPostCode: WideString; safecall;
    procedure Set_tlToPostCode(const Value: WideString); safecall;
    property tlReference: WideString read Get_tlReference write Set_tlReference;
    property tlReceiptNo: WideString read Get_tlReceiptNo write Set_tlReceiptNo;
    property tlFromPostCode: WideString read Get_tlFromPostCode write Set_tlFromPostCode;
    property tlToPostCode: WideString read Get_tlToPostCode write Set_tlToPostCode;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5955EC3D-364F-4BC8-9297-E7469A624EFA}
// *********************************************************************//
  ITransactionLine7Disp = dispinterface
    ['{5955EC3D-364F-4BC8-9297-E7469A624EFA}']
    property tlReference: WideString dispid 104;
    property tlReceiptNo: WideString dispid 105;
    property tlFromPostCode: WideString dispid 106;
    property tlToPostCode: WideString dispid 107;
    property tlECService: WordBool dispid 99;
    property tlECServiceStartDate: WideString dispid 100;
    property tlECServiceEndDate: WideString dispid 101;
    property tlECSalesTaxReported: Double readonly dispid 102;
    property tlECPurchaseServiceTax: Double readonly dispid 103;
    procedure LinkToSOR(const SORLine: ITransactionLine); dispid 96;
    property tlMultiBuyDiscounts: IMultiBuyDiscounts readonly dispid 97;
    property tlTotals[Index: TTransLineTotalsType]: Double readonly dispid 98;
    property tlMultiBuyDiscount: Double dispid 91;
    property tlMultiBuyDiscountFlag: WideString dispid 92;
    property tlTransValueDiscount: Double dispid 93;
    property tlTransValueDiscountFlag: WideString dispid 94;
    property tlTransValueDiscountType: TTransValueDiscountType dispid 95;
    property tlAsReturn: ITransactionLineAsReturn readonly dispid 86;
    function CreateReturn: ITransactionLineReturnCreate; dispid 88;
    property tlSerialReturnQty: Double readonly dispid 89;
    property tlBinReturnQty: Double readonly dispid 90;
    property tlMultiBin: ITransactionLineMultiBin readonly dispid 70;
    property tlAltStockCodeI: IAltStockCode readonly dispid 71;
    property tlRunNo: Integer readonly dispid 72;
    property tlStockDeductQty: Double readonly dispid 73;
    property tlUseQtyMul: WordBool readonly dispid 74;
    property tlReconciliationDate: WideString readonly dispid 76;
    property tlB2BLinkFolio: Integer readonly dispid 77;
    property tlB2BLineNo: Integer readonly dispid 78;
    property tlCOSDailyRate: Double readonly dispid 79;
    property tlVATIncValue: Double dispid 80;
    property tlBinQty: Double readonly dispid 81;
    procedure ExplodeBOM; dispid 82;
    property tlQtyPack: Double readonly dispid 84;
    property tlAsApplication: ITransactionLineAsApplication readonly dispid 87;
    procedure AddDescriptionLines; dispid 85;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: IEmployee6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7D8432E1-D53B-46CC-889B-48608087D805}
// *********************************************************************//
  IEmployee6 = interface(IEmployee5)
    ['{7D8432E1-D53B-46CC-889B-48608087D805}']
    function Get_emEmailAddress: WideString; safecall;
    procedure Set_emEmailAddress(const Value: WideString); safecall;
    property emEmailAddress: WideString read Get_emEmailAddress write Set_emEmailAddress;
  end;

// *********************************************************************//
// DispIntf:  IEmployee6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7D8432E1-D53B-46CC-889B-48608087D805}
// *********************************************************************//
  IEmployee6Disp = dispinterface
    ['{7D8432E1-D53B-46CC-889B-48608087D805}']
    property emEmailAddress: WideString dispid 40;
    property emUTRCode: WideString dispid 36;
    property emVerificationNo: WideString dispid 37;
    property emTagged: WordBool dispid 38;
    property emContractorType: TContractorType dispid 39;
    property emTimeRateRules: TTimeRateRulesType dispid 35;
    property emLabourViaPL: WordBool dispid 34;
    function Update: IEmployee2; dispid 23;
    function Add: IEmployee2; dispid 24;
    function Save: Integer; dispid 25;
    procedure Cancel; dispid 26;
    property emSelfBilling: WordBool dispid 27;
    property emGroupCertificate: WordBool dispid 28;
    property emCertificateType: TEmployeeCertificateType dispid 29;
    property emUserField3: WideString dispid 30;
    property emUserField4: WideString dispid 31;
    property emNISerialNo: WideString dispid 32;
    property emLinks: ILinks readonly dispid 33;
    property emCode: WideString dispid 1;
    property emSupplier: WideString dispid 2;
    property emName: WideString dispid 3;
    property emAddress: IAddress readonly dispid 4;
    property emPhone: WideString dispid 5;
    property emFax: WideString dispid 6;
    property emMobile: WideString dispid 7;
    property emType: TEmployeeType dispid 8;
    property emPayrollNumber: WideString dispid 9;
    property emCertificateNumber: WideString dispid 10;
    property emCertificateExpiry: WideString dispid 11;
    property emUserField1: WideString dispid 12;
    property emUserField2: WideString dispid 13;
    property emTimeRates: ITimeRates readonly dispid 14;
    property emCostCentre: WideString dispid 15;
    property emDepartment: WideString dispid 16;
    property emOwnTimeRatesOnly: WordBool dispid 17;
    function Clone: IEmployee; dispid 18;
    function BuildCodeIndex(const Code: WideString): WideString; dispid 19;
    function BuildSupplierIndex(const Supplier: WideString): WideString; dispid 20;
    property Index: TEmployeeIndex dispid 21;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property emNotes: INotes readonly dispid 22;
  end;

// *********************************************************************//
// Interface: ITransaction8
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2AE994E3-C451-4A21-A348-BB7DAFE63AC1}
// *********************************************************************//
  ITransaction8 = interface(ITransaction7)
    ['{2AE994E3-C451-4A21-A348-BB7DAFE63AC1}']
    function Get_thOverrideLocation: WideString; safecall;
    procedure Set_thOverrideLocation(const Value: WideString); safecall;
    property thOverrideLocation: WideString read Get_thOverrideLocation write Set_thOverrideLocation;
  end;

// *********************************************************************//
// DispIntf:  ITransaction8Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2AE994E3-C451-4A21-A348-BB7DAFE63AC1}
// *********************************************************************//
  ITransaction8Disp = dispinterface
    ['{2AE994E3-C451-4A21-A348-BB7DAFE63AC1}']
    property thOverrideLocation: WideString dispid 130;
    property thWeekMonth: Smallint dispid 128;
    property thWorkflowState: Integer dispid 129;
    function ApplyTTD(DiscountValue: Double; const DiscountFlag: WideString): Integer; dispid 125;
    procedure CalculateVBD(var VBDValue: Double; var VBDVAT: Double); dispid 127;
    property thVatPostDate: WideString readonly dispid 124;
    function BuildOutstandingIndexWithAccount(const StatusChare: WideString; 
                                              const AccountCode: WideString): WideString; dispid 126;
    property thAsReturn: ITransactionAsReturn readonly dispid 122;
    function CreateReturn: ITransactionReturnCreate; dispid 123;
    property thAutoTransaction: WordBool readonly dispid 106;
    property thDeliveryRunNo: WideString readonly dispid 107;
    property thExternal: WordBool readonly dispid 108;
    property thSettledVAT: Double readonly dispid 109;
    property thVATClaimed: Double readonly dispid 110;
    property thPickingRunNo: Integer readonly dispid 111;
    property thDeliveryNoteRef: WideString readonly dispid 112;
    property thVATCompanyRate: Double readonly dispid 113;
    property thVATDailyRate: Double readonly dispid 114;
    property thPostCompanyRate: Double readonly dispid 115;
    property thPostDailyRate: Double readonly dispid 116;
    property thPostDiscAmount: Double readonly dispid 117;
    property thPostDiscTaken: WordBool readonly dispid 118;
    property thLastDebtChaseLetter: Integer readonly dispid 119;
    property thExported: WordBool dispid 120;
    property thAsApplication: ITransactionAsApplication readonly dispid 121;
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: ISystemSetup8
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {62C11E7D-8DE3-4302-8D79-5A3F9E843825}
// *********************************************************************//
  ISystemSetup8 = interface(ISystemSetup7)
    ['{62C11E7D-8DE3-4302-8D79-5A3F9E843825}']
    function Get_ssEnableOverrideLocations: WordBool; safecall;
    property ssEnableOverrideLocations: WordBool read Get_ssEnableOverrideLocations;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetup8Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {62C11E7D-8DE3-4302-8D79-5A3F9E843825}
// *********************************************************************//
  ISystemSetup8Disp = dispinterface
    ['{62C11E7D-8DE3-4302-8D79-5A3F9E843825}']
    property ssEnableOverrideLocations: WordBool readonly dispid 128;
    property ssECServicesEnabled: WordBool readonly dispid 126;
    property ssECSalesThreshold: Double readonly dispid 127;
    property ssCurrentVatPeriod: WideString readonly dispid 123;
    property ssVatScheme: TVATSchemeType readonly dispid 124;
    property ssVATReturnInterval: Integer readonly dispid 125;
    property ssEnforceGLClasses: WordBool readonly dispid 122;
    property ssReturnLineReason: ISystemSetupReturnLineReason readonly dispid 121;
    property ssFilterByBinLocation: WordBool readonly dispid 116;
    property ssKeepBinHistory: WordBool readonly dispid 117;
    property ssBinMask: WideString readonly dispid 118;
    property ssBudgetByCCDeptEx: TBudgetByCCDeptType readonly dispid 119;
    property ssStatementUseInvoiceDateEx: TStatementUseInvoiceDateType readonly dispid 120;
    property ssWOPDisableWIP: WordBool readonly dispid 109;
    property ssWORAllocStockOnPick: WordBool readonly dispid 110;
    property ssWORCopyStkNotes: TWOPStockNotesType readonly dispid 111;
    property ssFormDefinitionSet: ISystemSetupFormDefinitionSet readonly dispid 114;
    property ssCISSetup: ISystemSetupCIS readonly dispid 115;
    property ssPeriodsInYear: Smallint readonly dispid 1;
    property ssCompanyName: WideString readonly dispid 2;
    property ssLastAuditYr: Smallint readonly dispid 3;
    property ssManUpdReorderCost: WordBool readonly dispid 4;
    property ssVATReturnCurrency: Smallint readonly dispid 5;
    property ssCostDecimals: Smallint readonly dispid 6;
    property ssShowStkPriceAsMargin: WordBool readonly dispid 8;
    property ssLiveStockCOSVal: WordBool readonly dispid 9;
    property ssSDNShowPickedOnly: WordBool readonly dispid 10;
    property ssUseLocations: WordBool readonly dispid 11;
    property ssSetBOMSerNo: WordBool readonly dispid 12;
    property ssWarnDupliYourRef: WordBool readonly dispid 13;
    property ssUseLocDelAddress: WordBool readonly dispid 14;
    property ssBudgetByCCDept: WordBool readonly dispid 15;
    property ssCurrencyTolerance: Double readonly dispid 16;
    property ssCurrencyToleranceMode: Smallint readonly dispid 17;
    property ssDebtChaseMode: Smallint readonly dispid 18;
    property ssAutoGenVariance: WordBool readonly dispid 19;
    property ssAutoGenDisc: WordBool readonly dispid 20;
    property ssCompanyCountryCode: WideString readonly dispid 21;
    property ssSalesDecimals: Smallint readonly dispid 22;
    property ssDebtChaseOverdue: Smallint readonly dispid 24;
    property ssCurrentPeriod: Smallint readonly dispid 25;
    property ssCurrentYear: Smallint readonly dispid 26;
    property ssTradeTerm: WordBool readonly dispid 27;
    property ssSeparateCurrencyStatements: WordBool readonly dispid 28;
    property ssStatementAgingMethod: Smallint readonly dispid 29;
    property ssStatementUseInvoiceDate: WordBool readonly dispid 30;
    property ssQuotesAllocateStock: WordBool readonly dispid 31;
    property ssDeductBOMComponents: WordBool readonly dispid 32;
    property ssAuthorisationMethod: WideString readonly dispid 33;
    property ssUseIntrastat: WordBool readonly dispid 34;
    property ssAnalyseDescOnly: WordBool readonly dispid 35;
    property ssDefaultStockValMethod: WideString readonly dispid 36;
    property ssDisplayUpdateCosts: WordBool readonly dispid 37;
    property ssAutoChequeNo: WordBool readonly dispid 38;
    property ssStatementIncNotDue: WordBool readonly dispid 39;
    property ssForceBatchTotalBalancing: WordBool readonly dispid 40;
    property ssDisplayStockLevelWarning: WordBool readonly dispid 41;
    property ssStatementNoteEntry: WordBool readonly dispid 42;
    property ssHideMenuOpt: WordBool readonly dispid 43;
    property ssUseCCDept: WordBool readonly dispid 44;
    property ssHoldSettlementDiscTransactions: WordBool readonly dispid 45;
    property ssSetTransPeriodByDate: WordBool readonly dispid 46;
    property ssStopOverCreditLimit: WordBool readonly dispid 47;
    property ssUseSRCPayInRef: WordBool readonly dispid 48;
    property ssUsePasswords: WordBool readonly dispid 49;
    property ssPromptToPrintReciept: WordBool readonly dispid 50;
    property ssExternalCustomers: WordBool readonly dispid 51;
    property ssQtyDecimals: Smallint readonly dispid 52;
    property ssExternalSINEntry: WordBool readonly dispid 53;
    property ssDisablePostingToPreviousPeriods: WordBool readonly dispid 54;
    property ssPercDiscounts: WordBool readonly dispid 55;
    property ssNumericAccountCodes: WordBool readonly dispid 56;
    property ssUpdateBalanceOnPosting: WordBool readonly dispid 57;
    property ssShowInvoiceDisc: WordBool readonly dispid 58;
    property ssSplitDiscountsInGL: WordBool readonly dispid 59;
    property ssDoCreditStatusCheck: WordBool readonly dispid 60;
    property ssDoCreditLimitCheck: WordBool readonly dispid 61;
    property ssAutoClearPayments: WordBool readonly dispid 62;
    property ssCurrencyRateType: TCurrencyRateType readonly dispid 63;
    property ssShowPeriodsAsMonths: WordBool readonly dispid 64;
    property ssDirectCustomer: WideString readonly dispid 65;
    property ssDirectSupplier: WideString readonly dispid 66;
    property ssSettlementDiscount: Double readonly dispid 69;
    property ssSettlementDays: Smallint readonly dispid 70;
    property ssNeedBOMCostingUpdate: WordBool readonly dispid 71;
    property ssInputPackQtyOnLine: WordBool readonly dispid 72;
    property ssDefaultVATCode: WideString readonly dispid 73;
    property ssPaymentTerms: Smallint readonly dispid 74;
    property ssStatementAgeingInterval: Smallint readonly dispid 75;
    property ssKeepQuoteDate: WordBool readonly dispid 76;
    property ssFreeStockExcludesSOR: WordBool readonly dispid 77;
    property ssSeparateDirectTransCounter: WordBool readonly dispid 78;
    property ssStatementShowMatchedInMonth: WordBool readonly dispid 79;
    property ssLiveOldestDebt: WordBool readonly dispid 80;
    property ssBatchPPY: WordBool readonly dispid 81;
    property ssDefaultBankGL: Integer readonly dispid 83;
    property ssUseDefaultBankAccount: WordBool readonly dispid 84;
    property ssYearStartDate: WideString readonly dispid 85;
    property ssLastAuditDate: WideString readonly dispid 86;
    property ssBankSortCode: WideString readonly dispid 87;
    property ssBankAccountNo: WideString readonly dispid 88;
    property ssBankAccountRef: WideString readonly dispid 89;
    property ssBankName: WideString readonly dispid 90;
    property ssCompanyPhone: WideString readonly dispid 92;
    property ssCompanyFax: WideString readonly dispid 93;
    property ssCompanyVATRegNo: WideString readonly dispid 94;
    property ssCompanyAddress[Index: Integer]: WideString readonly dispid 96;
    property ssGLCtrlCodes[Index: TSystemSetupGLCtrlType]: Integer readonly dispid 97;
    property ssDebtChaseDays[Index: Integer]: Smallint readonly dispid 98;
    property ssTermsofTrade[Index: Integer]: WideString readonly dispid 99;
    property ssVATRates[const Index: WideString]: ISystemSetupVat readonly dispid 95;
    property ssCurrency[Index: Integer]: ISystemSetupCurrency readonly dispid 100;
    property ssUserFields: ISystemSetupUserFields readonly dispid 101;
    property ssPickingOrderAllocatesStock: WordBool readonly dispid 102;
    property ssReleaseCodes: ISystemSetupReleaseCodes readonly dispid 103;
    property ssDocumentNumbers[const DocType: WideString]: Integer readonly dispid 104;
    property ssCurrencyVersion: TEnterpriseCurrencyVersion readonly dispid 7;
    property ssMaxCurrency: Integer readonly dispid 23;
    procedure Refresh; dispid 67;
    property ssUseDosKeys: WordBool readonly dispid 91;
    property ssHideEnterpriseLogo: WordBool readonly dispid 105;
    property ssConserveMemory: WordBool readonly dispid 106;
    property ssProtectYourRef: WordBool readonly dispid 107;
    property ssSDNDateIsTaxPointDate: WordBool readonly dispid 108;
    property ssAutoPostUplift: WordBool readonly dispid 112;
    property ssJobCosting: ISystemSetupJob readonly dispid 113;
    property ssPaperless: ISystemSetupPaperless readonly dispid 68;
    property ssTaxWord: WideString readonly dispid 82;
  end;

// *********************************************************************//
// Interface: IConfiguration2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AEDB6B9C-D3FA-45B5-AB55-BE83725999D1}
// *********************************************************************//
  IConfiguration2 = interface(IConfiguration)
    ['{AEDB6B9C-D3FA-45B5-AB55-BE83725999D1}']
    function Get_IgnoreCreditChecks: WordBool; safecall;
    procedure Set_IgnoreCreditChecks(Value: WordBool); safecall;
    property IgnoreCreditChecks: WordBool read Get_IgnoreCreditChecks write Set_IgnoreCreditChecks;
  end;

// *********************************************************************//
// DispIntf:  IConfiguration2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AEDB6B9C-D3FA-45B5-AB55-BE83725999D1}
// *********************************************************************//
  IConfiguration2Disp = dispinterface
    ['{AEDB6B9C-D3FA-45B5-AB55-BE83725999D1}']
    property IgnoreCreditChecks: WordBool dispid 21;
    property AllowTransactionEditing: WordBool dispid 14;
    property AutoSetPeriod: WordBool dispid 3;
    property AutoSetStockCost: WordBool dispid 8;
    property AutoSetTransCurrencyRates: WordBool dispid 13;
    property DataDirectory: WideString dispid 2;
    property DeductBOMStock: WordBool dispid 9;
    property DeductMultiLocationStock: WordBool dispid 10;
    property DefaultCostCentre: WideString dispid 5;
    property DefaultCurrency: Integer dispid 16;
    property DefaultDepartment: WideString dispid 6;
    property DefaultNominalCode: Integer dispid 4;
    property DefaultVATCode: WideString dispid 7;
    property EnterpriseDirectory: WideString dispid 1;
    property OverwriteNotepad: WordBool dispid 12;
    property OverwriteTransactionNumbers: WordBool dispid 11;
    property UpdateAccountBalances: WordBool dispid 17;
    property UpdateStockLevels: WordBool dispid 18;
    property ValidateJobCostingFields: WordBool dispid 19;
    function SetDebugMode(Param1: Integer; Param2: Integer; Param3: Integer): OleVariant; dispid 20;
    property ToolkitPath: WideString readonly dispid 15;
  end;

// *********************************************************************//
// Interface: ISerialBatch4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72843C45-88A4-4C7B-94BB-1F9B2BDAFFE9}
// *********************************************************************//
  ISerialBatch4 = interface(ISerialBatch3)
    ['{72843C45-88A4-4C7B-94BB-1F9B2BDAFFE9}']
    function Update: ISerialBatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISerialBatch4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72843C45-88A4-4C7B-94BB-1F9B2BDAFFE9}
// *********************************************************************//
  ISerialBatch4Disp = dispinterface
    ['{72843C45-88A4-4C7B-94BB-1F9B2BDAFFE9}']
    function Update: ISerialBatch; dispid 20;
    property snReturned: WordBool dispid 16;
    property snReturnOurRef: WideString dispid 17;
    property snBatchReturnedQty: Double dispid 18;
    property snReturnLineNo: Integer dispid 19;
    property snBinCode: WideString dispid 15;
    function BuildUsedSerialIndex(Sold: WordBool; const SerialNo: WideString): WideString; dispid 257;
    function Add: ISerialBatch; dispid 258;
    function Clone: ISerialBatch; dispid 260;
    function Save: Integer; dispid 261;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildSerialIndex(const SerialNo: WideString): WideString; dispid 6;
    function BuildBatchIndex(const BatchNo: WideString): WideString; dispid 7;
    property Index: TSerialBatchIndex dispid 8;
    property snSerialNo: WideString dispid 1;
    property snBatchNo: WideString dispid 2;
    property snType: TSerialBatchType readonly dispid 3;
    property snSold: WordBool dispid 4;
    property snUseByDate: WideString dispid 5;
    property snInDate: WideString dispid 9;
    property snInOrderRef: WideString dispid 10;
    property snInOrderLine: Integer dispid 11;
    property snInDocRef: WideString dispid 12;
    property snInDocLine: Integer dispid 13;
    property snInLocation: WideString dispid 14;
    property snOutDate: WideString dispid 21;
    property snOutOrderRef: WideString dispid 22;
    property snOutOrderLine: Integer dispid 23;
    property snOutDocRef: WideString dispid 24;
    property snOutDocLine: Integer dispid 25;
    property snOutLocation: WideString dispid 26;
    property snCostPrice: Double dispid 27;
    property snCostPriceCurrency: Smallint dispid 28;
    property snSalesPrice: Double dispid 29;
    property snSalesPriceCurrency: Smallint dispid 30;
    property snBatchQuantity: Double dispid 31;
    property snBatchQuantitySold: Double dispid 32;
    property snDailyRate: Double dispid 33;
    property snCompanyRate: Double dispid 34;
    property snNotes: INotes readonly dispid 35;
  end;

// *********************************************************************//
// Interface: IAccountBalance2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C8D2E1C-4443-499B-A44E-35902F838E2C}
// *********************************************************************//
  IAccountBalance2 = interface(IAccountBalance)
    ['{6C8D2E1C-4443-499B-A44E-35902F838E2C}']
    function Get_acRevisedBudget: Double; safecall;
    property acRevisedBudget: Double read Get_acRevisedBudget;
  end;

// *********************************************************************//
// DispIntf:  IAccountBalance2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C8D2E1C-4443-499B-A44E-35902F838E2C}
// *********************************************************************//
  IAccountBalance2Disp = dispinterface
    ['{6C8D2E1C-4443-499B-A44E-35902F838E2C}']
    property acRevisedBudget: Double readonly dispid 12;
    property acCurrency: Integer dispid 1;
    property acPeriod: Integer dispid 2;
    property acYear: Integer dispid 3;
    property acBalance: Double readonly dispid 4;
    property acSales: Double readonly dispid 5;
    property acCosts: Double readonly dispid 6;
    property acMargin: Double readonly dispid 7;
    property acDebits: Double readonly dispid 8;
    property acCredits: Double readonly dispid 9;
    property acBudget: Double readonly dispid 10;
    property acCommitted: Double readonly dispid 11;
  end;

// *********************************************************************//
// Interface: IUserProfile2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACA874E1-4F68-44FE-A627-4A2B00F2BAC2}
// *********************************************************************//
  IUserProfile2 = interface(IUserProfile)
    ['{ACA874E1-4F68-44FE-A627-4A2B00F2BAC2}']
    function Get_upShowGLCodesInTree: WordBool; safecall;
    property upShowGLCodesInTree: WordBool read Get_upShowGLCodesInTree;
  end;

// *********************************************************************//
// DispIntf:  IUserProfile2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACA874E1-4F68-44FE-A627-4A2B00F2BAC2}
// *********************************************************************//
  IUserProfile2Disp = dispinterface
    ['{ACA874E1-4F68-44FE-A627-4A2B00F2BAC2}']
    property upShowGLCodesInTree: WordBool readonly dispid 9;
    property Index: TUserIndexType dispid 20;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildUserIDIndex(const UserID: WideString): WideString; dispid 21;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    property KeyString: WideString readonly dispid 16777222;
    property upUserID: WideString readonly dispid 1;
    property upName: WideString readonly dispid 2;
    property upPWordExpiryMode: TPasswordExpiryType readonly dispid 4;
    property upPWordExpiryDays: Integer readonly dispid 5;
    property upPWordExpiryDate: WideString readonly dispid 6;
    property upLockOutMins: Integer readonly dispid 7;
    property upEmail: WideString readonly dispid 8;
    property upDefSRICust: WideString readonly dispid 26;
    property upDefPPISupp: WideString readonly dispid 27;
    property upMaxSalesAuth: Double readonly dispid 28;
    property upMaxPurchAuth: Double readonly dispid 29;
    property upDefSalesBankGL: Integer readonly dispid 30;
    property upDefPurchBankGL: Integer readonly dispid 31;
    property upReportPrinter: WideString readonly dispid 32;
    property upFormPrinter: WideString readonly dispid 33;
    property upEmailSignature: WideString readonly dispid 34;
    property upFaxSignature: WideString readonly dispid 35;
    property upCCDeptRule: TPriorityRuleType readonly dispid 36;
    property upDefCostCentre: WideString readonly dispid 37;
    property upDefDepartment: WideString readonly dispid 38;
    property upDefLocation: WideString readonly dispid 39;
    property upDefLocRule: TPriorityRuleType readonly dispid 40;
    property upSecurityFlags[Index: Integer]: TSecurityResultType readonly dispid 41;
    function Clone: IUserProfile; dispid 3;
  end;

// *********************************************************************//
// Interface: IAccount4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73EBC15B-CF39-4EA4-A358-3CAC72DBCDF9}
// *********************************************************************//
  IAccount4 = interface(IAccount3)
    ['{73EBC15B-CF39-4EA4-A358-3CAC72DBCDF9}']
    function Get_acUserDef5: WideString; safecall;
    procedure Set_acUserDef5(const Value: WideString); safecall;
    function Get_acUserDef6: WideString; safecall;
    procedure Set_acUserDef6(const Value: WideString); safecall;
    function Get_acUserDef7: WideString; safecall;
    procedure Set_acUserDef7(const Value: WideString); safecall;
    function Get_acUserDef8: WideString; safecall;
    procedure Set_acUserDef8(const Value: WideString); safecall;
    function Get_acUserDef9: WideString; safecall;
    procedure Set_acUserDef9(const Value: WideString); safecall;
    function Get_acUserDef10: WideString; safecall;
    procedure Set_acUserDef10(const Value: WideString); safecall;
    property acUserDef5: WideString read Get_acUserDef5 write Set_acUserDef5;
    property acUserDef6: WideString read Get_acUserDef6 write Set_acUserDef6;
    property acUserDef7: WideString read Get_acUserDef7 write Set_acUserDef7;
    property acUserDef8: WideString read Get_acUserDef8 write Set_acUserDef8;
    property acUserDef9: WideString read Get_acUserDef9 write Set_acUserDef9;
    property acUserDef10: WideString read Get_acUserDef10 write Set_acUserDef10;
  end;

// *********************************************************************//
// DispIntf:  IAccount4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73EBC15B-CF39-4EA4-A358-3CAC72DBCDF9}
// *********************************************************************//
  IAccount4Disp = dispinterface
    ['{73EBC15B-CF39-4EA4-A358-3CAC72DBCDF9}']
    property acUserDef5: WideString dispid 95;
    property acUserDef6: WideString dispid 96;
    property acUserDef7: WideString dispid 97;
    property acUserDef8: WideString dispid 98;
    property acUserDef9: WideString dispid 99;
    property acUserDef10: WideString dispid 100;
    property acMultiBuy: IMultiBuy readonly dispid 94;
    property acDefTagNo: Integer dispid 87;
    property acOfficeType: TAccountOfficeType dispid 88;
    property acOrderConsolidationMode: TOrderConsolidationModeType dispid 90;
    property acVATCountryCode: WideString dispid 91;
    property acLinks: ILinks readonly dispid 89;
    property acSalesAnalysis: ICustomerSalesAnalysis readonly dispid 92;
    function Print(PrintAs: TAccountPrintMode): IPrintJob; dispid 93;
    property acCode: WideString dispid 1;
    property acCompany: WideString dispid 2;
    property acArea: WideString dispid 3;
    property acAccType: WideString dispid 4;
    property acStatementTo: WideString dispid 5;
    property acVATRegNo: WideString dispid 6;
    property acAddress: IAddress readonly dispid 7;
    property acDelAddress: IAddress readonly dispid 8;
    property acContact: WideString dispid 9;
    property acPhone: WideString dispid 10;
    property acFax: WideString dispid 11;
    property acTheirAcc: WideString dispid 12;
    property acOwnTradTerm: WordBool dispid 13;
    property acTradeTerms[Index: Integer]: WideString dispid 14;
    property acCurrency: Smallint dispid 15;
    property acVATCode: WideString dispid 16;
    property acPayTerms: Smallint dispid 17;
    property acCreditLimit: Double dispid 18;
    property acDiscount: Double dispid 19;
    property acCreditStatus: Smallint dispid 20;
    property acCostCentre: WideString dispid 21;
    property acDiscountBand: WideString dispid 22;
    property acDepartment: WideString dispid 23;
    property acECMember: WordBool dispid 24;
    property acStatement: WordBool dispid 25;
    property acSalesGL: Integer dispid 26;
    property acLocation: WideString dispid 27;
    property acAccStatus: TAccountStatus dispid 28;
    property acPayType: WideString dispid 29;
    property acBankSort: WideString dispid 30;
    property acBankAcc: WideString dispid 31;
    property acBankRef: WideString dispid 32;
    property acLastUsed: WideString readonly dispid 33;
    property acPhone2: WideString dispid 34;
    property acUserDef1: WideString dispid 35;
    property acUserDef2: WideString dispid 36;
    property acInvoiceTo: WideString dispid 37;
    property acSOPAutoWOff: WordBool dispid 38;
    property acBookOrdVal: Double dispid 39;
    property acCOSGL: Integer dispid 40;
    property acDrCrGL: Integer dispid 41;
    property acDirDebMode: Smallint dispid 42;
    property acCCStart: WideString dispid 43;
    property acCCEnd: WideString dispid 44;
    property acCCName: WideString dispid 45;
    property acCCNumber: WideString dispid 46;
    property acCCSwitch: WideString dispid 47;
    property acDefSettleDays: Integer dispid 49;
    property acDefSettleDisc: Double dispid 50;
    property acFormSet: Smallint dispid 51;
    property acStateDeliveryMode: Integer dispid 52;
    property acEmailAddr: WideString dispid 53;
    property acSendReader: WordBool dispid 54;
    property acEBusPword: WideString dispid 55;
    property acAltCode: WideString dispid 56;
    property acPostCode: WideString dispid 57;
    property acUseForEbus: Integer dispid 58;
    property acZIPAttachments: TEmailAttachmentZIPType dispid 59;
    property acUserDef3: WideString dispid 60;
    property acUserDef4: WideString dispid 61;
    property acTimeStamp: WideString readonly dispid 62;
    property acSSDDeliveryTerms: WideString dispid 63;
    property acInclusiveVATCode: WideString dispid 64;
    property acSSDModeOfTransport: Integer dispid 65;
    property acLastOperator: WideString dispid 66;
    property acDocDeliveryMode: Integer dispid 67;
    property acSendHTML: WordBool dispid 68;
    property acWebLiveCatalog: WideString dispid 69;
    property acWebPrevCatalog: WideString dispid 70;
    property acHistory: IAccountBalance readonly dispid 71;
    function Save: Integer; dispid 72;
    function Add: IAccount; dispid 74;
    function Clone: IAccount; dispid 75;
    function Update: IAccount; dispid 76;
    procedure Cancel; dispid 77;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TAccountIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const AccountCode: WideString): WideString; dispid 78;
    function BuildNameIndex(const AccountName: WideString): WideString; dispid 79;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 48;
    function BuildVatRegIndex(const VatRegNo: WideString; const AccountCode: WideString): WideString; dispid 73;
    function BuildEmailIndex(const EmailAddr: WideString): WideString; dispid 80;
    function BuildPhoneIndex(const PhoneNo: WideString): WideString; dispid 81;
    function BuildPostCodeIndex(const PostCode: WideString): WideString; dispid 82;
    function BuildOurCodeIndex(const OurCode: WideString): WideString; dispid 83;
    function BuildInvoiceToIndex(const AccountCode: WideString): WideString; dispid 84;
    property acNotes: INotes readonly dispid 85;
    property acDiscounts: IAccountDiscount readonly dispid 86;
  end;

// *********************************************************************//
// Interface: ITransaction9
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E4AB4E7-B88D-4BAF-9F49-DC232E05DF82}
// *********************************************************************//
  ITransaction9 = interface(ITransaction8)
    ['{5E4AB4E7-B88D-4BAF-9F49-DC232E05DF82}']
    function Get_thUserField5: WideString; safecall;
    procedure Set_thUserField5(const Value: WideString); safecall;
    function Get_thUserField6: WideString; safecall;
    procedure Set_thUserField6(const Value: WideString); safecall;
    function Get_thUserField7: WideString; safecall;
    procedure Set_thUserField7(const Value: WideString); safecall;
    function Get_thUserField8: WideString; safecall;
    procedure Set_thUserField8(const Value: WideString); safecall;
    function Get_thUserField9: WideString; safecall;
    procedure Set_thUserField9(const Value: WideString); safecall;
    function Get_thUserField10: WideString; safecall;
    procedure Set_thUserField10(const Value: WideString); safecall;
    property thUserField5: WideString read Get_thUserField5 write Set_thUserField5;
    property thUserField6: WideString read Get_thUserField6 write Set_thUserField6;
    property thUserField7: WideString read Get_thUserField7 write Set_thUserField7;
    property thUserField8: WideString read Get_thUserField8 write Set_thUserField8;
    property thUserField9: WideString read Get_thUserField9 write Set_thUserField9;
    property thUserField10: WideString read Get_thUserField10 write Set_thUserField10;
  end;

// *********************************************************************//
// DispIntf:  ITransaction9Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E4AB4E7-B88D-4BAF-9F49-DC232E05DF82}
// *********************************************************************//
  ITransaction9Disp = dispinterface
    ['{5E4AB4E7-B88D-4BAF-9F49-DC232E05DF82}']
    property thUserField5: WideString dispid 131;
    property thUserField6: WideString dispid 132;
    property thUserField7: WideString dispid 133;
    property thUserField8: WideString dispid 134;
    property thUserField9: WideString dispid 135;
    property thUserField10: WideString dispid 136;
    property thOverrideLocation: WideString dispid 130;
    property thWeekMonth: Smallint dispid 128;
    property thWorkflowState: Integer dispid 129;
    function ApplyTTD(DiscountValue: Double; const DiscountFlag: WideString): Integer; dispid 125;
    procedure CalculateVBD(var VBDValue: Double; var VBDVAT: Double); dispid 127;
    property thVatPostDate: WideString readonly dispid 124;
    function BuildOutstandingIndexWithAccount(const StatusChare: WideString; 
                                              const AccountCode: WideString): WideString; dispid 126;
    property thAsReturn: ITransactionAsReturn readonly dispid 122;
    function CreateReturn: ITransactionReturnCreate; dispid 123;
    property thAutoTransaction: WordBool readonly dispid 106;
    property thDeliveryRunNo: WideString readonly dispid 107;
    property thExternal: WordBool readonly dispid 108;
    property thSettledVAT: Double readonly dispid 109;
    property thVATClaimed: Double readonly dispid 110;
    property thPickingRunNo: Integer readonly dispid 111;
    property thDeliveryNoteRef: WideString readonly dispid 112;
    property thVATCompanyRate: Double readonly dispid 113;
    property thVATDailyRate: Double readonly dispid 114;
    property thPostCompanyRate: Double readonly dispid 115;
    property thPostDailyRate: Double readonly dispid 116;
    property thPostDiscAmount: Double readonly dispid 117;
    property thPostDiscTaken: WordBool readonly dispid 118;
    property thLastDebtChaseLetter: Integer readonly dispid 119;
    property thExported: WordBool dispid 120;
    property thAsApplication: ITransactionAsApplication readonly dispid 121;
    function Print(PrintAs: TTransactionPrintMode): IPrintJob; dispid 83;
    property thAsNOM: ITransactionAsNOM readonly dispid 84;
    property thAsTSH: ITransactionAsTSH readonly dispid 85;
    property thAsADJ: ITransactionAsADJ readonly dispid 86;
    property thAsWOR: ITransactionAsWOR readonly dispid 87;
    property thLinks: ILinks readonly dispid 88;
    property thAutoSettings: IAutoTransactionSettings readonly dispid 89;
    function Copy: ITransaction2; dispid 90;
    function Reverse: ITransaction2; dispid 91;
    function Convert(DestDocType: TDocTypes): ISingleConvert; dispid 92;
    property thAsBatch: ITransactionAsBatch readonly dispid 94;
    function BackToBackOrder: IBackToBackOrder; dispid 93;
    function Delete: Integer; dispid 95;
    property thTagNo: Byte dispid 96;
    function UpdateEx(UpdateMode: TTransactionUpdateMode): ITransaction2; dispid 97;
    property thCISTaxDue: Double dispid 98;
    property thCISTaxDeclared: Double readonly dispid 99;
    property thCISManualTax: WordBool dispid 100;
    property thCISDate: WideString readonly dispid 101;
    property thCISTotalGross: Double dispid 102;
    property thCISSource: Byte readonly dispid 103;
    property thTotalCostApport: Double dispid 104;
    property thCISEmployee: WideString dispid 105;
    property thOurRef: WideString dispid 1;
    property thYourRef: WideString dispid 2;
    property thAcCode: WideString dispid 3;
    property thRunNo: Integer readonly dispid 4;
    property thFolioNum: Integer dispid 5;
    property thCurrency: Smallint dispid 6;
    property thYear: Smallint dispid 7;
    property thPeriod: Smallint dispid 8;
    property thTransDate: WideString dispid 9;
    property thDueDate: WideString dispid 10;
    property thCompanyRate: Double dispid 11;
    property thDailyRate: Double dispid 12;
    property thDocType: TDocTypes readonly dispid 13;
    property thVATAnalysis[const Index: WideString]: Double dispid 14;
    property thNetValue: Double dispid 15;
    property thTotalVAT: Double dispid 16;
    property thSettleDiscPerc: Double dispid 17;
    property thSettleDiscAmount: Double dispid 18;
    property thTotalLineDiscount: Double dispid 19;
    property thSettleDiscDays: Smallint dispid 20;
    property thSettleDiscTaken: WordBool dispid 21;
    property thAmountSettled: Double readonly dispid 22;
    property thTransportNature: Smallint dispid 23;
    property thTransportMode: Smallint dispid 24;
    property thHoldFlag: Smallint dispid 25;
    property thTotalWeight: Double dispid 26;
    property thDelAddress: IAddress readonly dispid 27;
    property thTotalCost: Double dispid 28;
    property thPrinted: WordBool readonly dispid 29;
    property thManualVAT: WordBool dispid 30;
    property thDeliveryTerms: WideString dispid 31;
    property thOperator: WideString dispid 32;
    property thJobCode: WideString dispid 33;
    property thAnalysisCode: WideString dispid 34;
    property thTotalOrderOS: Double dispid 35;
    property thUserField1: WideString dispid 36;
    property thUserField2: WideString dispid 37;
    property thUserField3: WideString dispid 38;
    property thUserField4: WideString dispid 39;
    property thTagged: WordBool dispid 40;
    property thNoLabels: Smallint dispid 41;
    property thControlGL: Integer dispid 42;
    property thProcess: TIntrastatProcess dispid 43;
    property thSource: Integer readonly dispid 44;
    property thPostedDate: WideString readonly dispid 45;
    property thPORPickSOR: WordBool dispid 46;
    property thBatchDiscAmount: Double dispid 47;
    property thPrePost: Integer dispid 48;
    property thOutstanding: WideString readonly dispid 49;
    property thFixedRate: WordBool dispid 50;
    property thLongYourRef: WideString dispid 51;
    property thAcCodeI: IAccount readonly dispid 52;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TTransactionIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    property thLines: ITransactionLines readonly dispid 53;
    property thGoodsAnalysis[const Index: WideString]: Double readonly dispid 55;
    property thLineTypeAnalysis[Index: Integer]: Double readonly dispid 56;
    function entCanUpdate: WordBool; dispid 57;
    function Add(TransactionType: TDocTypes): ITransaction; dispid 58;
    function Update: ITransaction; dispid 59;
    function Save(CalculateTotals: WordBool): Integer; dispid 60;
    procedure Cancel; dispid 61;
    function Clone: ITransaction; dispid 62;
    property SaveErrorLine: Integer readonly dispid 63;
    function BuildOurRefIndex(const OurRef: WideString): WideString; dispid 64;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 65;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 66;
    property thEmployeeCode: WideString dispid 67;
    procedure ImportDefaults; dispid 68;
    procedure UpdateTotals; dispid 69;
    function BuildYourRefIndex(const YourRef: WideString): WideString; dispid 70;
    function BuildLongYourRefIndex(const LongYourRef: WideString): WideString; dispid 71;
    function BuildRunNoIndex(RunNo: Integer; const DocChar: WideString): WideString; dispid 72;
    function BuildAccountDueIndex(const AccountType: WideString; const AccountCode: WideString; 
                                  const DueDate: WideString): WideString; dispid 73;
    function BuildPostedDateIndex(const PostedDate: WideString; const OurRef: WideString): WideString; dispid 74;
    function BuildTransDateIndex(const TransDate: WideString): WideString; dispid 75;
    function BuildYearPeriodIndex(AccountingYear: Integer; AccountingPeriod: Integer): WideString; dispid 76;
    function BuildOutstandingIndex(const StatusChar: WideString): WideString; dispid 77;
    procedure AllocateTransNo; dispid 78;
    property thNotes: INotes readonly dispid 79;
    property thTotals[TotalType: TTransTotalsType]: Double readonly dispid 80;
    property thMatching: IMatching readonly dispid 54;
    property thAnalysisCodeI: IJobAnalysis readonly dispid 81;
    property thJobCodeI: IJob readonly dispid 82;
  end;

// *********************************************************************//
// Interface: IStock6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B39EC71-0D22-4076-AF79-A1D2A222678A}
// *********************************************************************//
  IStock6 = interface(IStock5)
    ['{5B39EC71-0D22-4076-AF79-A1D2A222678A}']
    function Get_stUserField5: WideString; safecall;
    procedure Set_stUserField5(const Value: WideString); safecall;
    function Get_stUserField6: WideString; safecall;
    procedure Set_stUserField6(const Value: WideString); safecall;
    function Get_stUserField7: WideString; safecall;
    procedure Set_stUserField7(const Value: WideString); safecall;
    function Get_stUserField8: WideString; safecall;
    procedure Set_stUserField8(const Value: WideString); safecall;
    function Get_stUserField9: WideString; safecall;
    procedure Set_stUserField9(const Value: WideString); safecall;
    function Get_stUserField10: WideString; safecall;
    procedure Set_stUserField10(const Value: WideString); safecall;
    property stUserField5: WideString read Get_stUserField5 write Set_stUserField5;
    property stUserField6: WideString read Get_stUserField6 write Set_stUserField6;
    property stUserField7: WideString read Get_stUserField7 write Set_stUserField7;
    property stUserField8: WideString read Get_stUserField8 write Set_stUserField8;
    property stUserField9: WideString read Get_stUserField9 write Set_stUserField9;
    property stUserField10: WideString read Get_stUserField10 write Set_stUserField10;
  end;

// *********************************************************************//
// DispIntf:  IStock6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B39EC71-0D22-4076-AF79-A1D2A222678A}
// *********************************************************************//
  IStock6Disp = dispinterface
    ['{5B39EC71-0D22-4076-AF79-A1D2A222678A}']
    property stUserField5: WideString dispid 117;
    property stUserField6: WideString dispid 118;
    property stUserField7: WideString dispid 119;
    property stUserField8: WideString dispid 120;
    property stUserField9: WideString dispid 121;
    property stUserField10: WideString dispid 122;
    property stMultiBuy: IMultiBuy readonly dispid 116;
    property stSalesWarrantyLength: Integer dispid 103;
    property stSalesWarrantyUnits: TWarrantyUnitsType dispid 104;
    property stManufacturerWarrantyLength: Integer dispid 108;
    property stManufacturerWarrantyUnits: TWarrantyUnitsType dispid 109;
    property stSalesReturnGL: Integer dispid 111;
    property stPurchaseReturnGL: Integer dispid 112;
    property stRestockCharge: Double dispid 113;
    property stSalesReturnQty: Double readonly dispid 114;
    property stPurchaseReturnQty: Double readonly dispid 115;
    property stRestockFlag: TRestockChargeType dispid 110;
    property stEquivalent: IAltStockCode2 readonly dispid 105;
    property stSupersededBy: IAltStockCode2 readonly dispid 106;
    property stOpportunity: IAltStockCode2 readonly dispid 107;
    property stBOMProductionTime: Integer readonly dispid 81;
    property stQtyAllocWOR: Double readonly dispid 82;
    property stQtyFreeze: Double readonly dispid 83;
    property stQtyIssuedWOR: Double readonly dispid 84;
    property stQtyPickedWOR: Double readonly dispid 85;
    property stQtyStockTake: Double dispid 86;
    property stWOPAssemblyDays: Integer dispid 87;
    property stWOPAssemblyHours: Integer dispid 88;
    property stWOPAssemblyMins: Integer dispid 89;
    property stWOPAutoCalcTime: WordBool dispid 90;
    property stWOPIssuedWIPGL: Integer dispid 91;
    property stWOPMinEconBuild: Double dispid 92;
    property stWOPRoLeadTime: Integer dispid 93;
    property stUsesBins: WordBool dispid 94;
    property stStockTakeQtyChanged: WordBool readonly dispid 95;
    property stShowKitOnSales: WordBool dispid 96;
    property stLinks: ILinks readonly dispid 97;
    property stAltStockCode: IAltStockCode readonly dispid 98;
    property stMultiBin: IMultiBin readonly dispid 99;
    property stSalesAnalysis: IStockSalesAnalysis readonly dispid 100;
    function Print(PrintAs: TStockPrintMode): IPrintJob; dispid 101;
    function Discontinue(RetainComponents: WordBool): Integer; dispid 102;
    property stCode: WideString dispid 1;
    property stDesc[Index: Integer]: WideString dispid 2;
    property stAltCode: WideString dispid 3;
    property stType: TStockType dispid 4;
    property stSalesGL: Integer dispid 5;
    property stCOSGL: Integer dispid 6;
    property stPandLGL: Integer dispid 7;
    property stBalSheetGL: Integer dispid 8;
    property stWIPGL: Integer dispid 9;
    property stBelowMinLevel: WordBool dispid 10;
    property stFolioNum: Integer readonly dispid 11;
    property stParentCode: WideString dispid 12;
    property stSuppTemp: WideString dispid 13;
    property stUnitOfStock: WideString dispid 14;
    property stUnitOfSale: WideString dispid 15;
    property stUnitOfPurch: WideString dispid 16;
    property stCostPriceCur: Integer dispid 17;
    property stCostPrice: Double dispid 18;
    property stSalesUnits: Double dispid 19;
    property stPurchUnits: Double dispid 20;
    property stVATCode: WideString dispid 21;
    property stCostCentre: WideString dispid 22;
    property stDepartment: WideString dispid 23;
    property stQtyInStock: Double readonly dispid 24;
    property stQtyPosted: Double readonly dispid 25;
    property stQtyAllocated: Double readonly dispid 26;
    property stQtyOnOrder: Double readonly dispid 27;
    property stQtyMin: Double dispid 28;
    property stQtyMax: Double dispid 29;
    property stBinLocation: WideString dispid 36;
    property stCover: IStockCover readonly dispid 37;
    property stIntrastat: IStockIntrastat readonly dispid 38;
    property stReorder: IStockReorder readonly dispid 39;
    property stAnalysisCode: WideString dispid 40;
    property stSalesBands[const Band: WideString]: IStockSalesBand readonly dispid 41;
    property stTimeChange: WideString readonly dispid 42;
    property stInclusiveVATCode: WideString dispid 43;
    property stOperator: WideString dispid 44;
    property stSupplier: WideString dispid 45;
    property stSupplierI: IAccount readonly dispid 46;
    property stDefaultLineType: TTransactionLineType dispid 47;
    property stValuationMethod: TStockValuationType dispid 52;
    property stQtyPicked: Double readonly dispid 53;
    property stLastUsed: WideString readonly dispid 54;
    property stBarCode: WideString dispid 55;
    property stLocation: WideString dispid 56;
    property stPricingMethod: TStockPricingMethod dispid 57;
    property stShowQtyAsPacks: WordBool dispid 58;
    property stUseKitPrice: WordBool dispid 59;
    property stUserField1: WideString dispid 60;
    property stUserField2: WideString dispid 61;
    property stUserField3: WideString dispid 62;
    property stUserField4: WideString dispid 63;
    property stShowKitOnPurchase: WordBool dispid 64;
    property stImageFile: WideString dispid 65;
    property stWebLiveCatalog: WideString dispid 66;
    property stWebPrevCatalog: WideString dispid 67;
    property stUseForEbus: WordBool dispid 68;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TStockIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Add: IStock; dispid 30;
    function Update: IStock; dispid 31;
    function Clone: IStock; dispid 32;
    function Save: Integer; dispid 33;
    procedure Cancel; dispid 34;
    function BuildCodeIndex(const StockCode: WideString): WideString; dispid 35;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 48;
    function BuildParentIndex(const ParentCode: WideString; const ChildCode: WideString): WideString; dispid 49;
    function BuildDescIndex(const Desc: WideString): WideString; dispid 50;
    property stLocationList: IStockLocation readonly dispid 51;
    function BuildSupplierIndex(const AccountCode: WideString; CostCurrency: Integer; 
                                const StockCode: WideString): WideString; dispid 69;
    function BuildPandLIndex(PandLGL: Integer; const StockCode: WideString): WideString; dispid 70;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 71;
    function BuildBinLocIndex(const BinLocation: WideString): WideString; dispid 72;
    function BuildBarCodeIndex(const BarCode: WideString): WideString; dispid 73;
    property stNotes: INotes readonly dispid 74;
    property stQtyFree: Double readonly dispid 75;
    property stQtyBreaks: IQuantityBreak readonly dispid 76;
    property stAnalysisCodeI: IJobAnalysis readonly dispid 77;
    property stWhereUsed: IStockWhereUsed readonly dispid 78;
    property stBillOfMaterials: IStockBOMList readonly dispid 79;
    property stSerialBatch: ISerialBatch readonly dispid 80;
  end;

// *********************************************************************//
// Interface: IJob5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44EA0142-F0CC-4D8A-A59F-BACBDA752BA9}
// *********************************************************************//
  IJob5 = interface(IJob4)
    ['{44EA0142-F0CC-4D8A-A59F-BACBDA752BA9}']
    function Get_jrUserField5: WideString; safecall;
    procedure Set_jrUserField5(const Value: WideString); safecall;
    function Get_jrUserField6: WideString; safecall;
    procedure Set_jrUserField6(const Value: WideString); safecall;
    function Get_jrUserField7: WideString; safecall;
    procedure Set_jrUserField7(const Value: WideString); safecall;
    function Get_jrUserField8: WideString; safecall;
    procedure Set_jrUserField8(const Value: WideString); safecall;
    function Get_jrUserField9: WideString; safecall;
    procedure Set_jrUserField9(const Value: WideString); safecall;
    function Get_jrUserField10: WideString; safecall;
    procedure Set_jrUserField10(const Value: WideString); safecall;
    property jrUserField5: WideString read Get_jrUserField5 write Set_jrUserField5;
    property jrUserField6: WideString read Get_jrUserField6 write Set_jrUserField6;
    property jrUserField7: WideString read Get_jrUserField7 write Set_jrUserField7;
    property jrUserField8: WideString read Get_jrUserField8 write Set_jrUserField8;
    property jrUserField9: WideString read Get_jrUserField9 write Set_jrUserField9;
    property jrUserField10: WideString read Get_jrUserField10 write Set_jrUserField10;
  end;

// *********************************************************************//
// DispIntf:  IJob5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44EA0142-F0CC-4D8A-A59F-BACBDA752BA9}
// *********************************************************************//
  IJob5Disp = dispinterface
    ['{44EA0142-F0CC-4D8A-A59F-BACBDA752BA9}']
    property jrUserField5: WideString dispid 51;
    property jrUserField6: WideString dispid 52;
    property jrUserField7: WideString dispid 53;
    property jrUserField8: WideString dispid 54;
    property jrUserField9: WideString dispid 55;
    property jrUserField10: WideString dispid 56;
    property jrUserField3: WideString dispid 49;
    property jrUserField4: WideString dispid 50;
    property jrApplications: IJobApplications readonly dispid 47;
    property jrTimeRates: ITimeRates readonly dispid 48;
    property jrLinks: ILinks readonly dispid 38;
    property jrJobActual: IJobActual readonly dispid 39;
    property jrPurchaseRetention: IJobRetention readonly dispid 40;
    property jrSalesRetention: IJobRetention readonly dispid 41;
    property jrSummaryBudget: ISummaryJobBudget readonly dispid 42;
    property jrAnalysisBudget: IAnalysisJobBudget readonly dispid 43;
    property jrTimeAndStockBudget: ITimeAndStockJobBudget readonly dispid 44;
    function Invoice: IJobInvoice; dispid 45;
    function Print(PrintAs: TJobPrintMode): IPrintJob; dispid 46;
    property jrCode: WideString dispid 1;
    property jrDesc: WideString dispid 2;
    property jrFolio: Integer readonly dispid 3;
    property jrAcCode: WideString dispid 4;
    property jrParent: WideString dispid 5;
    property jrAltCode: WideString dispid 6;
    property jrCompleted: WordBool dispid 7;
    property jrContact: WideString dispid 8;
    property jrManager: WideString dispid 9;
    property jrChargeType: TJobChargeType dispid 10;
    property jrQuotePrice: Double dispid 11;
    property jrQuotePriceCurr: Smallint dispid 12;
    property jrStartDate: WideString dispid 13;
    property jrEndDate: WideString dispid 14;
    property jrRevisedEndDate: WideString dispid 15;
    property jrSORNumber: WideString dispid 16;
    property jrVATCode: WideString dispid 17;
    property jrJobType: WideString dispid 20;
    property jrType: TJobTypeType dispid 21;
    property jrStatus: TJobStatusType dispid 22;
    property jrUserField1: WideString dispid 23;
    property jrUserField2: WideString dispid 24;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TJobIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const JobCode: WideString): WideString; dispid 18;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 19;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; dispid 25;
    function Add: IJob; dispid 26;
    function Update: IJob; dispid 27;
    function Clone: IJob; dispid 28;
    function Save: Integer; dispid 29;
    procedure Cancel; dispid 30;
    function BuildDescIndex(const Description: WideString): WideString; dispid 31;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; dispid 32;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; dispid 33;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 34;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 35;
    property jrNotes: INotes readonly dispid 36;
    property jrJobTypeI: IJobType readonly dispid 37;
  end;

// *********************************************************************//
// Interface: ITransactionLine8
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E4BC4E0-1E90-4796-93E8-36F8E855D28A}
// *********************************************************************//
  ITransactionLine8 = interface(ITransactionLine7)
    ['{0E4BC4E0-1E90-4796-93E8-36F8E855D28A}']
    function Get_tlUserField5: WideString; safecall;
    procedure Set_tlUserField5(const Value: WideString); safecall;
    function Get_tlUserField6: WideString; safecall;
    procedure Set_tlUserField6(const Value: WideString); safecall;
    function Get_tlUserField7: WideString; safecall;
    procedure Set_tlUserField7(const Value: WideString); safecall;
    function Get_tlUserField8: WideString; safecall;
    procedure Set_tlUserField8(const Value: WideString); safecall;
    function Get_tlUserField9: WideString; safecall;
    procedure Set_tlUserField9(const Value: WideString); safecall;
    function Get_tlUserField10: WideString; safecall;
    procedure Set_tlUserField10(const Value: WideString); safecall;
    property tlUserField5: WideString read Get_tlUserField5 write Set_tlUserField5;
    property tlUserField6: WideString read Get_tlUserField6 write Set_tlUserField6;
    property tlUserField7: WideString read Get_tlUserField7 write Set_tlUserField7;
    property tlUserField8: WideString read Get_tlUserField8 write Set_tlUserField8;
    property tlUserField9: WideString read Get_tlUserField9 write Set_tlUserField9;
    property tlUserField10: WideString read Get_tlUserField10 write Set_tlUserField10;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine8Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E4BC4E0-1E90-4796-93E8-36F8E855D28A}
// *********************************************************************//
  ITransactionLine8Disp = dispinterface
    ['{0E4BC4E0-1E90-4796-93E8-36F8E855D28A}']
    property tlUserField5: WideString dispid 108;
    property tlUserField6: WideString dispid 109;
    property tlUserField7: WideString dispid 110;
    property tlUserField8: WideString dispid 111;
    property tlUserField9: WideString dispid 112;
    property tlUserField10: WideString dispid 113;
    property tlReference: WideString dispid 104;
    property tlReceiptNo: WideString dispid 105;
    property tlFromPostCode: WideString dispid 106;
    property tlToPostCode: WideString dispid 107;
    property tlECService: WordBool dispid 99;
    property tlECServiceStartDate: WideString dispid 100;
    property tlECServiceEndDate: WideString dispid 101;
    property tlECSalesTaxReported: Double readonly dispid 102;
    property tlECPurchaseServiceTax: Double readonly dispid 103;
    procedure LinkToSOR(const SORLine: ITransactionLine); dispid 96;
    property tlMultiBuyDiscounts: IMultiBuyDiscounts readonly dispid 97;
    property tlTotals[Index: TTransLineTotalsType]: Double readonly dispid 98;
    property tlMultiBuyDiscount: Double dispid 91;
    property tlMultiBuyDiscountFlag: WideString dispid 92;
    property tlTransValueDiscount: Double dispid 93;
    property tlTransValueDiscountFlag: WideString dispid 94;
    property tlTransValueDiscountType: TTransValueDiscountType dispid 95;
    property tlAsReturn: ITransactionLineAsReturn readonly dispid 86;
    function CreateReturn: ITransactionLineReturnCreate; dispid 88;
    property tlSerialReturnQty: Double readonly dispid 89;
    property tlBinReturnQty: Double readonly dispid 90;
    property tlMultiBin: ITransactionLineMultiBin readonly dispid 70;
    property tlAltStockCodeI: IAltStockCode readonly dispid 71;
    property tlRunNo: Integer readonly dispid 72;
    property tlStockDeductQty: Double readonly dispid 73;
    property tlUseQtyMul: WordBool readonly dispid 74;
    property tlReconciliationDate: WideString readonly dispid 76;
    property tlB2BLinkFolio: Integer readonly dispid 77;
    property tlB2BLineNo: Integer readonly dispid 78;
    property tlCOSDailyRate: Double readonly dispid 79;
    property tlVATIncValue: Double dispid 80;
    property tlBinQty: Double readonly dispid 81;
    procedure ExplodeBOM; dispid 82;
    property tlQtyPack: Double readonly dispid 84;
    property tlAsApplication: ITransactionLineAsApplication readonly dispid 87;
    procedure AddDescriptionLines; dispid 85;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: ISystemSetupUserFields3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DC3663F3-0492-4BE7-9CF3-F100AFEF97A1}
// *********************************************************************//
  ISystemSetupUserFields3 = interface(ISystemSetupUserFields2)
    ['{DC3663F3-0492-4BE7-9CF3-F100AFEF97A1}']
    function Get_ufSRNDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSRNEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufSRNLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufSRNLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPRNDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPRNEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufPRNLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufPRNLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    property ufSRNDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSRNDesc;
    property ufSRNEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSRNEnabled;
    property ufSRNLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufSRNLineDesc;
    property ufSRNLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufSRNLineEnabled;
    property ufPRNDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPRNDesc;
    property ufPRNEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPRNEnabled;
    property ufPRNLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufPRNLineDesc;
    property ufPRNLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufPRNLineEnabled;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupUserFields3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DC3663F3-0492-4BE7-9CF3-F100AFEF97A1}
// *********************************************************************//
  ISystemSetupUserFields3Disp = dispinterface
    ['{DC3663F3-0492-4BE7-9CF3-F100AFEF97A1}']
    property ufSRNDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 89;
    property ufSRNEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 90;
    property ufSRNLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 91;
    property ufSRNLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 92;
    property ufPRNDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 93;
    property ufPRNEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 94;
    property ufPRNLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 95;
    property ufPRNLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 96;
    property ufADJDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 19;
    property ufADJEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 36;
    property ufADJLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 37;
    property ufADJLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 38;
    property ufCustDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 39;
    property ufEmployeeDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 40;
    property ufJobDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 41;
    property ufLineTypeDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 42;
    property ufNOMDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 43;
    property ufNOMEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 44;
    property ufNOMLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 45;
    property ufNOMLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 46;
    property ufPINDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 47;
    property ufPINEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 48;
    property ufPINLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 49;
    property ufPINLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 50;
    property ufPORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 51;
    property ufPOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 52;
    property ufPORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 53;
    property ufPORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 54;
    property ufPPYDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 55;
    property ufPPYEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 56;
    property ufPPYLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 57;
    property ufPPYLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 58;
    property ufPQUDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 59;
    property ufPQUEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 60;
    property ufPQULineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 61;
    property ufPQULineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 62;
    property ufSINDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 63;
    property ufSINEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 64;
    property ufSINLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 65;
    property ufSINLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 66;
    property ufSORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 67;
    property ufSOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 68;
    property ufSORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 69;
    property ufSORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 70;
    property ufSQUDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 71;
    property ufSQUEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 72;
    property ufSQULineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 73;
    property ufSQULineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 74;
    property ufSRCDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 75;
    property ufSRCEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 76;
    property ufSRCLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 77;
    property ufSRCLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 78;
    property ufStockDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 79;
    property ufSuppDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 80;
    property ufTSHDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 81;
    property ufTSHEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 82;
    property ufTSHLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 83;
    property ufTSHLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 84;
    property ufWORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 85;
    property ufWOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 86;
    property ufWORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 87;
    property ufWORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 88;
    property ufAccount1: WideString readonly dispid 1;
    property ufAccount2: WideString readonly dispid 2;
    property ufAccount3: WideString readonly dispid 3;
    property ufAccount4: WideString readonly dispid 4;
    property ufTrans1: WideString readonly dispid 5;
    property ufTrans2: WideString readonly dispid 6;
    property ufTrans3: WideString readonly dispid 7;
    property ufTrans4: WideString readonly dispid 8;
    property ufStock1: WideString readonly dispid 9;
    property ufStock2: WideString readonly dispid 10;
    property ufStock3: WideString readonly dispid 11;
    property ufStock4: WideString readonly dispid 12;
    property ufLine1: WideString readonly dispid 13;
    property ufLine2: WideString readonly dispid 14;
    property ufLine3: WideString readonly dispid 15;
    property ufLine4: WideString readonly dispid 16;
    property ufJob1: WideString readonly dispid 17;
    property ufJob2: WideString readonly dispid 18;
    property ufTrans1Enabled: WordBool readonly dispid 20;
    property ufTrans2Enabled: WordBool readonly dispid 21;
    property ufTrans3Enabled: WordBool readonly dispid 22;
    property ufTrans4Enabled: WordBool readonly dispid 23;
    property ufLine1Enabled: WordBool readonly dispid 24;
    property ufLine2Enabled: WordBool readonly dispid 25;
    property ufLine3Enabled: WordBool readonly dispid 26;
    property ufLine4Enabled: WordBool readonly dispid 27;
    property ufLineType1: WideString readonly dispid 28;
    property ufLineType2: WideString readonly dispid 29;
    property ufLineType3: WideString readonly dispid 30;
    property ufLineType4: WideString readonly dispid 31;
    property ufLineType1Enabled: WordBool readonly dispid 32;
    property ufLineType2Enabled: WordBool readonly dispid 33;
    property ufLineType3Enabled: WordBool readonly dispid 34;
    property ufLineType4Enabled: WordBool readonly dispid 35;
  end;

// *********************************************************************//
// Interface: IConversionLibrary
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FF7B25C-CD0F-43D5-B002-14F40E2A80F4}
// *********************************************************************//
  IConversionLibrary = interface(IDispatch)
    ['{9FF7B25C-CD0F-43D5-B002-14F40E2A80F4}']
    procedure Finalize; safecall;
  end;

// *********************************************************************//
// DispIntf:  IConversionLibraryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FF7B25C-CD0F-43D5-B002-14F40E2A80F4}
// *********************************************************************//
  IConversionLibraryDisp = dispinterface
    ['{9FF7B25C-CD0F-43D5-B002-14F40E2A80F4}']
    procedure Finalize; dispid 1;
  end;

// *********************************************************************//
// Interface: ISystemSetupUserFields4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85F05233-BE25-4DCA-B6DD-65103B94290D}
// *********************************************************************//
  ISystemSetupUserFields4 = interface(ISystemSetupUserFields3)
    ['{85F05233-BE25-4DCA-B6DD-65103B94290D}']
    function Get_ufJCTDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJCTEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJCTLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJCTLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJPTDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJPTEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJPTLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJPTLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJSTDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJSTEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJSTLineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJSTLineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJPADesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJPAEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJPALineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJPALineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJSADesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJSAEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    function Get_ufJSALineDesc(Index: TUserDefinedFieldNo): WideString; safecall;
    function Get_ufJSALineEnabled(Index: TUserDefinedFieldNo): WordBool; safecall;
    property ufJCTDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJCTDesc;
    property ufJCTEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJCTEnabled;
    property ufJCTLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJCTLineDesc;
    property ufJCTLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJCTLineEnabled;
    property ufJPTDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJPTDesc;
    property ufJPTEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJPTEnabled;
    property ufJPTLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJPTLineDesc;
    property ufJPTLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJPTLineEnabled;
    property ufJSTDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJSTDesc;
    property ufJSTEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJSTEnabled;
    property ufJSTLineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJSTLineDesc;
    property ufJSTLineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJSTLineEnabled;
    property ufJPADesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJPADesc;
    property ufJPAEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJPAEnabled;
    property ufJPALineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJPALineDesc;
    property ufJPALineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJPALineEnabled;
    property ufJSADesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJSADesc;
    property ufJSAEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJSAEnabled;
    property ufJSALineDesc[Index: TUserDefinedFieldNo]: WideString read Get_ufJSALineDesc;
    property ufJSALineEnabled[Index: TUserDefinedFieldNo]: WordBool read Get_ufJSALineEnabled;
  end;

// *********************************************************************//
// DispIntf:  ISystemSetupUserFields4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85F05233-BE25-4DCA-B6DD-65103B94290D}
// *********************************************************************//
  ISystemSetupUserFields4Disp = dispinterface
    ['{85F05233-BE25-4DCA-B6DD-65103B94290D}']
    property ufJCTDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 97;
    property ufJCTEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 98;
    property ufJCTLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 99;
    property ufJCTLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 100;
    property ufJPTDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 101;
    property ufJPTEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 102;
    property ufJPTLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 103;
    property ufJPTLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 104;
    property ufJSTDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 105;
    property ufJSTEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 106;
    property ufJSTLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 107;
    property ufJSTLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 108;
    property ufJPADesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 109;
    property ufJPAEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 110;
    property ufJPALineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 111;
    property ufJPALineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 112;
    property ufJSADesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 113;
    property ufJSAEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 114;
    property ufJSALineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 115;
    property ufJSALineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 116;
    property ufSRNDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 89;
    property ufSRNEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 90;
    property ufSRNLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 91;
    property ufSRNLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 92;
    property ufPRNDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 93;
    property ufPRNEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 94;
    property ufPRNLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 95;
    property ufPRNLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 96;
    property ufADJDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 19;
    property ufADJEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 36;
    property ufADJLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 37;
    property ufADJLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 38;
    property ufCustDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 39;
    property ufEmployeeDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 40;
    property ufJobDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 41;
    property ufLineTypeDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 42;
    property ufNOMDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 43;
    property ufNOMEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 44;
    property ufNOMLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 45;
    property ufNOMLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 46;
    property ufPINDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 47;
    property ufPINEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 48;
    property ufPINLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 49;
    property ufPINLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 50;
    property ufPORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 51;
    property ufPOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 52;
    property ufPORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 53;
    property ufPORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 54;
    property ufPPYDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 55;
    property ufPPYEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 56;
    property ufPPYLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 57;
    property ufPPYLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 58;
    property ufPQUDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 59;
    property ufPQUEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 60;
    property ufPQULineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 61;
    property ufPQULineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 62;
    property ufSINDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 63;
    property ufSINEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 64;
    property ufSINLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 65;
    property ufSINLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 66;
    property ufSORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 67;
    property ufSOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 68;
    property ufSORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 69;
    property ufSORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 70;
    property ufSQUDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 71;
    property ufSQUEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 72;
    property ufSQULineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 73;
    property ufSQULineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 74;
    property ufSRCDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 75;
    property ufSRCEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 76;
    property ufSRCLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 77;
    property ufSRCLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 78;
    property ufStockDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 79;
    property ufSuppDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 80;
    property ufTSHDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 81;
    property ufTSHEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 82;
    property ufTSHLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 83;
    property ufTSHLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 84;
    property ufWORDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 85;
    property ufWOREnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 86;
    property ufWORLineDesc[Index: TUserDefinedFieldNo]: WideString readonly dispid 87;
    property ufWORLineEnabled[Index: TUserDefinedFieldNo]: WordBool readonly dispid 88;
    property ufAccount1: WideString readonly dispid 1;
    property ufAccount2: WideString readonly dispid 2;
    property ufAccount3: WideString readonly dispid 3;
    property ufAccount4: WideString readonly dispid 4;
    property ufTrans1: WideString readonly dispid 5;
    property ufTrans2: WideString readonly dispid 6;
    property ufTrans3: WideString readonly dispid 7;
    property ufTrans4: WideString readonly dispid 8;
    property ufStock1: WideString readonly dispid 9;
    property ufStock2: WideString readonly dispid 10;
    property ufStock3: WideString readonly dispid 11;
    property ufStock4: WideString readonly dispid 12;
    property ufLine1: WideString readonly dispid 13;
    property ufLine2: WideString readonly dispid 14;
    property ufLine3: WideString readonly dispid 15;
    property ufLine4: WideString readonly dispid 16;
    property ufJob1: WideString readonly dispid 17;
    property ufJob2: WideString readonly dispid 18;
    property ufTrans1Enabled: WordBool readonly dispid 20;
    property ufTrans2Enabled: WordBool readonly dispid 21;
    property ufTrans3Enabled: WordBool readonly dispid 22;
    property ufTrans4Enabled: WordBool readonly dispid 23;
    property ufLine1Enabled: WordBool readonly dispid 24;
    property ufLine2Enabled: WordBool readonly dispid 25;
    property ufLine3Enabled: WordBool readonly dispid 26;
    property ufLine4Enabled: WordBool readonly dispid 27;
    property ufLineType1: WideString readonly dispid 28;
    property ufLineType2: WideString readonly dispid 29;
    property ufLineType3: WideString readonly dispid 30;
    property ufLineType4: WideString readonly dispid 31;
    property ufLineType1Enabled: WordBool readonly dispid 32;
    property ufLineType2Enabled: WordBool readonly dispid 33;
    property ufLineType3Enabled: WordBool readonly dispid 34;
    property ufLineType4Enabled: WordBool readonly dispid 35;
  end;

// *********************************************************************//
// Interface: ITransactionLine9
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2849FF44-1A4B-4421-B787-E76A5D63419D}
// *********************************************************************//
  ITransactionLine9 = interface(ITransactionLine8)
    ['{2849FF44-1A4B-4421-B787-E76A5D63419D}']
    function Get_tlThresholdCode: WideString; safecall;
    procedure Set_tlThresholdCode(const Value: WideString); safecall;
    property tlThresholdCode: WideString read Get_tlThresholdCode write Set_tlThresholdCode;
  end;

// *********************************************************************//
// DispIntf:  ITransactionLine9Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2849FF44-1A4B-4421-B787-E76A5D63419D}
// *********************************************************************//
  ITransactionLine9Disp = dispinterface
    ['{2849FF44-1A4B-4421-B787-E76A5D63419D}']
    property tlThresholdCode: WideString dispid 114;
    property tlUserField5: WideString dispid 108;
    property tlUserField6: WideString dispid 109;
    property tlUserField7: WideString dispid 110;
    property tlUserField8: WideString dispid 111;
    property tlUserField9: WideString dispid 112;
    property tlUserField10: WideString dispid 113;
    property tlReference: WideString dispid 104;
    property tlReceiptNo: WideString dispid 105;
    property tlFromPostCode: WideString dispid 106;
    property tlToPostCode: WideString dispid 107;
    property tlECService: WordBool dispid 99;
    property tlECServiceStartDate: WideString dispid 100;
    property tlECServiceEndDate: WideString dispid 101;
    property tlECSalesTaxReported: Double readonly dispid 102;
    property tlECPurchaseServiceTax: Double readonly dispid 103;
    procedure LinkToSOR(const SORLine: ITransactionLine); dispid 96;
    property tlMultiBuyDiscounts: IMultiBuyDiscounts readonly dispid 97;
    property tlTotals[Index: TTransLineTotalsType]: Double readonly dispid 98;
    property tlMultiBuyDiscount: Double dispid 91;
    property tlMultiBuyDiscountFlag: WideString dispid 92;
    property tlTransValueDiscount: Double dispid 93;
    property tlTransValueDiscountFlag: WideString dispid 94;
    property tlTransValueDiscountType: TTransValueDiscountType dispid 95;
    property tlAsReturn: ITransactionLineAsReturn readonly dispid 86;
    function CreateReturn: ITransactionLineReturnCreate; dispid 88;
    property tlSerialReturnQty: Double readonly dispid 89;
    property tlBinReturnQty: Double readonly dispid 90;
    property tlMultiBin: ITransactionLineMultiBin readonly dispid 70;
    property tlAltStockCodeI: IAltStockCode readonly dispid 71;
    property tlRunNo: Integer readonly dispid 72;
    property tlStockDeductQty: Double readonly dispid 73;
    property tlUseQtyMul: WordBool readonly dispid 74;
    property tlReconciliationDate: WideString readonly dispid 76;
    property tlB2BLinkFolio: Integer readonly dispid 77;
    property tlB2BLineNo: Integer readonly dispid 78;
    property tlCOSDailyRate: Double readonly dispid 79;
    property tlVATIncValue: Double dispid 80;
    property tlBinQty: Double readonly dispid 81;
    procedure ExplodeBOM; dispid 82;
    property tlQtyPack: Double readonly dispid 84;
    property tlAsApplication: ITransactionLineAsApplication readonly dispid 87;
    procedure AddDescriptionLines; dispid 85;
    property tlAsNOM: ITransactionLineAsNOM readonly dispid 61;
    property tlAsTSH: ITransactionLineAsTSH readonly dispid 62;
    property tlAsADJ: ITransactionLineAsADJ readonly dispid 63;
    property tlAsWOR: ITransactionLineAsWOR readonly dispid 64;
    property tlAsPayLine: ITransactionLineAsPayLine readonly dispid 65;
    function Print(PrintAs: TTransactionLinePrintMode): IPrintJob; dispid 83;
    property tlYear: Smallint dispid 66;
    property tlPeriod: Smallint dispid 67;
    property tlNominalMode: TNominalModeType readonly dispid 69;
    property tlDocType: TDocTypes readonly dispid 175;
    function UpdateUplift(NewAmount: Double): Integer; dispid 200;
    property tlCostApport: Double dispid 176;
    property tlCISRate: Double dispid 172;
    property tlLineSource: Byte readonly dispid 177;
    property tlCISRateCode: WideString dispid 75;
    function ImportDefaultsForUser(const UserID: WideString): Integer; dispid 270;
    property tlLineNo: Integer dispid 1;
    property tlGLCode: Integer dispid 2;
    property tlCurrency: Integer dispid 3;
    property tlCompanyRate: Double dispid 4;
    property tlDailyRate: Double dispid 51;
    property tlCostCentre: WideString dispid 6;
    property tlDepartment: WideString dispid 7;
    property tlStockCode: WideString dispid 8;
    property tlQty: Double dispid 9;
    property tlQtyMul: Double dispid 10;
    property tlNetValue: Double dispid 11;
    property tlDiscount: Double dispid 12;
    property tlDiscFlag: WideString dispid 13;
    property tlVATCode: WideString dispid 14;
    property tlVATAmount: Double dispid 15;
    property tlPayment: WordBool dispid 16;
    property tlQtyWOFF: Double dispid 17;
    property tlQtyDel: Double dispid 18;
    property tlCost: Double dispid 19;
    property tlLineDate: WideString dispid 20;
    property tlItemNo: WideString dispid 21;
    property tlDescr: WideString dispid 22;
    property tlJobCode: WideString dispid 23;
    property tlAnalysisCode: WideString dispid 24;
    property tlUnitWeight: Double dispid 25;
    property tlLocation: WideString dispid 26;
    property tlChargeCurrency: Integer dispid 27;
    property tlAcCode: WideString readonly dispid 28;
    property tlLineType: TTransactionLineType dispid 29;
    property tlFolioNum: Integer readonly dispid 30;
    property tlLineClass: WideString readonly dispid 31;
    property tlRecStatus: Smallint dispid 32;
    property tlSOPFolioNum: Integer dispid 33;
    property tlSOPABSLineNo: Integer dispid 34;
    property tlABSLineNo: Integer readonly dispid 35;
    property tlUserField1: WideString dispid 36;
    property tlUserField2: WideString dispid 37;
    property tlUserField3: WideString dispid 38;
    property tlUserField4: WideString dispid 39;
    property tlSSDUpliftPerc: Double dispid 40;
    property tlSSDCommodCode: WideString dispid 41;
    property tlSSDSalesUnit: Double dispid 42;
    property tlSSDUseLineValues: WordBool dispid 43;
    property tlPriceMultiplier: Double dispid 44;
    property tlQtyPicked: Double dispid 45;
    property tlQtyPickedWO: Double dispid 46;
    property tlSSDCountry: WideString dispid 47;
    property tlInclusiveVATCode: WideString dispid 48;
    property tlBOMKitLink: Integer dispid 49;
    property tlOurRef: WideString readonly dispid 5;
    function entLineTotal(ApplyDiscounts: WordBool; SettleDiscPerc: Double): Double; dispid 50;
    procedure Save; dispid 54;
    procedure Cancel; dispid 52;
    function entDefaultVATCode(const AccountVATCode: WideString; const StockVATCode: WideString): WideString; dispid 53;
    procedure CalcVATAmount; dispid 55;
    procedure CalcStockPrice; dispid 56;
    property tlStockCodeI: IStock readonly dispid 57;
    procedure ImportDefaults; dispid 68;
    property tlAnalyisCodeI: IJobAnalysis readonly dispid 58;
    property tlJobCodeI: IJob readonly dispid 59;
    property tlSerialBatch: ITransactionLineSerialBatch readonly dispid 60;
  end;

// *********************************************************************//
// Interface: IJob6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60A7B1E4-FA8C-4715-A0E4-97C058B61225}
// *********************************************************************//
  IJob6 = interface(IJob5)
    ['{60A7B1E4-FA8C-4715-A0E4-97C058B61225}']
    function Get_jrQSCode: WideString; safecall;
    procedure Set_jrQSCode(const Value: WideString); safecall;
    property jrQSCode: WideString read Get_jrQSCode write Set_jrQSCode;
  end;

// *********************************************************************//
// DispIntf:  IJob6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60A7B1E4-FA8C-4715-A0E4-97C058B61225}
// *********************************************************************//
  IJob6Disp = dispinterface
    ['{60A7B1E4-FA8C-4715-A0E4-97C058B61225}']
    property jrQSCode: WideString dispid 57;
    property jrUserField5: WideString dispid 51;
    property jrUserField6: WideString dispid 52;
    property jrUserField7: WideString dispid 53;
    property jrUserField8: WideString dispid 54;
    property jrUserField9: WideString dispid 55;
    property jrUserField10: WideString dispid 56;
    property jrUserField3: WideString dispid 49;
    property jrUserField4: WideString dispid 50;
    property jrApplications: IJobApplications readonly dispid 47;
    property jrTimeRates: ITimeRates readonly dispid 48;
    property jrLinks: ILinks readonly dispid 38;
    property jrJobActual: IJobActual readonly dispid 39;
    property jrPurchaseRetention: IJobRetention readonly dispid 40;
    property jrSalesRetention: IJobRetention readonly dispid 41;
    property jrSummaryBudget: ISummaryJobBudget readonly dispid 42;
    property jrAnalysisBudget: IAnalysisJobBudget readonly dispid 43;
    property jrTimeAndStockBudget: ITimeAndStockJobBudget readonly dispid 44;
    function Invoice: IJobInvoice; dispid 45;
    function Print(PrintAs: TJobPrintMode): IPrintJob; dispid 46;
    property jrCode: WideString dispid 1;
    property jrDesc: WideString dispid 2;
    property jrFolio: Integer readonly dispid 3;
    property jrAcCode: WideString dispid 4;
    property jrParent: WideString dispid 5;
    property jrAltCode: WideString dispid 6;
    property jrCompleted: WordBool dispid 7;
    property jrContact: WideString dispid 8;
    property jrManager: WideString dispid 9;
    property jrChargeType: TJobChargeType dispid 10;
    property jrQuotePrice: Double dispid 11;
    property jrQuotePriceCurr: Smallint dispid 12;
    property jrStartDate: WideString dispid 13;
    property jrEndDate: WideString dispid 14;
    property jrRevisedEndDate: WideString dispid 15;
    property jrSORNumber: WideString dispid 16;
    property jrVATCode: WideString dispid 17;
    property jrJobType: WideString dispid 20;
    property jrType: TJobTypeType dispid 21;
    property jrStatus: TJobStatusType dispid 22;
    property jrUserField1: WideString dispid 23;
    property jrUserField2: WideString dispid 24;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TJobIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const JobCode: WideString): WideString; dispid 18;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 19;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; dispid 25;
    function Add: IJob; dispid 26;
    function Update: IJob; dispid 27;
    function Clone: IJob; dispid 28;
    function Save: Integer; dispid 29;
    procedure Cancel; dispid 30;
    function BuildDescIndex(const Description: WideString): WideString; dispid 31;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; dispid 32;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; dispid 33;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 34;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 35;
    property jrNotes: INotes readonly dispid 36;
    property jrJobTypeI: IJobType readonly dispid 37;
  end;

// *********************************************************************//
// Interface: IUserProfile3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A3ED164-5AEB-47FD-BEEB-A6E831E7BB7E}
// *********************************************************************//
  IUserProfile3 = interface(IUserProfile2)
    ['{3A3ED164-5AEB-47FD-BEEB-A6E831E7BB7E}']
    function Get_upShowProductTypesInTree: WordBool; safecall;
    function Get_upShowStockCodesInTree: WordBool; safecall;
    property upShowProductTypesInTree: WordBool read Get_upShowProductTypesInTree;
    property upShowStockCodesInTree: WordBool read Get_upShowStockCodesInTree;
  end;

// *********************************************************************//
// DispIntf:  IUserProfile3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A3ED164-5AEB-47FD-BEEB-A6E831E7BB7E}
// *********************************************************************//
  IUserProfile3Disp = dispinterface
    ['{3A3ED164-5AEB-47FD-BEEB-A6E831E7BB7E}']
    property upShowProductTypesInTree: WordBool readonly dispid 10;
    property upShowStockCodesInTree: WordBool readonly dispid 11;
    property upShowGLCodesInTree: WordBool readonly dispid 9;
    property Index: TUserIndexType dispid 20;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildUserIDIndex(const UserID: WideString): WideString; dispid 21;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    property KeyString: WideString readonly dispid 16777222;
    property upUserID: WideString readonly dispid 1;
    property upName: WideString readonly dispid 2;
    property upPWordExpiryMode: TPasswordExpiryType readonly dispid 4;
    property upPWordExpiryDays: Integer readonly dispid 5;
    property upPWordExpiryDate: WideString readonly dispid 6;
    property upLockOutMins: Integer readonly dispid 7;
    property upEmail: WideString readonly dispid 8;
    property upDefSRICust: WideString readonly dispid 26;
    property upDefPPISupp: WideString readonly dispid 27;
    property upMaxSalesAuth: Double readonly dispid 28;
    property upMaxPurchAuth: Double readonly dispid 29;
    property upDefSalesBankGL: Integer readonly dispid 30;
    property upDefPurchBankGL: Integer readonly dispid 31;
    property upReportPrinter: WideString readonly dispid 32;
    property upFormPrinter: WideString readonly dispid 33;
    property upEmailSignature: WideString readonly dispid 34;
    property upFaxSignature: WideString readonly dispid 35;
    property upCCDeptRule: TPriorityRuleType readonly dispid 36;
    property upDefCostCentre: WideString readonly dispid 37;
    property upDefDepartment: WideString readonly dispid 38;
    property upDefLocation: WideString readonly dispid 39;
    property upDefLocRule: TPriorityRuleType readonly dispid 40;
    property upSecurityFlags[Index: Integer]: TSecurityResultType readonly dispid 41;
    function Clone: IUserProfile; dispid 3;
  end;

// *********************************************************************//
// Interface: IJob7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42E5E1AF-3CB1-4009-B364-111DF0761BC9}
// *********************************************************************//
  IJob7 = interface(IJob6)
    ['{42E5E1AF-3CB1-4009-B364-111DF0761BC9}']
    function Delete(DeleteLinkFiles: WordBool): Integer; safecall;
    function CanDelete: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IJob7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42E5E1AF-3CB1-4009-B364-111DF0761BC9}
// *********************************************************************//
  IJob7Disp = dispinterface
    ['{42E5E1AF-3CB1-4009-B364-111DF0761BC9}']
    function Delete(DeleteLinkFiles: WordBool): Integer; dispid 58;
    function CanDelete: WordBool; dispid 59;
    property jrQSCode: WideString dispid 57;
    property jrUserField5: WideString dispid 51;
    property jrUserField6: WideString dispid 52;
    property jrUserField7: WideString dispid 53;
    property jrUserField8: WideString dispid 54;
    property jrUserField9: WideString dispid 55;
    property jrUserField10: WideString dispid 56;
    property jrUserField3: WideString dispid 49;
    property jrUserField4: WideString dispid 50;
    property jrApplications: IJobApplications readonly dispid 47;
    property jrTimeRates: ITimeRates readonly dispid 48;
    property jrLinks: ILinks readonly dispid 38;
    property jrJobActual: IJobActual readonly dispid 39;
    property jrPurchaseRetention: IJobRetention readonly dispid 40;
    property jrSalesRetention: IJobRetention readonly dispid 41;
    property jrSummaryBudget: ISummaryJobBudget readonly dispid 42;
    property jrAnalysisBudget: IAnalysisJobBudget readonly dispid 43;
    property jrTimeAndStockBudget: ITimeAndStockJobBudget readonly dispid 44;
    function Invoice: IJobInvoice; dispid 45;
    function Print(PrintAs: TJobPrintMode): IPrintJob; dispid 46;
    property jrCode: WideString dispid 1;
    property jrDesc: WideString dispid 2;
    property jrFolio: Integer readonly dispid 3;
    property jrAcCode: WideString dispid 4;
    property jrParent: WideString dispid 5;
    property jrAltCode: WideString dispid 6;
    property jrCompleted: WordBool dispid 7;
    property jrContact: WideString dispid 8;
    property jrManager: WideString dispid 9;
    property jrChargeType: TJobChargeType dispid 10;
    property jrQuotePrice: Double dispid 11;
    property jrQuotePriceCurr: Smallint dispid 12;
    property jrStartDate: WideString dispid 13;
    property jrEndDate: WideString dispid 14;
    property jrRevisedEndDate: WideString dispid 15;
    property jrSORNumber: WideString dispid 16;
    property jrVATCode: WideString dispid 17;
    property jrJobType: WideString dispid 20;
    property jrType: TJobTypeType dispid 21;
    property jrStatus: TJobStatusType dispid 22;
    property jrUserField1: WideString dispid 23;
    property jrUserField2: WideString dispid 24;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property Index: TJobIndex dispid 16777221;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function StepFirst: Integer; dispid 16777233;
    function StepPrevious: Integer; dispid 16777234;
    function StepNext: Integer; dispid 16777235;
    function StepLast: Integer; dispid 16777236;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function BuildCodeIndex(const JobCode: WideString): WideString; dispid 18;
    function BuildFolioIndex(Folio: Integer): WideString; dispid 19;
    function BuildParentIndex(const ParentCode: WideString; const JobCode: WideString): WideString; dispid 25;
    function Add: IJob; dispid 26;
    function Update: IJob; dispid 27;
    function Clone: IJob; dispid 28;
    function Save: Integer; dispid 29;
    procedure Cancel; dispid 30;
    function BuildDescIndex(const Description: WideString): WideString; dispid 31;
    function BuildCompletedCodeIndex(Completed: WordBool; const JobCode: WideString): WideString; dispid 32;
    function BuildCompletedDescIndex(Completed: WordBool; const Description: WideString): WideString; dispid 33;
    function BuildAltCodeIndex(const AlternateCode: WideString): WideString; dispid 34;
    function BuildAccountIndex(const AccountCode: WideString): WideString; dispid 35;
    property jrNotes: INotes readonly dispid 36;
    property jrJobTypeI: IJobType readonly dispid 37;
  end;

// *********************************************************************//
// Interface: ISummaryJobBudget3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C97B9870-7C91-44CF-B20D-6342B0D66914}
// *********************************************************************//
  ISummaryJobBudget3 = interface(ISummaryJobBudget)
    ['{C97B9870-7C91-44CF-B20D-6342B0D66914}']
    function Get_jbCurrency: Integer; safecall;
    procedure Set_jbCurrency(Value: Integer); safecall;
    property jbCurrency: Integer read Get_jbCurrency write Set_jbCurrency;
  end;

// *********************************************************************//
// DispIntf:  ISummaryJobBudget3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C97B9870-7C91-44CF-B20D-6342B0D66914}
// *********************************************************************//
  ISummaryJobBudget3Disp = dispinterface
    ['{C97B9870-7C91-44CF-B20D-6342B0D66914}']
    property jbCurrency: Integer dispid 11;
    property jbCategory: TJobBudgetCategoryType readonly dispid 14;
    property jbCategoryString: WideString readonly dispid 15;
    function BuildCategoryIndex(Category: TJobBudgetCategoryType): WideString; dispid 1;
    function Update: ISummaryJobBudget; dispid 2;
    function Clone: ISummaryJobBudget; dispid 3;
    property Index: TSummaryJobBudgetIndex dispid 17;
    property jbAnalysisType: TAnalysisType dispid 4;
    property jbUnitPrice: Double dispid 6;
    property jbOriginalQty: Double dispid 7;
    property jbRevisedQty: Double dispid 8;
    property jbOriginalValue: Double dispid 9;
    property jbRevisedValue: Double dispid 10;
    property jbPeriod: Integer dispid 12;
    property jbYear: Integer dispid 13;
    function GetFirst: Integer; dispid 16777217;
    function GetPrevious: Integer; dispid 16777218;
    function GetNext: Integer; dispid 16777219;
    function GetLast: Integer; dispid 16777220;
    property KeyString: WideString readonly dispid 16777222;
    property Position: Integer dispid 16777224;
    function RestorePosition: Integer; dispid 16777225;
    function SavePosition: Integer; dispid 16777232;
    function GetLessThan(const SearchKey: WideString): Integer; dispid 16777238;
    function GetLessThanOrEqual(const SearchKey: WideString): Integer; dispid 16777239;
    function GetEqual(const SearchKey: WideString): Integer; dispid 16777240;
    function GetGreaterThan(const SearchKey: WideString): Integer; dispid 16777241;
    function GetGreaterThanOrEqual(const SearchKey: WideString): Integer; dispid 16777242;
    function Save: Integer; dispid 5;
    procedure Cancel; dispid 16;
    property jbOriginalValuation: Double dispid 51;
    property jbRevisedValuation: Double dispid 52;
    property jbUplift: Double dispid 53;
    property jbCostOverhead: Double dispid 54;
  end;

// *********************************************************************//
// The Class CoToolkit provides a Create and CreateRemote method to          
// create instances of the default interface IToolkit3 exposed by              
// the CoClass Toolkit. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoToolkit = class
    class function Create: IToolkit3;
    class function CreateRemote(const MachineName: string): IToolkit3;
  end;

implementation

uses ComObj;

class function CoToolkit.Create: IToolkit3;
begin
  Result := CreateComObject(CLASS_Toolkit) as IToolkit3;
end;

class function CoToolkit.CreateRemote(const MachineName: string): IToolkit3;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Toolkit) as IToolkit3;
end;

end.
